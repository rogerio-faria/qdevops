<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CloudinaryDotNet</name>
    </assembly>
    <members>
        <member name="T:CloudinaryDotNet.Api">
            <summary>
            Technological layer to work with cloudinary API.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Api.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Api"/> class.
            Default parameterless constructor. Assumes that environment variable CLOUDINARY_URL is set.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Api.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Api"/> class with cloudinary URL.
            </summary>
            <param name="cloudinaryUrl">Cloudinary URL.</param>
        </member>
        <member name="M:CloudinaryDotNet.Api.#ctor(CloudinaryDotNet.Account,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Api"/> class with initial parameters.
            </summary>
            <param name="account">Cloudinary account.</param>
            <param name="usePrivateCdn">Whether to use private Content Delivery Network.</param>
            <param name="privateCdn">Private Content Delivery Network.</param>
            <param name="shortenUrl">Whether to use shortened URL when possible.</param>
            <param name="cSubDomain">Whether to use sub domain.</param>
        </member>
        <member name="M:CloudinaryDotNet.Api.#ctor(CloudinaryDotNet.Account)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Api"/> class with account.
            </summary>
            <param name="account">Cloudinary account.</param>
        </member>
        <member name="M:CloudinaryDotNet.Api.BuildCallbackUrl(System.String)">
            <summary>
            Check file path for callback url.
            </summary>
            <param name="path">File path to check.</param>
            <returns>Provided path if it matches the callback url format.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Account">
            <summary>
            Cloudinary account.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Account.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Account"/> class.
            Default constructor.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Account.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Account"/> class.
            Parameterized constructor.
            </summary>
            <param name="cloud">Cloud name.</param>
            <param name="apiKey">API key.</param>
            <param name="apiSecret">API secret.</param>
        </member>
        <member name="M:CloudinaryDotNet.Account.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Account"/> class.
            Parameterized constructor.
            </summary>
            <param name="cloud">Cloud name.</param>
        </member>
        <member name="P:CloudinaryDotNet.Account.Cloud">
            <summary>
            Gets or sets cloud name.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Account.ApiKey">
            <summary>
            Gets or sets API key.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Account.ApiSecret">
            <summary>
            Gets or sets API secret.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.AdvOcr">
            <summary>
            Details of executing an ADV_OCR engine.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AdvOcr.Status">
            <summary>
            Gets or sets the status of the OCR operation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AdvOcr.Data">
            <summary>
            Gets or sets data returned by OCR plugin.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.AdvOcrData">
            <summary>
            Data returned by OCR plugin.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AdvOcrData.TextAnnotations">
            <summary>
            Gets or sets annotations of the recognized text.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AdvOcrData.FullTextAnnotation">
            <summary>
            Gets or sets this annotation provides the structural hierarchy for the OCR detected text.
            If present, text (OCR) detection or document (OCR) text detection has completed successfully.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.AssetVersion">
            <summary>
            Details of asset version.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AssetVersion.VersionId">
            <summary>
            Gets or sets asset version identifier.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AssetVersion.Version">
            <summary>
            Gets or sets asset version number.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AssetVersion.Size">
            <summary>
            Gets or sets asset size in bytes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AssetVersion.Time">
            <summary>
            Gets or sets time when version created.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AssetVersion.Restorable">
            <summary>
            Gets or sets a value indicating whether asset version can be restored.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AssetVersion.Url">
            <summary>
            Gets or sets asset version url.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Block">
            <summary>
            Logical element on the page.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Block.Property">
            <summary>
            Gets or sets additional information detected on the page.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Block.BoundingBox">
            <summary>
            Gets or sets the bounding box for the block.
            The vertices are in the order of top-left, top-right, bottom-right, bottom-left.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.BoundingBlock">
            <summary>
            The outer bounding polygon for the detected image annotation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BoundingBlock.Vertices">
            <summary>
            Gets or sets the bounding polygon vertices.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.BoundingBox">
            <summary>
            Identifies the bounding box around the face.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BoundingBox.TopLeft">
            <summary>
            Gets or sets top left point of the bounding box.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BoundingBox.Size">
            <summary>
            Gets or sets size of the bounding box.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.CinemagraphAnalysis">
            <summary>
            Details of the cinemagraph analysis.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.CinemagraphAnalysis.CinemagraphScore">
            <summary>
            Gets or sets value between 0-1, where 0 means definitely not a cinemagraph
            and 1 means definitely a cinemagraph).
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ColorblindAccessibilityAnalysis">
            <summary>
            Details of colorblind accessibility analysis.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ColorblindAccessibilityAnalysis.DistinctEdges">
            <summary>
            Gets or sets distinct edges value between 0-1.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ColorblindAccessibilityAnalysis.DistinctColors">
            <summary>
            Gets or sets distinct colors value between 0-1.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ColorblindAccessibilityAnalysis.MostIndistinctPair">
            <summary>
            Gets or sets most indistinct pair of colors.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Coordinates">
            <summary>
            The coordinates of a single region contained in an image that is subsequently used for cropping the image using
            the custom gravity mode.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Coordinates.Custom">
            <summary>
            Gets or sets a list of custom coordinates.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Coordinates.Faces">
            <summary>
            Gets or sets a list of coordinates of detected faces.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.AccessibilityAnalysis">
            <summary>
            Details of the accessibility analysis.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AccessibilityAnalysis.ColorblindAccessibilityAnalysis">
            <summary>
            Gets or sets details of colorblind accessibility analysis.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AccessibilityAnalysis.ColorblindAccessibilityScore">
            <summary>
            Gets or sets value between 0-1.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Derived">
            <summary>
            The list of derived assets generated (and cached) from the original media asset, including the transformation
            applied, size and URL for accessing the derived media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Derived.Transformation">
            <summary>
            Gets or sets the transformation applied to the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Derived.Format">
            <summary>
            Gets or sets format of the derived asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Derived.Length">
            <summary>
            Gets or sets size of the derived asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Derived.Bytes">
            <summary>
            Gets or sets size of the derived asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Derived.Id">
            <summary>
            Gets or sets id of the derived resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Derived.Url">
            <summary>
            Gets or sets uRL for accessing the derived media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Derived.SecureUrl">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the derived media asset.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DetectedLanguage">
            <summary>
            Detected language for a structural component.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DetectedLanguage.LanguageCode">
            <summary>
            Gets or sets the BCP-47 language code, such as "en-US" or "sr-Latn".
            For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Detection">
            <summary>
            Requested information from executing a Rekognition face add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Detection.RekognitionFace">
            <summary>
            Gets or sets details of the result of recognition.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Face">
            <summary>
            Structure containing attributes of the face that the algorithm detected.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.BoundingBox">
            <summary>
            Gets or sets bounding box of the face.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Confidence">
            <summary>
            Gets or sets confidence level that the bounding box contains a face (and not a different object such as a tree).
            Valid Range: Minimum value of 0. Maximum value of 100.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Age">
            <summary>
            Gets or sets estimated age of the person.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Smile">
            <summary>
            Gets or sets indication whether or not the face is smiling, and the confidence level in the determination.
            Float values: 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Glasses">
            <summary>
            Gets or sets score of whether the person is wearing glasses.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Sunglasses">
            <summary>
            Gets or sets indication the confidence level whether the face is wearing sunglasses.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Beard">
            <summary>
            Gets or sets indication the confidence level whether the face has beard.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Mustache">
            <summary>
            Gets or sets indication the confidence level whether the face has a mustache.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeClosed">
            <summary>
            Gets or sets score of whether the eyes of the person are closed.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.MouthOpenWide">
            <summary>
            Gets or sets score of whether the mouse of the person is wide open.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Beauty">
            <summary>
            Gets or sets score of whether the detected face of the person is treated as beautiful.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Gender">
            <summary>
            Gets or sets whether the person is a male or a female (high value towards 1 means male).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Race">
            <summary>
            Gets or sets detected data about the person's race.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Emotion">
            <summary>
            Gets or sets the emotions detected on the face, and the confidence level in the determination.
            For example, HAPPY, SAD, and ANGRY.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Quality">
            <summary>
            Gets or sets identifies image brightness and sharpness.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.Pose">
            <summary>
            Gets or sets indication the pose of the face as determined by its pitch, roll, and yaw.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeLeftPosition">
            <summary>
            Gets or sets position of the left eye.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeRightPosition">
            <summary>
            Gets or sets position of the right eye.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeLeft_Left">
            <summary>
            Gets or sets left point of the left eye.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeLeft_Right">
            <summary>
            Gets or sets right point of the left eye.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeLeft_Up">
            <summary>
            Gets or sets up point of the left eye.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeLeft_Down">
            <summary>
            Gets or sets down point of the left eye.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeRight_Left">
            <summary>
            Gets or sets left point of the right eye.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeRight_Right">
            <summary>
            Gets or sets right point of the right eye.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeRight_Up">
            <summary>
            Gets or sets up point of the right eye.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.EyeRight_Down">
            <summary>
            Gets or sets down point of the right eye.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.NosePosition">
            <summary>
            Gets or sets position of the nose.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.NoseLeft">
            <summary>
            Gets or sets left point of the nose.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.NoseRight">
            <summary>
            Gets or sets right point of the nose.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.MouthLeft">
            <summary>
            Gets or sets left point of the mouth.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.MouthRight">
            <summary>
            Gets or sets right point of the mouth.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.MouthUp">
            <summary>
            Gets or sets up point of the mouth.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Face.MouthDown">
            <summary>
            Gets or sets down point of the mouth.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.FullTextAnnotation">
            <summary>
            For multi-page files (e.g. PDFs), a node indicating the containing page.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.FullTextAnnotation.Pages">
            <summary>
            Gets or sets a list of detected pages.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.FullTextAnnotation.Text">
            <summary>
            Gets or sets recognized text.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Info">
            <summary>
            Any requested information from executing one of the Cloudinary Add-ons on the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Info.Detection">
            <summary>
            Gets or sets requested information from executing a Rekognition face add-ons.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Info.Ocr">
            <summary>
            Gets or sets requested information from executing an OCR add-ons.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListResourcesByModerationParams">
            <summary>
            Allows to filter resources by moderation kind/status.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesByModerationParams.ModerationKind">
            <summary>
            Gets or sets the kind of the moderation (manual, etc.).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesByModerationParams.ModerationStatus">
            <summary>
            Gets or sets the moderation status.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListResourcesByModerationParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListResourcesByModerationParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListResourcesByPrefixParams">
            <summary>
            Allow to filter resources by prefix.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesByPrefixParams.Prefix">
            <summary>
            Gets or sets find all resources that their public ID starts with the given prefix.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListResourcesByPrefixParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListResourcesByTagParams">
            <summary>
            Allows to filter resources by tag.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesByTagParams.Tag">
            <summary>
            Gets or sets the tag to filter resources.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListResourcesByTagParams.Check">
            <summary>
            Validate object model.
            </summary>
            <exception cref="T:System.ArgumentException">Tag must be set to list resource by tag.</exception>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListResourcesByTagParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListSpecificResourcesParams">
            <summary>
            Allows to filter resources by specific public identifiers.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListSpecificResourcesParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.ListSpecificResourcesParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListSpecificResourcesParams.PublicIds">
            <summary>
            Gets or sets the public identifiers to list.
            When set it overrides usage of <see cref="P:CloudinaryDotNet.Actions.ListResourcesParams.Direction"/>.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListSpecificResourcesParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Ocr">
            <summary>
            Details of executing an OCR add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Ocr.AdvOcr">
            <summary>
            Gets or sets details of executing an ADV_OCR engine.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Page">
            <summary>
            Detected page from OCR.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Page.Property">
            <summary>
            Gets or sets additional information detected on the page.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Page.Width">
            <summary>
            Gets or sets page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Page.Height">
            <summary>
            Gets or sets page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Page.Blocks">
            <summary>
            Gets or sets list of text blocks on this page.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.PageProperty">
            <summary>
            Additional information detected on the page.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.PageProperty.DetectedLanguages">
            <summary>
            Gets or sets a list of detected languages together with confidence.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Paragraph">
            <summary>
            Structural unit of text representing a number of words in certain order.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Paragraph.Words">
            <summary>
            Gets or sets list of words in this paragraph.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Paragraph.Text">
            <summary>
            Gets or sets the actual text representation of this paragraph.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Point">
            <summary>
            Point, represented by X and Y coordinates.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Point.X">
            <summary>
            Gets or sets x - coordinate.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Point.Y">
            <summary>
            Gets or sets y - coordinate.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Predominant">
            <summary>
            The predominant colors in the image according to both a Google palette and a Cloudinary palette.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Predominant.Google">
            <summary>
            Gets or sets google palette details.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Predominant.Cloudinary">
            <summary>
            Gets or sets cloudinary palette details.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.QualityAnalysis">
            <summary>
            Details of the quality analysis.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.JpegQuality">
            <summary>
            Gets or sets jpeg quality value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.JpegChroma">
            <summary>
            Gets or sets jpeg chroma value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.Focus">
            <summary>
            Gets or sets focus value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.Noise">
            <summary>
            Gets or sets noise value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.Contrast">
            <summary>
            Gets or sets contrast value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.Exposure">
            <summary>
            Gets or sets exposure value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.Saturation">
            <summary>
            Gets or sets saturation value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.Lighting">
            <summary>
            Gets or sets lighting value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.PixelScore">
            <summary>
            Gets or sets pixel score value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.ColorScore">
            <summary>
            Gets or sets color score value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.Dct">
            <summary>
            Gets or sets DCT value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.Blockiness">
            <summary>
            Gets or sets blockiness value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.ChromaSubsampling">
            <summary>
            Gets or sets chroma subsampling value.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.QualityAnalysis.Resolution">
            <summary>
            Gets or sets resolution value.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.RekognitionFace">
            <summary>
            Details of each face found in the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RekognitionFace.Status">
            <summary>
            Gets or sets status of the recognition process.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RekognitionFace.Faces">
            <summary>
            Gets or sets properties of each detected face.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Resource">
            <summary>
            Details of a single asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.ResourceType">
            <summary>
            Gets or sets the type of file. Possible values: image, raw, video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.Type">
            <summary>
            Gets or sets the storage type: upload, private, authenticated, facebook, twitter, gplus, instagram_name, gravatar,
            youtube, hulu, vimeo, animoto, worldstarhiphop or dailymotion.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.Created">
            <summary>
            Gets or sets the UTC date and time when the asset was originally uploaded in ISO8601 syntax: [yyyy-mm-dd]T[hh:mm:ss]Z.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.CreatedAt">
            <summary>
            Gets or sets the UTC date and time when the asset was originally uploaded in ISO8601 syntax: [yyyy-mm-dd]T[hh:mm:ss]Z.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.Width">
            <summary>
            Gets or sets the width of the media asset in pixels.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.Height">
            <summary>
            Gets or sets the height of the media asset in pixels.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.Tags">
            <summary>
            Gets or sets the list of tags currently assigned to the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.Backup">
            <summary>
            Gets or sets whether the asset is backed up to secondary storage.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.ModerationStatus">
            <summary>
            Gets or sets the current moderation status and details if any.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.Context">
            <summary>
            Gets or sets the key-value pairs of general textual context metadata attached to the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.FullyQualifiedPublicId">
            <summary>
            Gets the Fully Qualified Public ID.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Resource.AccessMode">
            <summary>
            Gets or sets the accessibility mode of the media asset: public, or authenticated.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.RestoredResource">
            <summary>
            Restored resource information.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.RestoredResource.m_resourceType">
            <summary>
            The type of file. Possible values: image, raw, video. Default: image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.PublicId">
            <summary>
            Gets or sets publicId of the created archive.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.Version">
            <summary>
            Gets or sets version of uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.Signature">
            <summary>
            Gets or sets the signature for verifying the response is a valid response from Cloudinary.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.Width">
            <summary>
            Gets or sets parameter "width" of the resource. Not relevant for raw files.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.Height">
            <summary>
            Gets or sets parameter "height" of the resource. Not relevant for raw files.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.Format">
            <summary>
            Gets or sets asset format.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.ResourceType">
            <summary>
            Gets get the cloudinary resource type.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.CreatedAt">
            <summary>
            Gets or sets the UTC date and time when the asset was originally uploaded in ISO8601 syntax: [yyyy-mm-dd]T[hh:mm:ss]Z.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.Tags">
            <summary>
            Gets or sets a list of tag names assigned to resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.Bytes">
            <summary>
            Gets or sets the size of the media asset in bytes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.Type">
            <summary>
            Gets or sets the storage type: upload, private, authenticated, facebook, twitter, gplus, instagram_name, gravatar,
            youtube, hulu, vimeo, animoto, worldstarhiphop or dailymotion.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.Placeholder">
            <summary>
            Gets or sets a value indicating whether a placeholder (default image) is currently used instead of displaying the image (due to moderation).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.BackupUrl">
            <summary>
            Gets or sets HTTP URL of asset backup.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoredResource.AccessMode">
            <summary>
            Gets or sets the accessibility mode of the media asset: public, or authenticated.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.SafeArrayConverter">
            <summary>
            Custom JSON converter to safely parse array values that might come as strings.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SafeArrayConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:CloudinaryDotNet.Actions.SafeArrayConverter"/> can write JSON.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SafeArrayConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SafeArrayConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>True if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SafeArrayConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="existingValue">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Size">
            <summary>
            A size of the block, represented by width and height.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Size.Width">
            <summary>
            Gets or sets width of the block.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Size.Height">
            <summary>
            Gets or sets width of the block.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Symbol">
            <summary>
            A single symbol representation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Symbol.Text">
            <summary>
            Gets or sets the actual UTF-8 representation of the symbol.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.TextAnnotation">
            <summary>
            TextAnnotation contains a structured representation of OCR extracted text.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextAnnotation.Locale">
            <summary>
            Gets or sets the detected locale of the text.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextAnnotation.Description">
            <summary>
            Gets or sets a description listing the entirety of the detected text content, with a newline character (\n) separating
            groups of text.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextAnnotation.BoundingPoly">
            <summary>
            Gets or sets the outer bounding polygon for the detected image annotation.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.TextBlock">
            <summary>
            A text element on the page.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextBlock.Paragraphs">
            <summary>
            Gets or sets list of paragraphs in this block.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextBlock.BlockType">
            <summary>
            Gets or sets detected block type (text, image etc) for this block.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Usage">
            <summary>
            Usage information about the objects in account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Usage.Used">
            <summary>
            Gets or sets a number of objects in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Usage.Limit">
            <summary>
            Gets or sets current limit of objects for account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Usage.UsedPercent">
            <summary>
            Gets or sets current usage percentage.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Usage.CreditsUsage">
            <summary>
            Gets or sets current usage of credits.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Word">
            <summary>
            A word representation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Word.Symbols">
            <summary>
            Gets or sets list of symbols in the word. The order of the symbols follows the natural reading order.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.AccessType">
            <summary>
            Access type for the asset.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.AccessType.Anonymous">
            <summary>
            Allows public access to the asset. The anonymous access type can optionally include start and/or end
            dates (in ISO 8601 format) that define when the asset is publically available.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.AccessType.Token">
            <summary>
            Requires either the token-based authentication or the cookie-based authentication for accessing the asset.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.AccessControlRule">
            <summary>
            Stores parameters for the asset access management.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AccessControlRule.AccessType">
            <summary>
            Gets or sets access type for the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AccessControlRule.Start">
            <summary>
            Gets or sets start date that defines when the asset is publicly available.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AccessControlRule.End">
            <summary>
            Gets or sets end date that defines when the asset is publicly available.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ArchiveCallMode">
            <summary>
            Either return a URL to the generated archive file ('download') or store it as a raw asset
            in your Cloudinary account('create').
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ArchiveCallMode.Download">
            <summary>
            Generates a signed URL that expires after 1 hour (by default). The URL can be accessed to dynamically
            create and then download an archive file based on the given parameter values. The resulting archive file
            is not cached or stored in your Cloudinary account.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ArchiveCallMode.Create">
            <summary>
            Generates an archive file based on the given parameter values (default target_format = zip), uploads the
            file to your Cloudinary account, returns a JSON response with the URLs for accessing the archive file,
            and can then be delivered like any other raw file uploaded to Cloudinary.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ArchiveFormat">
            <summary>
            The format for the generated archive.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ArchiveFormat.Zip">
            <summary>
            Specifies ZIP format for an archive
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ArchiveParams">
            <summary>
            Parameters for working with archives, common for both of the methods (create and download).
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.ArchiveParams"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.PublicIds">
            <summary>
            Get a list of Public IDs for the specific assets to be included in the archive.
            </summary>
            <returns>A list of strings where each element represents Public ID.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.PublicIds(System.Collections.Generic.List{System.String})">
            <summary>
            Set a list of Public IDs for the specific assets to be included in the archive.
            Up to 1000 public IDs are supported.
            </summary>
            <param name="publicIds">List of Public IDs of the assets.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.FullyQualifiedPublicIds">
            <summary>
            Get a list of Fully Qualified Public IDs for the specific assets to be included in the archive.
            </summary>
            <returns>A list of strings where each element represents Fully Qualified Public ID.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.FullyQualifiedPublicIds(System.Collections.Generic.List{System.String})">
            <summary>
            Set a list of Fully Qualified Public IDs for the specific assets to be included in the archive.
            </summary>
            <param name="fullyQualifiedPublicIds">List of fully qualified Public IDs.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Tags">
            <summary>
            Get a list of tag names. All assets with the specified tags are included in the archive.
            </summary>
            <returns>A list of strings where each element represents a tag name.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Tags(System.Collections.Generic.List{System.String})">
            <summary>
            Set a list of tag names. All assets with the specified tags are included in the archive.
            Up to 20 tags are supported.
            </summary>
            <param name="tags">List of tags to be included.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Prefixes">
            <summary>
            Get a list of prefixes of Public IDs (e.g., folders).
            </summary>
            <returns>A list of strings where each element represents a Public ID prefix.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Prefixes(System.Collections.Generic.List{System.String})">
            <summary>
            Set a list of prefixes of Public IDs (e.g., folders). Setting this parameter to a slash (/) is a shortcut
            for including all assets in the account for the given ResourceType and Type (up to the max files limit).
            Up to 20 prefixes are supported.
            </summary>
            <param name="prefixes">List of prefixes to be included.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Check">
            <inheritdoc />
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Mode">
            <summary>
            Get Mode whether to return the generated archive file ('download') or to store it as a raw resource
            ('create').
            </summary>
            <returns>A member of <see cref="T:CloudinaryDotNet.Actions.ArchiveCallMode"/> enum.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Mode(CloudinaryDotNet.Actions.ArchiveCallMode)">
            <summary>
            Determines whether to return a URL to dynamically generate and download the archive file ('download'), or to
            create and store it as a raw asset in your Cloudinary account and return JSON with the URLs to access
            the archive file ('create').
            </summary>
            <param name="mode">One of the values of <see cref="T:CloudinaryDotNet.Actions.ArchiveCallMode"/> enum.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.ResourceType">
            <summary>
            Get the resource type (image, video or raw) of files to include in the archive.
            </summary>
            <returns>A string that represents type of the resource.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.ResourceType(System.String)">
            <summary>
            Set the resource type (image, video or raw) of files to include in the archive: Default: image.
            </summary>
            <param name="resourceType">Resource type to be included.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Type">
            <summary>
            Get the specific file type of assets to include in the archive (upload/private/authenticated).
            </summary>
            <returns>A string that represents file type of the asset.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Type(System.String)">
            <summary>
            Set the specific file type of assets to include in the archive (upload/private/authenticated). If tags are
            specified as a filter then all types are included. Default: upload.
            </summary>
            <param name="type">File type of assets to be included.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Transformations">
            <summary>
            Get a list of transformations to run on all the derived assets before storing them in your Cloudinary
            account.
            </summary>
            <returns>A list of transformations.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Transformations(System.Collections.Generic.List{CloudinaryDotNet.Transformation})">
            <summary>
            Set a list of transformations to run on all the derived assets before storing them in your Cloudinary
            account.
            </summary>
            <param name="transformations">List of transformations to run on.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.TargetFormat">
            <summary>
            Get the format for the generated archive.
            </summary>
            <returns>A member of <see cref="T:CloudinaryDotNet.Actions.ArchiveFormat"/> enum.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.TargetFormat(CloudinaryDotNet.Actions.ArchiveFormat)">
            <summary>
            Set the format for the generated archive: zip or tgz.
            Currently only 'zip' is supported.
            Default: zip.
            </summary>
            <param name="targetFormat">Generated archive format.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.TargetPublicId">
            <summary>
            Get the Public ID to assign to the generated archive.
            </summary>
            <returns>A string that represents archive Public ID.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.TargetPublicId(System.String)">
            <summary>
            Set the Public ID to assign to the generated archive. If not specified, a random Public ID is generated.
            Only relevant when using the 'create' method.
            </summary>
            <param name="targetPublicId">Public ID of the generated archive.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.IsFlattenFolders">
            <summary>
            Get whether to flatten all files to be in the root of the archive file (no sub-folders).
            </summary>
            <returns>True if files are to be flattened; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.FlattenFolders(System.Boolean)">
            <summary>
            Determines whether to flatten all files to be in the root of the archive file (no sub-folders). Any folder
            information included in the Public ID is stripped and a numeric counter is added to the file name in the
            case of a name conflict. Default: false.
            </summary>
            <param name="flattenFolders">Flag that determines files flattening.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.IsFlattenTransformations">
            <summary>
            Get whether to flatten the folder structure of the derived assets and store the transformation details on
            the file name instead.
            </summary>
            <returns>True if the folder structure should be flattened; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.FlattenTransformations(System.Boolean)">
            <summary>
            If multiple transformations are also applied, determines whether to flatten the folder structure of the
            derived assets and store the transformation details on the file name instead. Default: false.
            </summary>
            <param name="flattenTransformations">Flag that determines folder structure flattening.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.ExpiresAt">
            <summary>
            Get the date (UNIX time in seconds) of the URL expiration.
            </summary>
            <returns>UNIX time in seconds represented by an integer value.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.ExpiresAt(System.Int32)">
            <summary>
            Set the date (UNIX time in seconds) of the URL expiration (e.g., 1415060076). Only relevant when using the
            'download' SDK methods. Default: 1 hour from the time that the URL is generated.
            </summary>
            <param name="expiresAt">UNIX time in seconds of the URL expiration.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.IsUseOriginalFilename">
            <summary>
            Get whether to use the original file name of the included assets (if available) instead of the public ID.
            </summary>
            <returns>True if original file name is to be used; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.UseOriginalFilename(System.Boolean)">
            <summary>
            Whether to use the original file name of the included assets (if available) instead of the public ID.
            Default: false.
            </summary>
            <param name="useOriginalFilename">Flag that determines original file usage.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.IsAsync">
            <summary>
            Get whether to perform the archive generation in the background (asynchronously).
            </summary>
            <returns>True for background archive generation; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.Async(System.Boolean)">
            <summary>
            Set whether to perform the archive generation in the background (asynchronously).
            Only relevant when using the 'create' SDK methods. Default: false.
            </summary>
            <param name="async">Flag that determines background archive generation.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.NotificationUrl">
            <summary>
            Get an HTTP or HTTPS URL to notify your application (a webhook) when the archive creation process has
            completed.
            </summary>
            <returns>A string that represents URL.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.NotificationUrl(System.String)">
            <summary>
            Set an HTTP or HTTPS URL to notify your application (a webhook) when the archive creation process has
            completed. Only relevant when using the 'create' methods.
            </summary>
            <param name="notificationUrl">Notification URL.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.TargetTags">
            <summary>
            Get a list of tag names to assign to the generated archive.
            </summary>
            <returns>A list of strings where each element represents a tag name.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.TargetTags(System.Collections.Generic.List{System.String})">
            <summary>
            Set a list of tag names to assign to the generated archive.
            Only relevant when using the 'create' SDK methods.
            </summary>
            <param name="targetTags">List of tag names to assign.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.IsKeepDerived">
            <summary>
            Get whether to keep the derived assets used for generating the archive.
            </summary>
            <returns>True if derived assets are to be used; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.KeepDerived(System.Boolean)">
            <summary>
            Set whether to keep the derived assets used for generating the archive.
            </summary>
            <param name="keepDerived">Flag that determines derived assets usage.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.IsSkipTransformationName">
            <summary>
            Get whether to strip all transformation details from file names and add a numeric counter to a file name
            in the case of a name conflict.
            </summary>
            <returns>True if all transformation details are to be skipped; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.SkipTransformationName(System.Boolean)">
            <summary>
            Determine whether to strip all transformation details from file names and add a numeric counter to a file
            name in the case of a name conflict. Default: false.
            </summary>
            <param name="skipTransformationName">Flag that determines whether to strip all transformation details.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.AllowMissing">
            <summary>
            Allows generation of the archive if any of the supplied Public IDs are not found,
            instead of returning an error.
            </summary>
            <returns>True if any of the supplied Public IDs are not found; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.AllowMissing(System.Boolean)">
            <summary>
            Optional. Allows generation of the archive if any of the supplied Public IDs are not found,
            instead of returning an error. Default: false.
            </summary>
            <param name="allowMissing">Flag that allows generation of the archive if any of the supplied Public IDs are not found,
            instead of returning an error. Default: false.</param>
            <returns>The instance of Archive parameters with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ArchiveResult">
            <summary>
            Parsed result of creating the archive.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ArchiveResult.m_resourceType">
            <summary>
            The type of file. Possible values: image, raw, video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.Url">
            <summary>
            Gets or sets the URL for accessing the created archive.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.SecureUrl">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the created archive.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.PublicId">
            <summary>
            Gets or sets publicId of the created archive.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.Bytes">
            <summary>
            Gets or sets size of the created archive (in bytes).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.FileCount">
            <summary>
            Gets or sets count of files in the archive.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.Version">
            <summary>
            Gets or sets version of uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.Signature">
            <summary>
            Gets or sets the signature for verifying the response is a valid response from Cloudinary.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.ResourceType">
            <summary>
            Gets the type of resource. Possible values: image, raw, video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.CreatedAt">
            <summary>
            Gets or sets date when the asset was uploaded.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.Type">
            <summary>
            Gets or sets the storage type: upload, private, authenticated, facebook, twitter, gplus, instagram_name, gravatar,
            youtube, hulu, vimeo, animoto, worldstarhiphop or dailymotion.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.Etag">
            <summary>
            Gets or sets etag used to determine whether two versions of an asset are identical.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.Placeholder">
            <summary>
            Gets or sets a value indicating whether a placeholder (default image) is currently used instead of displaying the image (due to moderation).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.AccessMode">
            <summary>
            Gets or sets the accessibility mode of the media asset: public, or authenticated.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.ResourceCount">
            <summary>
            Gets or sets the total number of assets.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ArchiveResult.Tags">
            <summary>
            Gets or sets a list of tag names assigned to resource.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ArchiveResult.SetValues(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Overrides corresponding method of <see cref="T:CloudinaryDotNet.Actions.BaseResult"/> class.
            Populates additional token fields.
            </summary>
            <param name="source">JSON token received from the server.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Audio">
            <summary>
            Additional metadata for audio.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Audio.Codec">
            <summary>
            Gets or sets the audiocodec applied.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Audio.BitRate">
            <summary>
            Gets or sets bitrate of the audio. This parameter controls the number of bits used to represent the audio data.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Audio.Frequency">
            <summary>
            Gets or sets audio sampling frequency. Represents an integer value in Hz.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Audio.Channels">
            <summary>
            Gets or sets audio channel.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Audio.ChannelLayout">
            <summary>
            Gets or sets audio channel layout.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.BasicRawUploadParams">
            <summary>
            Base parameters of file upload request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BasicRawUploadParams.File">
            <summary>
            Gets or sets either the actual data of the image or an HTTP URL of a public image on the Internet.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BasicRawUploadParams.PublicId">
            <summary>
            Gets or sets the identifier that is used for accessing the uploaded resource.
            A randomly generated ID is assigned if not specified.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BasicRawUploadParams.Backup">
            <summary>
            Gets or sets a value indicating whether to backup the uploaded file. Overrides the default backup settings of your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BasicRawUploadParams.Type">
            <summary>
            Gets or sets privacy mode of the file. Valid values: 'upload' and 'authenticated'. Default: 'upload'.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BasicRawUploadParams.ResourceType">
            <summary>
            Gets the 'raw' type of file you are uploading.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BasicRawUploadParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BasicRawUploadParams.ToParamsDictionary">
            <summary>
            Map object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Breakpoint">
            <summary>
            Settings of the responsive breakpoints(images) found.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Breakpoint.Width">
            <summary>
            Gets or sets width of the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Breakpoint.Height">
            <summary>
            Gets or sets width of the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Breakpoint.Bytes">
            <summary>
            Gets or sets size of the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Breakpoint.Url">
            <summary>
            Gets or sets the URL for accessing the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Breakpoint.SecureUrl">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the media asset.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Eager">
            <summary>
            Details of the derived image generated as per the requested eager transformation applied.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Eager.Uri">
            <summary>
            Gets or sets URL for accessing the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Eager.Url">
            <summary>
            Gets or sets the URL for accessing the uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Eager.SecureUri">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Eager.SecureUrl">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Eager.Transformation">
            <summary>
            Gets or sets the transformation applied to the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Eager.Width">
            <summary>
            Gets or sets parameter "width" of the resource. Not relevant for raw files.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Eager.Height">
            <summary>
            Gets or sets parameter "height" of the resource. Not relevant for raw files.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Eager.Bytes">
            <summary>
            Gets or sets the size of the media asset in bytes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Eager.Format">
            <summary>
            Gets or sets asset format.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.FaceCoordinates">
            <summary>
            The coordinates of faces contained in an uploaded image.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.FaceCoordinates.ToString">
            <summary>
            Represents the face coordinates as string "x,y,w,h|x,y,w,h" separated with a pipe (❘).
            For example: "10,20,150,130❘213,345,82,61".
            </summary>
            <returns>The string representation of face coordinates.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ImageInfo">
            <summary>
            Details of an image in the sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageInfo.Width">
            <summary>
            Gets or sets width of the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageInfo.Height">
            <summary>
            Gets or sets width of the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageInfo.X">
            <summary>
            Gets or sets x-coordinate of the image in sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageInfo.Y">
            <summary>
            Gets or sets y-coordinate of the image in sprite.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ProfilingData">
            <summary>
            Represents processing statistics data.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ProfilingData.Cpu">
            <summary>
            Gets or sets cpu usage metrics.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ProfilingData.Real">
            <summary>
            Gets or sets real metrics.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ProfilingData.Action">
            <summary>
            Gets or sets processing statistics data about actions on resource.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ProfilingDataAction">
            <summary>
            Represents processing statistics data about actions on resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ProfilingDataAction.Action">
            <summary>
            Gets or sets action name applied to resource asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ProfilingDataAction.Parameter">
            <summary>
            Gets or sets action parameter applied to resource asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ProfilingDataAction.Presize">
            <summary>
            Gets or sets size before applied action.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ProfilingDataAction.Postsize">
            <summary>
            Gets or sets size after applied action.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ResponsiveBreakpointList">
            <summary>
            Parsed results of uploading image with Responsive breakpoints.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ResponsiveBreakpointList.Breakpoints">
            <summary>
            Gets or sets array of responsive breakpoints found.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ResponsiveBreakpointList.Transformation">
            <summary>
            Gets or sets the transformation applied to the image before finding the best breakpoints.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.RawPartUploadResult">
            <summary>
            Results of a file's chunk uploading.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawPartUploadResult.UploadId">
            <summary>
            Gets or sets id of the uploaded chunk of the asset.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Video">
            <summary>
            Additional metadata for video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Video.Format">
            <summary>
            Gets or sets type of video format.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Video.Codec">
            <summary>
            Gets or sets the video codec applied.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Video.Level">
            <summary>
            Gets or sets video level.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Video.BitRate">
            <summary>
            Gets or sets bitrate of the video. This parameter controls the number of bits used to represent the video data.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Video.Profile">
            <summary>
            Gets or sets applied profile name.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.AssetType">
            <summary>
            The specific type of the asset.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.AssetType.Upload">
            <summary>
            Upload type of the asset.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.AssetType.Private">
            <summary>
            Private type of the asset.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.AssetType.Authenticated">
            <summary>
            Authenticated type of the asset.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.BaseParams">
            <summary>
            Parameters for request to cloudinary.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.BaseParams.customParams">
            <summary>
            The dictionary with custom parameters.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.Copy">
            <summary>
            Make a shallow copy of parameters.
            </summary>
            <returns>The shallow copy of parameters.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>The dictionary of parameters in cloudinary notation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.AddCustomParam(System.String,System.String)">
            <summary>
            Allow passing ad-hoc parameters in each method (mainly to allow work-around solutions until a fix is published).
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.AddParam(System.Collections.Generic.SortedDictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Add parameter to the dictionary.
            </summary>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.AddParam(System.Collections.Generic.SortedDictionary{System.String,System.Object},System.String,System.DateTime)">
            <summary>
            Add parameter to the dictionary.
            </summary>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.AddParam(System.Collections.Generic.SortedDictionary{System.String,System.Object},System.String,System.Single)">
            <summary>
            Add parameter to the dictionary.
            </summary>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.AddParam(System.Collections.Generic.SortedDictionary{System.String,System.Object},System.String,System.Int64)">
            <summary>
            Add parameter to the dictionary.
            </summary>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.AddParam(System.Collections.Generic.SortedDictionary{System.String,System.Object},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add parameter to the dictionary.
            </summary>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.AddParam(System.Collections.Generic.SortedDictionary{System.String,System.Object},System.String,System.Boolean)">
            <summary>
            Add parameter to the dictionary.
            </summary>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.AddParam(System.Collections.Generic.SortedDictionary{System.String,System.Object},System.String,System.Nullable{System.Boolean})">
            <summary>
            Add parameter to the dictionary.
            </summary>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.AddCoordinates(System.Collections.Generic.SortedDictionary{System.String,System.Object},System.String,System.Object)">
            <summary>
            Add a coordinate object (plain string or Rectangle or List of Rectangles or FaceCoordinates)
            to the dictionary.
            </summary>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="coordObj">The value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ModerationStatus">
            <summary>
            Status of the asset moderation process.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ModerationStatus.Pending">
            <summary>
            Moderation is in process.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ModerationStatus.Rejected">
            <summary>
            Asset was rejected by moderation service.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ModerationStatus.Approved">
            <summary>
            Asset approved.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ModerationStatus.Overridden">
            <summary>
            Moderation result was manually overridden.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ResourceType">
            <summary>
            Possible types of resources to store on cloudinary.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ResourceType.Image">
            <summary>
            Images in various formats (jpg, png, etc.)
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ResourceType.Raw">
            <summary>
            Any files (text, binary)
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ResourceType.Video">
            <summary>
            Video files in various formats (mp4, etc.)
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.BaseResult">
            <summary>
            Represents a result of HTTP API call. This is an abstract class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseResult.StatusCode">
            <summary>
            Gets or sets hTTP status code.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseResult.JsonObj">
            <summary>
            Gets raw JSON as received from the server.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseResult.Error">
            <summary>
            Gets or sets description of server-side error (if one has occurred).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseResult.Limit">
            <summary>
            Gets or sets current limit of API requests until <see cref="P:CloudinaryDotNet.Actions.BaseResult.Reset"/>.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseResult.Remaining">
            <summary>
            Gets or sets remaining amount of requests until <see cref="P:CloudinaryDotNet.Actions.BaseResult.Reset"/>.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseResult.Reset">
            <summary>
            Gets or sets time of next reset of limits.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseResult.SetValues(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Populates additional token fields.
            </summary>
            <param name="source">JSON token received from the server.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ContextCommand">
            <summary>
            The action to perform on image resources using the given context.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ContextCommand.Add">
            <summary>
            Assign the given context to the resources with the given Public IDs.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ContextCommand.RemoveAll">
            <summary>
            Remove all contexts from resources with the given Public IDs.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ContextParams">
            <summary>
            Parameters for context management.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ContextParams.PublicIds">
            <summary>
            Gets or sets a list of Public IDs of assets uploaded to Cloudinary.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ContextParams.Context">
            <summary>
            Gets or sets the context name to assign or remove.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ContextParams.ContextDict">
            <summary>
            Gets or sets a list of the key-value pairs of general textual context metadata to
            add to the asset. Only relevant when adding context.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ContextParams.Type">
            <summary>
            Gets or sets the specific type of the asset.
            Valid values: upload, private and authenticated. Default: upload. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ContextParams.Command">
            <summary>
            Gets or sets the action to perform on assets using the given context.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ContextParams.ResourceType">
            <summary>
            Gets or sets (Optional) The type of asset.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ContextParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ContextParams.ToParamsDictionary">
            <inheritdoc />
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Error">
            <summary>
            Represents a server-side error.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Error.Message">
            <summary>
            Gets or sets error description.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Folder">
            <summary>
            Folder details.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Folder.Name">
            <summary>
            Gets or sets name of the folder.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.Folder.Path">
            <summary>
            Gets or sets path to the folder.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UploadPresetResult">
            <summary>
            Parsed response after manipulation of upload presets.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetResult.Message">
            <summary>
            Gets or sets response message.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetResult.Name">
            <summary>
            Gets or sets name assigned to the upload preset.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.IdentityInfo">
            <summary>
            Represents indetity data.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.IdentityInfo.AccessKey">
            <summary>
            Gets or sets identity access key.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ImageAnalysis">
            <summary>
            The results of the advanced image analysis.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageAnalysis.FaceCount">
            <summary>
            Gets or sets amount of faces the image contains.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageAnalysis.Faces">
            <summary>
            Gets or sets a list of coordinates of detected faces.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageAnalysis.GrayScale">
            <summary>
            Gets or sets a value indicating whether the image only contains a single grayscale channel.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageAnalysis.IllustrationScore">
            <summary>
            Gets or sets the likelihood that the image is an illustration as opposed to a photograph.
            A value between 0 (photo) and 1.0 (illustration).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageAnalysis.Transparent">
            <summary>
            Gets or sets a value indicating whether the image contains one or more colors with an alpha channel.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageAnalysis.Etag">
            <summary>
            Gets or sets a values to determine whether two versions of an analysis are identical.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageAnalysis.Colors">
            <summary>
            Gets or sets the predominant colors uploaded image.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.AndValidationParams">
            <summary>
            And validation, relevant for all field types.
            Allows to include more than one validation rule to be evaluated.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.AndValidationParams.#ctor(System.Collections.Generic.List{CloudinaryDotNet.Actions.MetadataValidationParams})">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.AndValidationParams"/> class.
            </summary>
            <param name="rules">List of combined rules.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.AndValidationParams.Rules">
            <summary>
            Gets or sets rules combined with an 'AND' logic relation between them.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.AndValidationParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.AndValidationParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ComparisonValidationParams`1">
            <summary>
            Base class for comparison validations.
            </summary>
            <typeparam name="T">Type that can describe the value for validation.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ComparisonValidationParams`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.ComparisonValidationParams`1"/> class.
            </summary>
            <param name="value">Value that will be used to compare with.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ComparisonValidationParams`1.Value">
            <summary>
            Gets or sets the value for validation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ComparisonValidationParams`1.IsEqual">
            <summary>
            Gets or sets a value indicating whether to check if equals.
            Default value: false.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ComparisonValidationParams`1.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ComparisonValidationParams`1.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DataSourceEntriesParams">
            <summary>
            Represents delete datasource entries operation.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DataSourceEntriesParams.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.DataSourceEntriesParams"/> class.
            </summary>
            <param name="externalIds">IDs of datasource entries to delete.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DataSourceEntriesParams.ExternalIds">
            <summary>
            Gets or sets an array of IDs of datasource entries to delete.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DataSourceEntriesParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DataSourceEntriesParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DateGreaterThanValidationParams">
            <summary>
            Greater-than rule for dates.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DateGreaterThanValidationParams.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.DateGreaterThanValidationParams"/> class.
            </summary>
            <param name="value">Value that will be used to compare with.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DateGreaterThanValidationParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DateLessThanValidationParams">
            <summary>
            Less-than rule for dates.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DateLessThanValidationParams.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.DateLessThanValidationParams"/> class.
            </summary>
            <param name="value">Value that will be used to compare with.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DateLessThanValidationParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DateMetadataFieldCreateParams">
            <summary>
            Represents parameters, required for 'date' metadata field creation.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DateMetadataFieldCreateParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.DateMetadataFieldCreateParams"/> class.
            </summary>
            <param name="label">The label of the metadata field.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DateMetadataFieldCreateParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DateMetadataFieldCreateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DateMetadataFieldUpdateParams">
            <summary>
            Represents parameters, required for 'date' metadata field update.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DateMetadataFieldUpdateParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.DateMetadataFieldUpdateParams"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DateMetadataFieldUpdateParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DateMetadataFieldUpdateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DelMetadataFieldResult">
            <summary>
            Result of removing the metadata field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelMetadataFieldResult.Message">
            <summary>
            Gets or sets an API message.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.EntryParams">
            <summary>
            Defines a single possible value for the field.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.EntryParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.EntryParams"/> class.
            </summary>
            <param name="value">The datasource value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.EntryParams.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.EntryParams"/> class.
            </summary>
            <param name="value">The datasource value.</param>
            <param name="externalId">Unique identifier of the datasource entry.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.EntryParams.ExternalId">
            <summary>
            Gets or sets a unique immutable identification string for the datasource entry,
            (required if the value is referenced by the default_value field).
            Default: auto-generated by Cloudinary (optional).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.EntryParams.Value">
            <summary>
            Gets or sets the value for this datasource.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.EntryParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.EntryParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.EntryResult">
            <summary>
            Defines a single possible value for the field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.EntryResult.ExternalId">
            <summary>
            Gets or sets a unique immutable identification string for the datasource entry.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.EntryResult.Value">
            <summary>
            Gets or sets the value for this datasource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.EntryResult.State">
             <summary>
             Gets or sets the state.
            
             Only given as part of a response - ignored on requests.
             It is immutable unless changed via DELETE of a datasource entry.
             Possible values: 'active' and 'inactive'.
             </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.EnumMetadataFieldCreateParams">
            <summary>
            Represents parameters, required for 'enum' metadata field creation.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.EnumMetadataFieldCreateParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.EnumMetadataFieldCreateParams"/> class.
            </summary>
            <param name="label">The label of the metadata field.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.EnumMetadataFieldCreateParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.EnumMetadataFieldCreateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.EnumMetadataFieldUpdateParams">
            <summary>
            Represents parameters, required for 'enum' metadata field update.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.EnumMetadataFieldUpdateParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.EnumMetadataFieldUpdateParams"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.EnumMetadataFieldUpdateParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.EnumMetadataFieldUpdateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.IntGreaterThanValidationParams">
            <summary>
            Greater-than rule for integers.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.IntGreaterThanValidationParams.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.IntGreaterThanValidationParams"/> class.
            </summary>
            <param name="value">Value that will be used to compare with.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.IntGreaterThanValidationParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.IntLessThanValidationParams">
            <summary>
            Less-than rule for integers.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.IntLessThanValidationParams.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.IntLessThanValidationParams"/> class.
            </summary>
            <param name="value">Value that will be used to compare with.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.IntLessThanValidationParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.IntMetadataFieldCreateParams">
            <summary>
            Represents parameters, required for 'integer' metadata field creation.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.IntMetadataFieldCreateParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.IntMetadataFieldCreateParams"/> class.
            </summary>
            <param name="label">The label of the metadata field.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.IntMetadataFieldCreateParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.IntMetadataFieldCreateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.IntMetadataFieldUpdateParams">
            <summary>
            Represents parameters, required for 'integer' metadata field update.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.IntMetadataFieldUpdateParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.IntMetadataFieldUpdateParams"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.IntMetadataFieldUpdateParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.IntMetadataFieldUpdateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataDataSourceParams">
            <summary>
            Represents a data source for a given field. This is used in both 'Set' and 'Enum' field types.
            The datasource holds a list of the valid values to be used with the corresponding metadata field.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataDataSourceParams.#ctor(System.Collections.Generic.List{CloudinaryDotNet.Actions.EntryParams})">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.MetadataDataSourceParams"/> class.
            </summary>
            <param name="entries">Datasource values.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataDataSourceParams.Values">
            <summary>
            Gets or sets a list of datasource values.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataDataSourceParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataDataSourceParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataDataSourceResult">
            <summary>
            Represents a data source for a given field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataDataSourceResult.Values">
            <summary>
             Gets or sets  a list of datasource values.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataFieldCreateParams`1">
            <summary>
            Represents parameters, required for metadata field creation.
            </summary>
            <typeparam name="T">Type that can describe the field type.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataFieldCreateParams`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.MetadataFieldCreateParams`1"/> class.
            </summary>
            <param name="label">The label of the metadata field.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataFieldCreateParams`1.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataFieldCreateParams`1.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataFieldListResult">
            <summary>
            Result of metadata fields listing.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldListResult.MetadataFields">
            <summary>
             Gets or sets a list of basic details of listed metadata fields.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataFieldUpdateParams`1">
            <summary>
            Represents parameters, required for metadata field update.
            </summary>
            <typeparam name="T">Type that can describe the field type.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataFieldUpdateParams`1.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataFieldUpdateParams`1.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataUpdateResult">
            <summary>
            Results of context management.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataUpdateResult.PublicIds">
            <summary>
            Gets or sets public IDs of affected assets.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ContextResult">
            <summary>
            Results of context management.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ContextResult.PublicIds">
            <summary>
            Gets or sets public IDs of affected assets.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.CreateFolderResult">
            <summary>
            Result of folder creation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.CreateFolderResult.Success">
            <summary>
            Gets or sets a value indicating whether folder creation was successful.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.CreateFolderResult.Path">
            <summary>
            Gets or sets path to the folder.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.CreateFolderResult.Name">
            <summary>
            Gets or sets name of the folder.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.GetFoldersParams">
            <summary>
            Parameters for managing folders list.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetFoldersParams.MaxResults">
            <summary>
            Gets or sets maximum number of results to return (up to 500). Default: 10.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetFoldersParams.NextCursor">
            <summary>
            Gets or sets when a request has more results to return than <see cref="P:CloudinaryDotNet.Actions.GetFoldersParams.MaxResults"/>, this value is returned as part of the response.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.GetFoldersParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.GetFoldersParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListResourcesByContextParams">
            <summary>
            Allows to list resources by context metadata keys and values.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesByContextParams.Key">
            <summary>
            Gets or sets if only resources with the given key should be returned. Required.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesByContextParams.Value">
            <summary>
            Gets or sets whether should only return resources with this given value for the context key.
            When not provided, return all resources for which the context key exists. Optional.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListResourcesByContextParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListResourcesByContextParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataFieldType">
            <summary>
            Possible value types that can be assigned to the metadata field.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.MetadataFieldType.String">
            <summary>
            A single string value
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.MetadataFieldType.Integer">
            <summary>
            A single integer value.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.MetadataFieldType.Date">
            <summary>
            A custom date in the following format: {yyyy-mm-dd}.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.MetadataFieldType.Enum">
            <summary>
            A single value referenced by an 'external_id' from a given list,
            predefined with the 'datasource' parameter.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.MetadataFieldType.Set">
            <summary>
            Multiple values referenced by 'external_ids' from a given list,
            predefined with the 'datasource' parameter.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataValidationType">
            <summary>
            Possible value types that can be assigned to the metadata validation.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.MetadataValidationType.GreaterThan">
            <summary>
            Greater than validation type.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.MetadataValidationType.LessThan">
            <summary>
            Less than validation type.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.MetadataValidationType.StringLength">
            <summary>
            String length validation type.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.MetadataValidationType.And">
            <summary>
            And validation type.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataFieldBaseParams`1">
            <summary>
            Represents the base definition of a single metadata field.
            Use one of the derived classes in the metadata API calls.
            </summary>
            <typeparam name="T">Type that can describe the field type.</typeparam>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldBaseParams`1.ExternalId">
            <summary>
            Gets or sets an optional unique immutable identification string for the metadata field.
            Default: auto-generated by Cloudinary, although it is recommended to specify this.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldBaseParams`1.Type">
            <summary>
            Gets or sets the type of value that can be assigned to the metadata field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldBaseParams`1.Label">
            <summary>
            Gets or sets the label of the metadata field for display purposes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldBaseParams`1.Mandatory">
            <summary>
            Gets or sets a value indicating whether a value must be given for this field, either when an asset is first uploaded,
            or when it is updated. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldBaseParams`1.DefaultValue">
            <summary>
            Gets or sets the default value for the field (a set can have multiple default values defined by an array).
            Default: null. Mandatory, if 'mandatory' is true.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldBaseParams`1.Validation">
            <summary>
            Gets or sets any validation rules to apply when values are entered (or updated) for this field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldBaseParams`1.DataSource">
            <summary>
            Gets or sets the predefined list of values, referenced by external_ids, available for this field.
            The datasource parameter is only relevant for fields where the selected values must come
            from a predefined list of values ('enum' or 'set' type fields).
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataFieldBaseParams`1.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataFieldBaseParams`1.CheckScalarDataModel(System.Collections.Generic.List{System.Type})">
            <summary>
            Validate object models for instances with validation.
            </summary>
            <param name="allowedValidationTypes">List of validation types allowed for the metadata field type.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataUpdateParams">
            <summary>
            Represents the values to be applied to custom metadata fields of already uploaded assets.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataUpdateParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.MetadataUpdateParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataUpdateParams.PublicIds">
            <summary>
            Gets or sets a list of Public IDs of assets uploaded to Cloudinary.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataUpdateParams.Metadata">
            <summary>
            Gets or sets a dictionary of custom metadata fields (by external_id) and the values to assign to each of them.
            Any metadata-value pairs given are merged with any existing metadata-value pairs
            (an empty value for an existing metadata field clears the value).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataUpdateParams.ResourceType">
            <summary>
            Gets or sets the type of file. Possible values: image, raw, video. Default: image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataUpdateParams.Type">
            <summary>
            Gets or sets the storage type. Default: upload. Valid values: upload, private, authenticated.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataUpdateParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataUpdateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MultiAssetsParams">
            <summary>
            Base class for multi-assets requests operations.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MultiAssetsParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.MultiAssetsParams"/> class.
            </summary>
            <param name="tag">The multi-assets entity is created from all images with this tag.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MultiAssetsParams.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.MultiAssetsParams"/> class.
            </summary>
            <param name="urls">The multi-assets entity is created from all images with the urls specified.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiAssetsParams.Tag">
            <summary>
            Gets or sets the The multi-assets entity that is created from all images with this tag.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiAssetsParams.Urls">
            <summary>
            Gets or sets a list of urls for all images used in the multi-assets entity.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiAssetsParams.Transformation">
            <summary>
            Gets or sets transformation to run on all the individual images before creating the multi-assets entity. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiAssetsParams.NotificationUrl">
            <summary>
            Gets or sets an HTTP or HTTPS URL to notify your application (a webhook) when the process has completed.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiAssetsParams.Async">
            <summary>
            Gets or sets a value indicating whether to perform the multi-assets entity generation in the background
            (asynchronously). Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiAssetsParams.Format">
            <summary>
            Gets or sets a value that can be set to 'zip' to generate a zip file containing the images instead of an multi-assets file.
            Default: gif (deprecated - use the new CreateArchive method to create zip files).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiAssetsParams.Mode">
            <summary>
            Gets or sets a value that defines whether to return the generated file ('download').
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MultiAssetsParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MultiAssetsParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DeletedDataStatistics">
            <summary>
            Parsed result of statistics of deleted resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DeletedDataStatistics.Original">
            <summary>
            Gets or sets count of original resources deleted.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DeletedDataStatistics.Derived">
            <summary>
            Gets or sets count of derived resources deleted.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataValidationParams">
            <summary>
            Represents the base class for metadata fields validation mechanisms.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataValidationParams.Type">
            <summary>
            Gets or sets the type of value that can be assigned to the metadata field.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MetadataValidationParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataValidationResult">
            <summary>
            Details on metadata field validation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataValidationResult.Type">
            <summary>
            Gets or sets validation type.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataValidationResult.Value">
            <summary>
            Gets or sets the value for validation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataValidationResult.IsEqual">
            <summary>
            Gets or sets a value to indicate whether to check for equality.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataValidationResult.Min">
            <summary>
            Gets or sets the minimum string length.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataValidationResult.Max">
            <summary>
            Gets or sets the maximum string length.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataValidationResult.Rules">
            <summary>
            Gets or sets rules combined with an 'AND' logic relation between them.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.SetMetadataFieldCreateParams">
            <summary>
            Represents parameters, required for 'set' metadata field creation.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SetMetadataFieldCreateParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.SetMetadataFieldCreateParams"/> class.
            </summary>
            <param name="label">The label of the metadata field.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SetMetadataFieldCreateParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SetMetadataFieldCreateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.SetMetadataFieldUpdateParams">
            <summary>
            Represents parameters, required for 'set' metadata field update.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SetMetadataFieldUpdateParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.SetMetadataFieldUpdateParams"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SetMetadataFieldUpdateParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SetMetadataFieldUpdateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.StringLengthValidationParams">
            <summary>
            Strlen validation, relevant to 'string' field types only.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StringLengthValidationParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.StringLengthValidationParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StringLengthValidationParams.Min">
            <summary>
            Gets or sets the minimum string length, represented by a positive integer.
            Default value: 0.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StringLengthValidationParams.Max">
            <summary>
            Gets or sets the maximum string length, represented by a positive integer.
            Default value: 1024.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StringLengthValidationParams.Check">
            <summary>
            Validates object model.
            Either min or max must be given, supplying both is optional.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StringLengthValidationParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.StringMetadataFieldCreateParams">
            <summary>
            Represents parameters, required for 'string' metadata field creation.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StringMetadataFieldCreateParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.StringMetadataFieldCreateParams"/> class.
            </summary>
            <param name="label">The label of the metadata field.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StringMetadataFieldCreateParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StringMetadataFieldCreateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.StringMetadataFieldUpdateParams">
            <summary>
            Represents parameters, required for 'string' metadata field update.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StringMetadataFieldUpdateParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.StringMetadataFieldUpdateParams"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StringMetadataFieldUpdateParams.Check">
            <summary>
            Validates object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StringMetadataFieldUpdateParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Moderation">
            <summary>
            The data received from image moderation service.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Moderation.Status">
            <summary>
            Moderation status of assets.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Moderation.Kind">
            <summary>
            Type of image moderation service: "manual", "webpurify", "aws_rek", or "metascan".
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Moderation.Response">
            <summary>
            Result of the request for moderation.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Moderation.UpdatedAt">
            <summary>
            Date of the moderation status update.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ModerationLabel">
            <summary>
            Description of the offensive content category.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ModerationLabel.Confidence">
            <summary>
            Amazon Rekognition assigns a moderation confidence score (0 - 100) indicating the chances that an image
            belongs to an offensive content category.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ModerationLabel.Name">
            <summary>
            Name of the offensive content category.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ModerationLabel.ParentName">
            <summary>
            Name of the parent offensive content category.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ModerationResponse">
            <summary>
            Result of the request for moderation.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ModerationResponse.ModerationLabels">
            <summary>
            Detected offensive content categories.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ModerationResponseConverter">
            <summary>
            Custom JSON converter to handle responses from moderation plugins properly.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ModerationResponseConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:CloudinaryDotNet.Actions.ModerationResponseConverter"/> can write JSON.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ModerationResponseConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ModerationResponseConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>True if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ModerationResponseConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="existingValue">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListUploadPresetsResult">
            <summary>
            Parsed result of upload presets listing.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListUploadPresetsResult.Presets">
            <summary>
            Gets or sets presets.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListUploadPresetsResult.NextCursor">
            <summary>
            Gets or sets the cursor value if there are more presets than <see cref="P:CloudinaryDotNet.Actions.ListUploadPresetsParams.MaxResults"/>.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.SafeBooleanConverter">
            <summary>
            Custom JSON converter to safely parse boolean values that might come as strings.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SafeBooleanConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:CloudinaryDotNet.Actions.SafeBooleanConverter"/> can write JSON.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SafeBooleanConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SafeBooleanConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>True if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SafeBooleanConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="existingValue">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UploadSettings">
            <summary>
            Upload settings.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.DisallowPublicId">
            <summary>
            Gets or sets a value indicating whether only relevant when using unsigned presets this setting prevents specifying public_id as one of the extra
            parameters for upload.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Backup">
            <summary>
            Gets or sets indication if Cloudinary should backup the uploaded image. Overrides the default backup settings of your
            account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Type">
            <summary>
            Gets or sets privacy mode of the image. Valid values: 'private', 'upload' and 'authenticated'. Default: 'upload'.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Tags">
            <summary>
            Gets or sets a comma-separated list of tag names to assign to the uploaded image for later group reference.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Invalidate">
            <summary>
            Gets or sets a value indicating whether whether to invalidate CDN cache copies of a previously uploaded image that shares the same public ID.
            Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.UseFilename">
            <summary>
            Gets or sets a value indicating whether whether to use the original file name of the uploaded image if available for the public ID. The file name
            is normalized and random characters are appended to ensure uniqueness. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.UniqueFilename">
            <summary>
            Gets or sets value that indicates file uniqueness.
            Only relevant if <see cref="P:CloudinaryDotNet.Actions.UploadSettings.UseFilename"/> is True. When set to false, should not add random characters at
            the end of the filename to guarantee uniqueness.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.DiscardOriginalFilename">
            <summary>
            Gets or sets a value indicating whether to discard the name of the original uploaded file. Relevant when delivering images as attachments
            (setting the 'flags' transformation parameter to 'attachment'). Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.NotificationUrl">
            <summary>
            Gets or sets an HTTP URL to send notification to (a webhook) when the upload is completed.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Proxy">
            <summary>
            Gets or sets proxy to use when Cloudinary accesses remote folders.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Folder">
            <summary>
            Gets or sets base Folder to use when building the Cloudinary public ID.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Overwrite">
            <summary>
            Gets or sets whether to overwrite existing resources with the same public ID.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.RawConvert">
            <summary>
            Gets or sets conversion mode.
            If set to "aspose", Cloudinary will automatically convert Office documents to PDF files and other image
            formats using the Aspose Document Conversion add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Context">
            <summary>
            Gets or sets a set of key-value pairs together with resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.AllowedFormats">
            <summary>
            Gets or sets a set of allowed formats.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Moderation">
            <summary>
            Gets or sets whether to add the uploaded image to a queue of pending moderation images. Set to "webpurify" to
            automatically moderate the uploaded image using the WebPurify Image Moderation add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Format">
            <summary>
            Gets or sets an optional format to convert the uploaded image to before saving in the cloud. For example: "jpg".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Transformation">
            <summary>
            Gets or sets a transformation to run on the uploaded image before saving it in the cloud.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.EagerTransforms">
            <summary>
            Gets or sets a list of transformations to create for the uploaded image during the upload process, instead of lazily
            creating them when being accessed by your site's visitors.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Exif">
            <summary>
            Gets or sets a value indicating whether whether to retrieve the Exif metadata of the uploaded photo. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Colors">
            <summary>
            Gets or sets a value indicating whether to retrieve predominant colors and color histogram of the uploaded image. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Faces">
            <summary>
            Gets or sets a value indicating whether to retrieve a list of coordinates of automatically detected faces in the uploaded photo.
            Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.QualityAnalysis">
            <summary>
            Gets or sets a value indicating whether to retrieve the quality analysis of the image. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.FaceCoordinates">
            <summary>
            Gets or sets the face coordinates. Use plain string (x,y,w,h|x,y,w,h) or <see cref="P:CloudinaryDotNet.Actions.UploadSettings.FaceCoordinates" /> object.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Metadata">
            <summary>
            Gets or sets a value indicating whether to retrieve IPTC and detailed Exif metadata of the uploaded photo. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.ImageMetadata">
            <summary>
            Gets or sets a value indicating whether to retrieve IPTC and detailed Exif metadata of the uploaded photo. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.EagerAsync">
            <summary>
            Gets or sets a value indicating whether to generate the eager transformations asynchronously in the background after the upload request is
            completed, rather than online as part of the upload call. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.EagerNotificationUrl">
            <summary>
            Gets or sets an HTTP URL to send notification to (a webhook) when the generation of eager transformations is completed.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Categorization">
            <summary>
            Gets or sets set to "rekognition_scene" to automatically detect scene categories of photos using the ReKognition Scene
            Categorization add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.AutoTagging">
            <summary>
            Gets or sets AutoTagging parameter. If set, uploaded images are automatically assigned tags based on the
            detected scene categories. The value of the AutoTagging parameter is the minimum score of a detected
            category that should be automatically used as an assigned tag.
            See also http://cloudinary.com/documentation/rekognition_scene_categorization_addon#automatic_image_tagging.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Detection">
            <summary>
            Gets or sets used detection add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.SimilaritySearch">
            <summary>
            Gets or sets used similarity search add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Ocr">
            <summary>
            Gets or sets used ocr add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadSettings.Live">
            <summary>
            Gets or sets a value indicating whether indicates whether the upload preset is used for live streaming. Default: false.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.SearchResource">
            <summary>
            The details of the asset (resource) found.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.SearchResource.m_resourceType">
            <summary>
            The type of file. Possible values: image, raw, video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.PublicId">
            <summary>
            Gets or sets the public id of the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Folder">
            <summary>
            Gets or sets folder name where the resource is stored.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.FileName">
            <summary>
            Gets or sets the name of the resource file.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Format">
            <summary>
            Gets or sets the format of the asset (png, mp4, etc...).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Version">
            <summary>
            Gets or sets current version of the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.ResourceType">
            <summary>
            Gets the type of resource. Possible values: image, raw, video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Type">
            <summary>
            Gets or sets the storage type.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Created">
            <summary>
            Gets or sets date when asset was created.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.CreatedAt">
            <summary>
            Gets or sets date when the resource was created.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Uploaded">
            <summary>
            Gets or sets date when asset was uploaded (overwritten).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.UploadedAt">
            <summary>
            Gets or sets date when asset was uploaded (overwritten).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Length">
            <summary>
            Gets or sets the size of the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Bytes">
            <summary>
            Gets or sets the size of the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.BackupBytes">
            <summary>
            Gets or sets if the resource is backed up, indicates the space taken in the backup system by all backed up versions.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Width">
            <summary>
            Gets or sets width of the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Height">
            <summary>
            Gets or sets width of the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.AspectRatio">
            <summary>
            Gets or sets aspect ratio of the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Pixels">
            <summary>
            Gets or sets number of total pixels of the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Pages">
            <summary>
            Gets or sets the number of pages in the image, if the image has multiple pages.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Url">
            <summary>
            Gets or sets the HTTP URL for accessing the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.SecureUrl">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Status">
            <summary>
            Gets or sets the status of the resource. Possible values: active, deleted.
            By default, a search response includes only resources with active status.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.AccessMode">
            <summary>
            Gets or sets the authentication level currently set for the resource.
            Possible values: public, authenticated.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.AccessControl">
            <summary>
            Gets or sets parameters of the asset access management.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Etag">
            <summary>
            Gets or sets a value to determine whether two versions of an asset are identical.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Tags">
            <summary>
            Gets or sets a list of tag names assigned to resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.ImageMetadata">
            <summary>
            Gets or sets IPTC, XMP, and detailed Exif metadata. Supported for images, video, and audio.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.MetadataFields">
            <summary>
            Gets or sets a key-value pairs of custom metadata fields associated with the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.Context">
            <summary>
            Gets or sets the key-value pairs of general textual context metadata attached to the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.ImageAnalysis">
            <summary>
            Gets or sets image analysis results.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.CreatedBy">
            <summary>
            Gets or sets identity data of asset creator.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResource.UploadedBy">
            <summary>
            Gets or sets identity data about resource was uploaded.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Representation">
            <summary>
            Details of the transformation parameters for the representation.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Representation.Transformation">
            <summary>
            Specifies the transformation parameters for the representation.
            All video transformation parameters except video_sampling are supported.
            Common transformation parameters for representations include: width, height
            (or aspect_ratio), bit_rate, video_codec, audio_codec, sample_rate (or fps), etc.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.RepresentationsConverter">
            <summary>
            Instructions on how to serialize the instances of <see cref="T:CloudinaryDotNet.Transformation"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RepresentationsConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns> True if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RepresentationsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Reads the JSON representation of the object.</summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RepresentationsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Writes the JSON representation of the object.</summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.StreamingProfileBaseData">
            <summary>
            Basic details of the streaming profile.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StreamingProfileBaseData.Name">
            <summary>
            Gets or sets the identification name of the new streaming profile.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StreamingProfileBaseData.DisplayName">
            <summary>
            Gets or sets a descriptive name for the profile.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StreamingProfileBaseData.Predefined">
            <summary>
            Gets or sets a value indicating whether streaming profile is defined.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.StreamingProfileBaseParams">
            <summary>
            Base parameters of update streaming profile request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StreamingProfileBaseParams.DisplayName">
            <summary>
            Gets or sets a descriptive name for the profile.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StreamingProfileBaseParams.Representations">
            <summary>
            Gets or sets a list of representations that defines a custom streaming profile.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StreamingProfileBaseParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StreamingProfileBaseParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MetadataFieldResult">
            <summary>
            Detailed information about metadata field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldResult.ExternalId">
            <summary>
            Gets or sets a unique immutable identification string for the metadata field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldResult.Type">
            <summary>
             Gets or sets the type of value that can be assigned to the metadata field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldResult.Label">
            <summary>
             Gets or sets the label of the metadata field for display purposes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldResult.Mandatory">
            <summary>
            Gets or sets a value indicating whether a value must be given for this field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldResult.DefaultValue">
            <summary>
            Gets or sets the default value for the field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldResult.Validation">
            <summary>
            Gets or sets any validation rules to apply when values are entered (or updated) for this field.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MetadataFieldResult.DataSource">
            <summary>
             Gets or sets the predefined list of values, referenced by external_ids, available for this field.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.StreamingProfileData">
            <summary>
            Details of the streaming profile.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StreamingProfileData.Representations">
            <summary>
            Gets or sets a collection of Representations that defines a custom streaming profile.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.StreamingProfileListResult">
            <summary>
            Result of listing of streaming profiles.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StreamingProfileListResult.Data">
            <summary>
            Gets or sets list of basic details of the streaming profiles.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.StreamingProfileResult">
            <summary>
            Detailed information about streaming profile.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StreamingProfileResult.Message">
            <summary>
            Gets or sets an API message.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StreamingProfileResult.Data">
            <summary>
            Gets or sets details of the streaming profile.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.StreamingProfileUpdateParams">
            <summary>
            Parameters of update streaming profile request.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.StreamingProfileCreateParams">
            <summary>
            Parameters of create streaming profile request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.StreamingProfileCreateParams.Name">
            <summary>
            Gets or sets the identification name to assign to the new streaming profile. The name is
            case-insensitive and can contain alphanumeric characters, underscores (_) and hyphens (-).
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StreamingProfileCreateParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.StreamingProfileCreateParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.CreateTransformParams">
            <summary>
            Definition of the properties for creation of transformation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.CreateTransformParams.Name">
            <summary>
            Gets or sets name of the transformation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.CreateTransformParams.Transform">
            <summary>
            Gets or sets strict representation of transformation parameters.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.CreateTransformParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.CreateTransformParams.ToParamsDictionary">
            <summary>
            Map object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DelDerivedResParams">
            <summary>
            Parameters to delete derived resources.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DelDerivedResParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.DelDerivedResParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelDerivedResParams.DerivedResources">
            <summary>
            Gets or sets whether to delete all derived resources with the given IDs.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelDerivedResParams.Transformations">
            <summary>
            Gets or sets whether to delete all derived resources with the given transformation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelDerivedResParams.PublicId">
            <summary>
            Gets or sets whether to delete all derived resources with the given public id.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DelDerivedResParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DelDerivedResParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DelDerivedResResult">
            <summary>
            Parsed result of deletion derived resources.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelDerivedResResult.Deleted">
            <summary>
            Gets or sets the list of media assets requested for deletion, with the status of each asset
            (deleted unless there was an issue).
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DeleteFolderResult">
            <summary>
            Parsed result of folder deletion.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DeleteFolderResult.Deleted">
            <summary>
            Gets or sets the list of media assets requested for deletion, with the status of each asset (deleted unless there was an issue).
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DeleteUploadPresetResult">
            <summary>
            Results of DeleteUploadPreset operation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DeleteUploadPresetResult.Message">
            <summary>
            Gets or sets API message.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DeletionParams">
            <summary>
            Parameters for deletion of a single asset from your Cloudinary account.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DeletionParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.DeletionParams"/> class.
            </summary>
            <param name="publicId">The identifier of the uploaded asset. </param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DeletionParams.PublicId">
            <summary>
            Gets or sets the identifier of the uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DeletionParams.Type">
            <summary>
            Gets or sets the specific type of the asset. Valid values: upload, private and authenticated. Default: upload.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DeletionParams.Invalidate">
            <summary>
            Gets or sets a value indicating whether if true, invalidates CDN cached copies of the asset (and all its transformed versions). Default: false.
            Note that it usually takes a few minutes (although it might take up to an hour) for the invalidation to
            fully propagate through the CDN.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DeletionParams.ResourceType">
            <summary>
            Gets or sets the type of asset to destroy. Valid values: image, raw, and video. Default: image.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DeletionParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DeletionParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DeletionResult">
            <summary>
            Parsed result of asset deletion.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DeletionResult.Result">
            <summary>
            Gets or sets result description.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DelResParams">
            <summary>
            Parameters for deletion of resources.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DelResParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.DelResParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResParams.ResourceType">
            <summary>
            Gets or sets the type of file to delete. Default: image. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResParams.Type">
            <summary>
            Gets or sets the storage type: upload, private, authenticated, facebook, twitter, gplus, instagram_name,
            gravatar, youtube, hulu, vimeo, animoto, worldstarhiphop or dailymotion. Default: upload. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResParams.KeepOriginal">
            <summary>
            Gets or sets a value indicating whether if true, delete only the derived images of the matching resources.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResParams.Invalidate">
            <summary>
            Gets or sets a value indicating whether whether to invalidate CDN cache copies of a previously uploaded image that shares the same public ID.
            Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResParams.NextCursor">
            <summary>
            Gets or sets whether to continue deletion from the given cursor. Notice that it doesn't have a lot of meaning unless the
            <see cref="P:CloudinaryDotNet.Actions.DelResParams.KeepOriginal"/> flag is set to True.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResParams.PublicIds">
            <summary>
            Gets or sets whether to delete all resources with the given public IDs (array of up to 100 public_ids).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResParams.Prefix">
            <summary>
            Gets or sets whether to delete all resources, including derived resources, where the public ID starts with the given prefix
            (up to a maximum of 1000 original resources).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResParams.Tag">
            <summary>
            Gets or sets whether to delete all resources (and their derivatives) with the given tag name (up to a maximum of 1000 original
            resources).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResParams.All">
            <summary>
            Gets or sets a value indicating whether optional. Get or set whether to delete all resources (of the relevant resource type and type), including
            derived resources (up to a maximum of 1000 original resources). Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResParams.Transformations">
            <summary>
            Gets or sets a list of transformations. When provided, only derived resources matched by the transformations
            would be deleted.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DelResParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.DelResParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DelResResult">
            <summary>
            Parsed result of deletion resources.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResResult.Deleted">
            <summary>
            Gets or sets the list of media assets requested for deletion, with the status of each asset (deleted unless there was
            an issue).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResResult.NextCursor">
            <summary>
            Gets or sets a value for a situation when a deletion request has more than 1000 resources to delete, the response includes the
            <see cref="P:CloudinaryDotNet.Actions.DelResResult.Partial"/> boolean parameter set to true, as well as a <see cref="P:CloudinaryDotNet.Actions.DelResResult.NextCursor"/> value. You can
            then specify this returned <see cref="P:CloudinaryDotNet.Actions.DelResResult.NextCursor"/> value as the <see cref="P:CloudinaryDotNet.Actions.DelResParams.NextCursor"/>
            parameter of the following deletion request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResResult.Partial">
            <summary>
            Gets or sets a value indicating whether whether resources were partially deleted. Use it with the <see cref="P:CloudinaryDotNet.Actions.DelResResult.NextCursor"/> property.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelResResult.DeletedCounts">
            <summary>
            Gets or sets detailed statistics of deleted resource.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ExplicitParams">
            <summary>
            Parameters for the explicit method to apply actions to already uploaded assets.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ExplicitParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.ExplicitParams"/> class with public id.
            </summary>
            <param name="publicId">The identifier that is used for accessing the uploaded resource.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.EagerTransforms">
            <summary>
            Gets or sets a list of transformations to create for the uploaded image during the upload process, instead
            of lazily creating them when being accessed by your site's visitors. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.EagerAsync">
            <summary>
            Gets or sets whether to generate the eager transformations asynchronously in the background. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.EagerNotificationUrl">
            <summary>
            Gets or sets an HTTP or HTTPS URL to notify your application (a webhook) when the generation of eager
            transformations is completed. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Type">
            <summary>
            Gets or sets the specific type of asset.
            Valid values for uploaded images and videos: upload, private, or authenticated.
            Valid values for remotely fetched images: fetch, facebook, twitter, gplus, instagram_name, gravatar,
            youtube, hulu, vimeo, animoto, worldstarhiphop or dailymotion.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Ocr">
            <summary>
            Gets or sets OCR value. Set to "adv_ocr" to extract all text elements in an image as well as the bounding
            box coordinates of each detected element using the OCR text detection and extraction add-on.
            Relevant for images only.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.ResourceType">
            <summary>
            Gets or sets the type of resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.PublicId">
            <summary>
            Gets or sets the identifier of the uploaded asset or the URL of the remote asset.
            Note: The public ID value for images and videos should not include a file extension.Include the file
            extension for raw files only.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Headers">
            <summary>
            Gets or sets an HTTP header or a list of headers lines for returning as response HTTP headers when delivering the
            uploaded image to your users. Supported headers: 'Link', 'X-Robots-Tag'.
            For example 'X-Robots-Tag: noindex'.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Tags">
            <summary>
            Gets or sets a comma-separated list of tag names to assign to an asset that replaces any current tags assigned to
            the asset (if any).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.FaceCoordinates">
            <summary>
            Gets or sets the coordinates of faces contained in an uploaded image and overrides the automatically detected
            faces.
            Use plain string (x,y,w,h|x,y,w,h) or <see cref="T:CloudinaryDotNet.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.CustomCoordinates">
            <summary>
            Gets or sets the coordinates of a region contained in an uploaded image that is subsequently used for cropping
            uploaded images using the custom gravity mode. The region is specified by the X and Y coordinates of the top
            left corner and the width and height of the region, as a comma-separated list.
            For example: 85,120,220,310. Relevant for images only.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Context">
            <summary>
            Gets or sets a list of the key-value pairs of general textual context metadata to attach to an uploaded asset.
            The context values of uploaded files are available for fetching using the Admin API.
            For example: alt=My image, caption=Profile image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Metadata">
            <summary>
            Gets or sets a list of custom metadata fields (by external_id) and the values to assign to each of them.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.ResponsiveBreakpoints">
            <summary>
            Gets or sets requests that Cloudinary automatically find the best breakpoints from the array of breakpoint request
            settings.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.AccessControl">
            <summary>
            Gets or sets a list of AccessControlRule parameters. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Invalidate">
            <summary>
            Gets or sets a value indicating whether whether to invalidate the asset (and all its transformed versions) on the CDN. Default: false.
            </summary>
            <value>
              <c>true</c> to invalidate; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Async">
            <summary>
            Gets or sets whether to perform the request in the background (asynchronously). Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.QualityAnalysis">
            <summary>
            Gets or sets a value indicating whether whether to return a quality analysis value for the image between 0 and 1, where 0 means the image is blurry
            and out of focus and 1 means the image is sharp and in focus. Default: false. Relevant for images only.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Overwrite">
             <summary>
             Gets or sets overwrite.
            
             Optional. When applying eager for already existing video transformations, this
             setting indicates whether to force the existing derived video resources to be regenerated.
             Default for videos: false. Note that when specifying existing eager transformations for images,
             corresponding derived images are always regenerated.
             </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.CinemagraphAnalysis">
            <summary>
            Gets or sets a value indicating whether the animation/video is cinemagraph. Optional (Boolean, default: false).
            If true, returns a cinemagraph analysis value for the animation/video between 0 and 1, where 0 means the video/animation
            is NOT a cinemagraph and 1 means the GIF/video IS a cinemagraph.
            Running cinemagraph analysis on static images returns 0.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.ImageMetadata">
            <summary>
            Gets or sets a value indicating whether to include IPTC, XMP, and detailed Exif metadata.
            Supported for images, video, and audio.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.NotificationUrl">
            <summary>
            Gets or sets an HTTP URL to send notification to (a webhook) when the operation or any additional
            requested asynchronous action is completed. If not specified,
            the response is sent to the global Notification URL (if defined)
            in the Upload settings of your account console.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Colors">
            <summary>
            Gets or sets a value indicating whether to retrieve predominant colors and color histogram of the uploaded
            image. If one or more colors contain an alpha channel, then 8-digit RGBA hex quadruplet values are returned.
            Default: false. Relevant for images only.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Phash">
            <summary>
            Gets or sets a value that indicates whether to return the perceptual hash (pHash) on the uploaded image.
            The pHash acts as a fingerprint that allows checking image similarity.
            Default: false. Relevant for images only.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Faces">
            <summary>
            Gets or sets a value that indicates whether to return the coordinates of faces contained in an uploaded image
            (automatically detected or manually defined).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.QualityOverride">
            <summary>
            Gets or sets a quality value to override the value used when the image is encoded
            with Cloudinary's automatic content-aware quality algorithm.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.Moderation">
            <summary>
            Gets or sets Moderation.
            For all asset types: Set to manual to add the asset to a queue of pending assets that can be moderated
            using the Admin API or the Cloudinary Management Console, or set to metascan to automatically moderate
            the uploaded asset using the MetaDefender Anti-malware Protection add-on.
            For images only: Set to webpurify or aws_rek to automatically moderate the image
            using the WebPurify Image Moderation add-on or the Amazon Rekognition AI Moderation add-on respectively.
            Note: Rejected assets are automatically invalidated on the CDN within approximately ten minutes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitParams.AccessibilityAnalysis">
            <summary>
            Gets or sets accessibility analysis information.
            Optional (Boolean, default: false).
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ExplicitParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ExplicitParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ExplicitResult">
            <summary>
            Parsed response after a call of Explicit method.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Eager">
            <summary>
            Gets or sets the specific type of asset.
            </summary>
            <summary>
            The derived images generated as per the requested eager transformations of the method call.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.ResponsiveBreakpoints">
            <summary>
            Gets or sets a list of responsive breakpoint settings of the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Status">
            <summary>
            Gets or sets a status that is returned when passing 'Async' argument set to 'true' to the server.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Info">
            <summary>
            Gets or sets any requested information from executing one of the Cloudinary Add-ons on the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.QualityAnalysis">
            <summary>
            Gets or sets details of the quality analysis.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.QualityScore">
            <summary>
            Gets or sets the quality score.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Colors">
            <summary>
            Gets or sets color information: predominant colors and histogram of 32 leading colors.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.CinemagraphAnalysis">
            <summary>
            Gets or sets details of cinemagraph analysis for the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Metadata">
            <summary>
            Gets or sets IPTC, XMP, and detailed Exif metadata. Supported for images, video, and audio.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.ImageMetadata">
            <summary>
            Gets or sets IPTC, XMP, and detailed Exif metadata. Supported for images, video, and audio.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Phash">
            <summary>
            Gets or sets a perceptual hash (pHash) of the uploaded resource for image similarity detection.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Faces">
            <summary>
            Gets or sets a list of coordinates of detected faces.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Width">
            <summary>
            Gets or sets parameter "width" of the resource. Not relevant for raw files.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Height">
            <summary>
            Gets or sets parameter "height" of the resource. Not relevant for raw files.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.SlotToken">
            <summary>
            Gets or sets a slot token.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Pages">
            <summary>
            Gets or sets the number of pages in the asset: included if the asset has multiple pages (e.g., PDF or animated GIF).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.IllustrationScore">
            <summary>
            Gets or sets the likelihood that the image is an illustration as opposed to a photograph.
            A value between 0 (photo) and 1.0 (illustration).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.Predominant">
            <summary>
            Gets or sets the predominant colors in the image according to both a Google palette and a Cloudinary palette.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.ProfilingData">
            <summary>
            Gets or sets the predominant colors in the image according to both a Google palette and a Cloudinary palette.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplicitResult.AccessibilityAnalysis">
            <summary>
            Gets or sets the color ambiguity score that indicate how good\bad an image is for colorblind people.
            Will they be able to differentiate between different elements in the image.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ExplicitResult.SetValues(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Overrides corresponding method of <see cref="T:CloudinaryDotNet.Actions.BaseResult"/> class.
            Populates additional token fields.
            </summary>
            <param name="source">JSON token received from the server.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ExplodeParams">
            <summary>
            Parameters for the Explode method.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ExplodeParams.#ctor(System.String,CloudinaryDotNet.Transformation)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.ExplodeParams"/> class.
            </summary>
            <param name="publicId">The identifier of the uploaded multi-page file (PDF or animated GIF).
            Note: The public ID for images does not include a file extension.</param>
            <param name="transformation">A transformation to run on all the pages before storing them as derived
            images.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplodeParams.PublicId">
            <summary>
            Gets or sets the identifier of the uploaded multi-page file (PDF or animated GIF).
            Note: The public ID for images does not include a file extension.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplodeParams.Transformation">
            <summary>
            Gets or sets a transformation to run on all the pages before storing them as derived images.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplodeParams.NotificationUrl">
            <summary>
            Gets or sets an HTTP or HTTPS URL to notify your application (a webhook) when the process has completed. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplodeParams.Format">
            <summary>
            Gets or sets an optional format to convert the images before storing them in your Cloudinary account. Optional.
            Default: png.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplodeParams.Type">
            <summary>
            Gets or sets the specific type of the asset.
            Valid values: upload, private and authenticated. Default: upload.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ExplodeParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ExplodeParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ExplodeResult">
            <summary>
            Parsed response after a call of Explode method.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplodeResult.Status">
            <summary>
            Gets or sets status that is returned when passing 'Async' argument set to 'true' to the server.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ExplodeResult.BatchId">
            <summary>
            Gets or sets id of the batch.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.GetFoldersResult">
            <summary>
            Parsed result of folders listing.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetFoldersResult.Folders">
            <summary>
            Gets or sets list of folders.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetFoldersResult.NextCursor">
             <summary>
             Gets or sets the next cursor.
            
             When a listing request has more results to return than <see cref="P:CloudinaryDotNet.Actions.GetFoldersParams.MaxResults"/>,
             the <see cref="P:CloudinaryDotNet.Actions.GetFoldersResult.NextCursor"/> value is returned as part of the response. You can then specify this value as
             the <see cref="P:CloudinaryDotNet.Actions.GetFoldersResult.NextCursor"/> parameter of the following listing request.
             </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetFoldersResult.TotalCount">
            <summary>
            Gets or sets the total count of folders.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.GetResourceParams">
            <summary>
            Parameters of the request of resource as well as its derived resources.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.GetResourceParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.GetResourceParams"/> class.
            </summary>
            <param name="publicId">The public ID of the resource.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.PublicId">
            <summary>
            Gets or sets public id assigned to the requested resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.ResourceType">
            <summary>
            Gets or sets the type of file. Optional (String, default: image).
            Possible values: image, raw, video.
            Note: Use the video resource type for all video resources as well as for audio files, such as .mp3.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Type">
            <summary>
            Gets or sets the storage type: upload, private, authenticated, facebook, twitter,
            gplus, instagram_name, gravatar, youtube, hulu, vimeo, animoto, worldstarhiphop or dailymotion.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Exif">
            <summary>
            Gets or sets a value indicating whether Exif is used. Optional (Boolean, default: false). Deprecated. Use <see cref="P:CloudinaryDotNet.Actions.GetResourceParams.ImageMetadata"/> instead.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Colors">
            <summary>
            Gets or sets a value indicating whether to include color information: predominant colors and histogram. Optional (Boolean, default: false).
            of 32 leading colors.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Faces">
            <summary>
            Gets or sets a value indicating whether to include a list of coordinates of detected faces. Optional (Boolean, default: false).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.QualityAnalysis">
            <summary>
            Gets or sets a value indicating whether to return a quality analysis value for the image
            between 0 and 1, where 0 means the image is blurry and out of focus and 1 means the image is sharp
            and in focus. Optional (Boolean, default: false).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Metadata">
            <summary>
            Gets or sets a value indicating whether to include IPTC, XMP, and detailed Exif metadata.
            Supported for images, video, and audio. Optional (Boolean, default: false).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.ImageMetadata">
            <summary>
            Gets or sets a value indicating whether to include IPTC, XMP, and detailed Exif metadata.
            Supported for images, video, and audio.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Coordinates">
            <summary>
            Gets or sets a value indicating whether to include previously specified custom cropping coordinates and
            faces coordinates. Optional (Boolean, default: false).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.MaxResults">
            <summary>
            Gets or sets the number of derived images to return. Default=10. Maximum=100. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Phash">
            <summary>
            Gets or sets a value indicating whether to include the perceptual hash (pHash) of the uploaded photo for
            image similarity detection. Optional (Boolean, default: false).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Pages">
            <summary>
            Gets or sets a value indicating whether there is a number of pages of a multi-page document.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.DerivedNextCursor">
            <summary>
            Gets or sets if there are more derived images than max_results, this is returned as part of the response.
            You can then specify this value as the derived_next_cursor parameter of the following listing request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Prefix">
            <summary>
            Gets or sets find all assets with a public ID that starts with the given prefix.
            The assets are sorted by public ID in the response.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.NextCursor">
            <summary>
             Gets or sets when a request has more results to return than max_results,
            the next_cursor value is returned as part of the response.
            You can then specify this value as the next_cursor parameter of a following request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.CinemagraphAnalysis">
            <summary>
            Gets or sets a value indicating whether the animation/video is cinemagraph. Optional (Boolean, default: false).
            If true, includes a cinemagraph analysis value for the animation/video between 0 and 1, where 0 means the video/animation
            is NOT a cinemagraph and 1 means the GIF/video IS a cinemagraph.
            Running cinemagraph analysis on static images returns 0.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.StartAt">
            <summary>
            Gets or sets get assets that were created since the given timestamp.
            Supported unless prefix or public_ids were specified.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Direction">
            <summary>
            Gets or sets the order of returned assets, according to the created_at date.
            Note: if a prefix is specified, this parameter is ignored and the results
            are sorted by public ID. Possible values: desc or -1 (default), asc or 1.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Tags">
            <summary>
            Gets or sets whether to include the list of tag names assigned to each asset. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Context">
            <summary>
            Gets or sets whether to include key-value pairs of context associated with each asset. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Moderation">
            <summary>
            Gets or sets whether to optionally include the image moderation status of each asset. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.AccessibilityAnalysis">
            <summary>
            Gets or sets a value indicating whether to include accessibility analysis information.
            Optional (Boolean, default: false).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceParams.Versions">
            <summary>
            Gets or sets a value indicating whether to include asset version information. Default: false.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.GetResourceParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.GetResourceParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.GetResourceResult">
            <summary>
            Parsed response with the detailed resource information.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.GetResourceResult.m_resourceType">
            <summary>
            The type of file. Possible values: image, raw, video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.PublicId">
            <summary>
            Gets or sets public ID assigned to the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Format">
            <summary>
            Gets or sets the format this resource is delivered in.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Version">
            <summary>
            Gets or sets current version of the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.ResourceType">
            <summary>
            Gets the type of resource. Possible values: image, raw, video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Type">
            <summary>
            Gets or sets the storage type: upload, private, authenticated, facebook, twitter, gplus, instagram_name, gravatar,
            youtube, hulu, vimeo, animoto, worldstarhiphop or dailymotion.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Created">
            <summary>
            Gets or sets date when the resource was created.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.CreatedAt">
            <summary>
            Gets or sets date when the resource was created.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Length">
            <summary>
            Gets or sets size of the resource in bytes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Bytes">
            <summary>
            Gets or sets size of the resource in bytes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Width">
            <summary>
            Gets or sets parameter "width" of the resource. Not relevant for raw files.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Height">
            <summary>
            Gets or sets parameter "height" of the resource. Not relevant for raw files.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Url">
            <summary>
            Gets or sets URL to the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.SecureUrl">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.NextCursor">
            <summary>
            Gets or sets when a listing request has more results to return than <see cref="P:CloudinaryDotNet.Actions.GetResourceParams.MaxResults"/>,
            the <see cref="P:CloudinaryDotNet.Actions.GetResourceResult.NextCursor"/> value is returned as part of the response. You can then specify this value as
            the <see cref="P:CloudinaryDotNet.Actions.GetResourceResult.NextCursor"/> parameter of the following listing request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.DerivedNextCursor">
            <summary>
            Gets or sets if there are more derived images than <see cref="P:CloudinaryDotNet.Actions.GetResourceParams.MaxResults"/>,
            the <see cref="P:CloudinaryDotNet.Actions.GetResourceResult.DerivedNextCursor"/> value is returned as part of the response. You can then specify this value as
            the <see cref="P:CloudinaryDotNet.Actions.GetResourceResult.DerivedNextCursor"/> parameter of the following listing request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Exif">
            <summary>
            Gets or sets exif metadata of the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Metadata">
            <summary>
            Gets or sets iPTC, XMP, and detailed Exif metadata. Supported for images, video, and audio.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.ImageMetadata">
            <summary>
            Gets or sets iPTC, XMP, and detailed Exif metadata. Supported for images, video, and audio.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Faces">
            <summary>
            Gets or sets a list of coordinates of detected faces.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.QualityAnalysis">
            <summary>
            Gets or sets a quality analysis value for the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.QualityScore">
            <summary>
            Gets or sets the quality score.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Colors">
            <summary>
            Gets or sets color information: predominant colors and histogram of 32 leading colors.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Derived">
            <summary>
            Gets or sets a list of derived resources.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Tags">
            <summary>
            Gets or sets a list of tag names assigned to resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Moderation">
            <summary>
            Gets or sets image moderation status of the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Context">
            <summary>
            Gets or sets a key-value pairs of context associated with the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.MetadataFields">
            <summary>
            Gets or sets a key-value pairs of custom metadata fields associated with the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Phash">
            <summary>
            Gets or sets a perceptual hash (pHash) of the uploaded resource for image similarity detection.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Predominant">
            <summary>
            Gets or sets the predominant colors in the image according to both a Google palette and a Cloudinary palette.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Coordinates">
            <summary>
            Gets or sets the coordinates of a single region contained in an image that is subsequently used for cropping the image using
            the custom gravity mode.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Info">
            <summary>
            Gets or sets any requested information from executing one of the Cloudinary Add-ons on the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.AccessControl">
            <summary>
            Gets or sets parameters of the asset access management.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Pages">
            <summary>
            Gets or sets the number of pages in the asset: included if the asset has multiple pages (e.g., PDF or animated GIF).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.AccessMode">
            <summary>
            Gets or sets the accessibility mode of the media asset: public, or authenticated.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.CinemagraphAnalysis">
            <summary>
            Gets or sets details of cinemagraph analysis for the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.AccessibilityAnalysis">
            <summary>
            Gets or sets the color ambiguity score that indicate how good\bad an image is for colorblind people.
            Will they be able to differentiate between different elements in the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.AssetId">
            <summary>
            Gets or sets asset identifier.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetResourceResult.Versions">
            <summary>
            Gets or sets list of asset versions.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.GetTransformParams">
            <summary>
            Parameters of the request for transformation details.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.GetTransformParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.GetTransformParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetTransformParams.Transformation">
            <summary>
            Gets or sets name of the transformation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetTransformParams.MaxResults">
            <summary>
            Gets or sets max number of derived resources to return. Default=10. Maximum=100.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetTransformParams.NextCursor">
             <summary>
             Gets or sets the next cursor.
            
             Optional. When a request has more results to return than max_results,
             the next_cursor value is returned as part of the response.
             You can then specify this value as the next_cursor parameter of a following request.
             </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.GetTransformParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.GetTransformParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.GetTransformResult">
            <summary>
            Parsed details of a single transformation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetTransformResult.Name">
            <summary>
            Gets or sets the name of a named transformation (e.g., t_trans1) or the transformation itself as expressed in a dynamic
            URL (e.g., w_110,h_100,c_fill).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetTransformResult.Strict">
            <summary>
            Gets or sets a value indicating whether indicates whether the transformation can be used when strict transformations are enabled.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetTransformResult.AllowedForStrict">
            <summary>
            Gets or sets a value indicating whether the transformation can be used when strict transformations are enabled.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetTransformResult.Used">
            <summary>
            Gets or sets a value indicating whether indicates whether the transformation has been used to create a derived asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetTransformResult.Info">
            <summary>
            Gets or sets any requested information from executing one of the Cloudinary Add-ons on the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetTransformResult.Derived">
            <summary>
            Gets or sets the list of derived assets generated (and cached) from the original media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetTransformResult.Named">
            <summary>
            Gets or sets a value indicating whether indicates whether the transformation is a named transformation.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.GetUploadPresetResult">
            <summary>
            Upload preset details.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetUploadPresetResult.Name">
            <summary>
            Gets or sets name of upload preset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetUploadPresetResult.Unsigned">
            <summary>
            Gets or sets a value indicating whether true enables unsigned uploading to Cloudinary with this upload preset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetUploadPresetResult.Settings">
            <summary>
            Gets or sets other preset settings.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.GetUploadPresetResult.Eval">
            <summary>
            Gets or sets JavaScript code expression to be evaluated.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ImageUploadParams">
            <summary>
            Parameters of image file uploading.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ImageUploadParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.ImageUploadParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Format">
            <summary>
            Gets or sets an optional format to convert the uploaded image to before saving in the cloud. For example: "jpg".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Transformation">
            <summary>
            Gets or sets a transformation to run on the uploaded image before saving it in the cloud. For example: limit the
            dimension of the uploaded image to 512x512 pixels.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.EagerTransforms">
            <summary>
            Gets or sets a list of transformations to create for the uploaded image during the upload process, instead of lazily
            creating them when accessed by your site's visitors.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Type">
            <summary>
            Gets or sets privacy mode of the image. Valid values: 'private', 'upload' and 'authenticated'.
            Default: 'upload'.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.ResourceType">
            <summary>
             Gets the type of image asset you are uploading.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Exif">
            <summary>
            Gets or sets whether to retrieve the Exif metadata of the uploaded photo. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Colors">
            <summary>
            Gets or sets whether to retrieve predominant colors and color histogram of the uploaded image. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Faces">
            <summary>
            Gets or sets whether to retrieve a list of coordinates of automatically detected faces in the uploaded photo.
            Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.QualityAnalysis">
            <summary>
            Gets or sets whether to retrieve the quality analysis of the image. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.FaceCoordinates">
            <summary>
            Gets or sets the coordinates of faces contained in an uploaded image and overrides the automatically detected
            faces. Format: x,y,w,h|x,y,w,h. For example: string "10,20,150,130❘213,345,82,61" or <see cref="T:CloudinaryDotNet.Core.Rectangle"/>.
            Relevant for images only.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.CustomCoordinates">
            <summary>
            Gets or sets coordinates of an interesting region contained in an uploaded image. The given coordinates are used for
            cropping uploaded images using the custom gravity mode. The region is specified by the X and Y coordinates
            of the top left corner and the width and height of the region. For example: "85,120,220,310". Otherwise,
            one can use <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Metadata">
            <summary>
            Gets or sets whether to retrieve IPTC and detailed Exif metadata of the uploaded photo. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.ImageMetadata">
            <summary>
            Gets or sets whether to retrieve IPTC and detailed Exif metadata of the uploaded photo. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.EagerAsync">
            <summary>
            Gets or sets whether to generate the eager transformations asynchronously in the background after the upload request is
            completed rather than online as part of the upload call. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.EagerNotificationUrl">
            <summary>
            Gets or sets an HTTP URL to send notification to (a webhook) when the generation of eager transformations is completed.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Categorization">
            <summary>
            Gets or sets a comma-separated list of the categorization add-ons to run on the asset. Set to google_tagging,
            google_video_tagging, imagga_tagging and/or aws_rek_tagging to automatically classify the scenes of the
            uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.BackgroundRemoval">
            <summary>
            Gets or sets background removal.
            Set to remove_the_background to automatically clear the background of an image using the
            Remove-The-Background Editing add-on.
            Relevant for images only.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.AutoTagging">
            <summary>
            Gets or sets whether to assign tags to an asset according to detected scene categories with a confidence score higher
            than the given value (between 0.0 and 1.0).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Detection">
            <summary>
            Gets or sets recognition parameter.
            Set to adv_face or aws_rek_face to extract an extensive list of face attributes from an image using the
            Advanced Facial Attribute Detection or Amazon Rekognition Celebrity Detection add-ons.
            Relevant for images only.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.SimilaritySearch">
            <summary>
            Gets or sets TinEye add-on usage.
            Set to "tineye" to use the TinEye add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Ocr">
            <summary>
            Gets or sets Ocr parameter.
            Set to "adv_ocr" to extract all text elements in an image as well as the bounding box coordinates of each
            detected element using the OCR text detection and extraction add-on.
            Relevant for images only.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.ReturnDeleteToken">
            <summary>
            Gets or sets whether to return a deletion token in the upload response. The token can be used to delete the uploaded
            asset within 10 minutes using an unauthenticated API request. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.UploadPreset">
            <summary>
            Gets or sets whether it is allowed to use an upload preset for setting parameters of this upload (optional).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Unsigned">
            <summary>
            Gets or sets whether it is allowed to send unsigned request. Requires setting appropriate <see cref="P:CloudinaryDotNet.Actions.ImageUploadParams.UploadPreset"/>.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.Phash">
            <summary>
            Gets or sets the perceptual hash usage (Boolean, default: false).
            If true, include the perceptual hash (pHash) of the uploaded photo for
            image similarity detection. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.ResponsiveBreakpoints">
            <summary>
            Gets or sets whether it is allowed to pass a list of ResponsiveBreakpoints parameters to request Cloudinary to automatically
            find the best breakpoints.
            Relevant for images only. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.CinemagraphAnalysis">
            <summary>
            Gets or sets a value indicating whether the animation/video is cinemagraph. Optional (Boolean, default: false).
            If true, returns a cinemagraph analysis value for the animation/video between 0 and 1, where 0 means the video/animation
            is NOT a cinemagraph and 1 means the GIF/video IS a cinemagraph.
            Running cinemagraph analysis on static images returns 0.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadParams.AccessibilityAnalysis">
            <summary>
            Gets or sets whether to include accessibility analysis information.
            Optional (Boolean, default: false).
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ImageUploadParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ImageUploadResult">
            <summary>
            Parsed response after upload of the image resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Width">
            <summary>
            Gets or sets parameter "width" of the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Height">
            <summary>
            Gets or sets parameter "height" of the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Exif">
            <summary>
            Gets or sets exif metadata for the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Metadata">
            <summary>
            Gets or sets returned metadata for the image. Includes: PixelsPerUnitX, PixelsPerUnitY, PixelUnits, Colorspace, and DPI.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.ImageMetadata">
            <summary>
            Gets or sets the returned metadata for the image.
            Includes: PixelsPerUnitX, PixelsPerUnitY, PixelUnits, Colorspace, and DPI.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Faces">
            <summary>
            Gets or sets the coordinates of faces contained in an uploaded image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.QualityAnalysis">
            <summary>
            Gets or sets quality analysis value for the image between 0 and 1, where 0 means the image is blurry and out of focus
            and 1 means the image is sharp and in focus.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.QualityScore">
            <summary>
            Gets or sets the quality score.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Colors">
            <summary>
            Gets or sets the predominant colors and color histogram of the uploaded image.
            Note: If all returned colors are opaque, then 6-digit RGB hex values are returned.
            If one or more colors contain an alpha channel, then 8-digit RGBA hex quadruplet values are returned.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Phash">
            <summary>
            Gets or sets the perceptual hash (pHash) of the uploaded photo for image similarity detection.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.DeleteToken">
            <summary>
            Gets or sets the deletion token for the image. The token can be used to delete the uploaded asset within 10 minutes
            using an unauthenticated API request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Info">
            <summary>
            Gets or sets the detailed info about the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Pages">
            <summary>
            Gets or sets the number of page(s) or layers in a multi-page or multi-layer file (PDF, animated GIF, TIFF, PSD).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.ResponsiveBreakpoints">
            <summary>
            Gets or sets list of responsive breakpoints for the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Context">
            <summary>
            Gets or sets a key-value pairs of context associated with the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.IllustrationScore">
            <summary>
            Gets or sets the likelihood that the image is an illustration as opposed to a photograph.
            A value between 0 (photo) and 1.0 (illustration).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.SemiTransparent">
            <summary>
            Gets or sets a value indicating whether if the image has an alpha (transparency) channel.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Grayscale">
            <summary>
            Gets or sets a value indicating whether the image only contains a single grayscale channel.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Eager">
            <summary>
            Gets or sets the specific type of asset.
            </summary>
            <summary>
            The derived images generated as per the requested eager transformations of the method call.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.Predominant">
            <summary>
            Gets or sets the predominant colors in the image according to both a Google palette and a Cloudinary palette.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.CinemagraphAnalysis">
            <summary>
            Gets or sets details of cinemagraph analysis for the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ImageUploadResult.AccessibilityAnalysis">
            <summary>
            Gets or sets the color ambiguity score that indicate how good\bad an image is for colorblind people.
            Will they be able to differentiate between different elements in the image.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ImageUploadResult.SetValues(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Overrides corresponding method of <see cref="T:CloudinaryDotNet.Actions.BaseResult"/> class.
            Populates additional token fields.
            </summary>
            <param name="source">JSON token received from the server.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListResourcesParams">
            <summary>
            Parameters of list resources request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesParams.ResourceType">
            <summary>
            Gets or sets type of resource (image, raw).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesParams.Type">
            <summary>
            Gets or sets type of resource (upload, facebook, etc).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesParams.MaxResults">
            <summary>
            Gets or sets max number of resources to return. Default=10. Maximum=500. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesParams.Tags">
            <summary>
            Gets or sets a value indicating whether if true, include list of tag names assigned for each resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesParams.Moderations">
            <summary>
            Gets or sets a value indicating whether if true, include moderation status for each resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesParams.Context">
            <summary>
            Gets or sets a value indicating whether if true, include context assigned to each resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesParams.NextCursor">
            <summary>
            Gets or sets when a listing request has more results to return than <see cref="P:CloudinaryDotNet.Actions.ListResourcesParams.MaxResults"/>,
            the <see cref="P:CloudinaryDotNet.Actions.ListResourcesParams.NextCursor"/> value is returned as part of the response. You can then specify this value as
            the <see cref="P:CloudinaryDotNet.Actions.ListResourcesParams.NextCursor"/> parameter of the following listing request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesParams.Direction">
            <summary>
            Gets or sets sorting direction (could be asc, desc, 1, -1).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesParams.StartAt">
            <summary>
            Gets or sets list resources uploaded later than <see cref="P:CloudinaryDotNet.Actions.ListResourcesParams.StartAt"/>.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListResourcesParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListResourcesParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListResourcesResult">
            <summary>
            Parsed result of the resources listing request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesResult.Resources">
            <summary>
            Gets or sets list of the assets matching the request conditions.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourcesResult.NextCursor">
            <summary>
            Gets or sets when a listing request has more results to return than <see cref="P:CloudinaryDotNet.Actions.ListResourcesParams.MaxResults"/>,
            the <see cref="P:CloudinaryDotNet.Actions.ListResourcesResult.NextCursor"/> value is returned as part of the response. You can then specify this value as
            the <see cref="P:CloudinaryDotNet.Actions.ListResourcesParams.NextCursor"/> parameter of the following listing request.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListResourceTypesResult">
            <summary>
            Parsed list of resource types.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.ListResourceTypesResult.m_resourceTypes">
            <summary>
            An array of the resource types.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListResourceTypesResult.ResourceTypes">
            <summary>
            Gets or sets an array of the resource types.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListResourceTypesResult.SetValues(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Overrides corresponding method of <see cref="T:CloudinaryDotNet.Actions.BaseResult"/> class.
            Populates additional token fields.
            </summary>
            <param name="source">JSON token received from the server.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListTagsParams">
            <summary>
            Parameters of list tags request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListTagsParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.ListTagsParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTagsParams.ResourceType">
            <summary>
            Gets or sets the type of file for which to retrieve the tags. Possible values: image, raw, video.
            Default: image. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTagsParams.Prefix">
            <summary>
            Gets or sets a parameter to find all tags that start with the given prefix.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTagsParams.MaxResults">
            <summary>
            Gets or sets max number of tags to return. Default=10. Maximum=500.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTagsParams.NextCursor">
            <summary>
            Gets or sets parameter used when a listing request has more results to return than <see cref="P:CloudinaryDotNet.Actions.ListTagsParams.MaxResults"/>, the
            <see cref="P:CloudinaryDotNet.Actions.ListTagsResult.NextCursor"/> value is returned as part of the response. You can then specify
            this value as the <see cref="P:CloudinaryDotNet.Actions.ListTagsParams.NextCursor"/> parameter of the following listing request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListTagsParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListTagsParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListTagsResult">
            <summary>
            Parsed list of tags.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTagsResult.Tags">
            <summary>
            Gets or sets the list of tags currently assigned to the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTagsResult.NextCursor">
            <summary>
            Gets or sets a value for a situation when a listing request has more results to return than <see cref="P:CloudinaryDotNet.Actions.ListTagsParams.MaxResults"/>, the
            <see cref="P:CloudinaryDotNet.Actions.ListTagsResult.NextCursor"/> value is returned as part of the response. You can then specify this value as the
            <see cref="P:CloudinaryDotNet.Actions.ListTagsParams.NextCursor"/> parameter of the following listing request.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListTransformsParams">
            <summary>
            Parameters of the request for a list of transformation.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListTransformsParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.ListTransformsParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTransformsParams.MaxResults">
            <summary>
            Gets or sets max number of transformations to return. Default=10. Maximum=500.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTransformsParams.Named">
            <summary>
            Gets or sets whether to return named transformations or not.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTransformsParams.NextCursor">
            <summary>
            Gets or sets a value for a situation when a listing request has more results to return than <see cref="P:CloudinaryDotNet.Actions.ListTransformsParams.MaxResults"/>,
            the <see cref="P:CloudinaryDotNet.Actions.ListTransformsResult.NextCursor"/> value is returned as part of the response. You can then
            specify this value as the <see cref="P:CloudinaryDotNet.Actions.ListTransformsParams.NextCursor"/> parameter of the following listing request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListTransformsParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListTransformsParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListTransformsResult">
            <summary>
            Parsed list of transformations details.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTransformsResult.Transformations">
            <summary>
            Gets or sets a listing of transformations specified in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListTransformsResult.NextCursor">
            <summary>
            Gets or sets a value for a situation when a listing request has more results to return than <see cref="P:CloudinaryDotNet.Actions.ListTransformsParams.MaxResults"/>,
            the <see cref="P:CloudinaryDotNet.Actions.ListTransformsResult.NextCursor"/> value is returned as part of the response. You can then specify this value as
            the <see cref="P:CloudinaryDotNet.Actions.ListTransformsParams.NextCursor"/> parameter of the following listing request.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListUploadPresetsParams">
            <summary>
             Parameters of list upload presets request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListUploadPresetsParams.MaxResults">
            <summary>
            Gets or sets max number of resources to return. Default=10. Maximum=500. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListUploadPresetsParams.NextCursor">
            <summary>
            Gets or sets next cursor value.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListUploadPresetsParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListUploadPresetsParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MultiParams">
            <summary>
            Parameters of request to create a single animated GIF file from a group of images.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MultiParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.MultiParams"/> class.
            </summary>
            <param name="tag">The animated GIF is created from all images with this tag.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.MultiParams.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.MultiParams"/> class.
            </summary>
            <param name="urls">The animated GIF is created from all images with the urls specified.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.MultiResult">
            <summary>
            Parsed response with detailed information about the created animated GIF.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiResult.Uri">
            <summary>
            Gets or sets the URL for accessing the created animated GIF.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiResult.Url">
            <summary>
            Gets or sets the URL for accessing the created animated GIF.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiResult.SecureUri">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the created animated GIF.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiResult.SecureUrl">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the created animated GIF.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiResult.PublicId">
            <summary>
            Gets or sets public ID assigned to the created GIF.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.MultiResult.Version">
            <summary>
            Gets or sets version of the created GIF.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.PublishResourceParams">
            <summary>
            Parameters to publish resource request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.PublishResourceParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.PublishResourceParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.PublishResourceParams.PublicIds">
            <summary>
            Gets or sets a value for publishing all resources with the given public IDs.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.PublishResourceParams.ResourceType">
            <summary>
            Gets or sets a value for publishing resources with the given resource type. Default: "image".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.PublishResourceParams.Type">
            <summary>
            Gets or sets privacy mode of the image. Valid values: 'private' and 'authenticated'.
            Default: 'authenticated'.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.PublishResourceParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.PublishResourceParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.PublishResourceResult">
            <summary>
            Result of resource publishing.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.PublishResourceResult.Published">
            <summary>
            Gets or sets list of details of published resources.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.PublishResourceResult.Failed">
            <summary>
            Gets or sets list of details of the resources with failed publish.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.RawUploadParams">
            <summary>
            Extended Parameters of file uploading.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RawUploadParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.RawUploadParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.Tags">
            <summary>
            Gets or sets a comma-separated list of tag names to assign to the uploaded image for later group reference.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.Invalidate">
            <summary>
            Gets or sets whether to invalidate CDN cache copies of a previously uploaded image that shares the same public ID.
            Default: false.
            </summary>
            <value>
              <c>true</c> to invalidate; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.Headers">
            <summary>
            Gets or sets an HTTP header or a list of headers lines for returning as response HTTP headers when delivering the
            uploaded image to your users. Supported headers: 'Link', 'X-Robots-Tag'.
            For example 'X-Robots-Tag: noindex'.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.UseFilename">
            <summary>
            Gets or sets whether to use the original file name of the uploaded image if available for the public ID. The file name
            is normalized and random characters are appended to ensure uniqueness. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.UniqueFilename">
            <summary>
            Gets or sets unique file name usage setting. Only relevant if <see cref="P:CloudinaryDotNet.Actions.RawUploadParams.UseFilename"/> is True.
            When set to false, should not add random characters at the end of the filename to guarantee its uniqueness.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.DiscardOriginalFilename">
            <summary>
            Gets or sets whether to discard the name of the original uploaded file. Relevant when delivering images as attachments
            (setting the 'flags' transformation parameter to 'attachment'). Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.NotificationUrl">
            <summary>
            Gets or sets an HTTP or HTTPS URL to receive the upload response (a webhook) when the upload is completed or a
            notification when any requested asynchronous action is completed.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.AccessMode">
            <summary>
            Gets or sets a possibility for the resource to behave as if it's of the authenticated 'type' while still using the default 'upload'
            type in delivery URLs.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.Proxy">
            <summary>
            Gets or sets proxy to use when Cloudinary accesses remote folders.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.Folder">
            <summary>
            Gets or sets base Folder to use when building the Cloudinary public_id.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.Overwrite">
            <summary>
            Gets or sets whether to overwrite existing resources with the same public ID.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.RawConvert">
            <summary>
            Gets or sets conversion mode. Set to "aspose" to automatically convert Office documents to PDF files
            and other image formats using the Aspose Document Conversion add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.Context">
            <summary>
            Gets or sets a possibility to store a set of key-value pairs together with resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.MetadataFields">
            <summary>
            Gets or sets allows to store a set of custom metadata fields (by external_id) and the values to assign to each of them.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.AllowedFormats">
            <summary>
            Gets or sets a set of allowed formats.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.Moderation">
            <summary>
            Gets or sets moderation mode. Set to "manual" to add the uploaded image to a queue of pending moderation images.
            Set to "webpurify" to automatically moderate the uploaded image using the WebPurify Image Moderation add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.Async">
            <summary>
            Gets or sets whether to perform the upload request in the background (asynchronously).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.AccessControl">
            <summary>
            Gets or sets a list of AccessControlRule parameters. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadParams.Eval">
            <summary>
            Gets or sets JavaScript code expression to be evaluated.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RawUploadParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.RawUploadResult">
            <summary>
            Results of raw file upload.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.Signature">
            <summary>
            Gets or sets the signature for verifying the response is a valid response from Cloudinary.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.Type">
            <summary>
            Gets or sets storage type.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.ResourceType">
            <summary>
            Gets or sets type of the uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.Moderation">
            <summary>
            Gets or sets the array of data received from moderation service.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.CreatedAt">
            <summary>
            Gets or sets date when the asset was uploaded.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.Tags">
            <summary>
            Gets or sets the list of tags currently assigned to the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.AccessControl">
            <summary>
            Gets or sets an array of access types for the asset. The anonymous access type should also include 'start' and 'end'
            dates (in ISO 8601 format) defining when the resource is publicly available.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.FullyQualifiedPublicId">
            <summary>
            Gets the Fully Qualified Public ID.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.AccessMode">
            <summary>
            Gets or sets the accessibility mode of the media asset: public, or authenticated.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.Etag">
             <summary>
             Gets or sets etag.
            
             Used to determine whether two versions of an asset are identical.
             </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.Placeholder">
            <summary>
            Gets or sets a value indicating whether a placeholder (default image) is currently used instead of
            displaying the image (due to moderation).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RawUploadResult.OriginalFilename">
            <summary>
            Gets or sets the name of the media asset when originally uploaded. Relevant when delivering assets
            as attachments (setting the flag transformation parameter to attachment).
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.RenameParams">
            <summary>
            Parameters for renaming assets immediately and permanently updating them in your cloud storage.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RenameParams.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.RenameParams"/> class.
            </summary>
            <param name="fromPublicId">The current identifier of the uploaded asset.</param>
            <param name="toPublicId">The new identifier to assign to the uploaded asset.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RenameParams.FromPublicId">
            <summary>
            Gets or sets the current identifier of the uploaded asset.
            </summary>
            <value>
            Existing public id.
            </value>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RenameParams.ToPublicId">
            <summary>
            Gets or sets the new identifier to assign to the uploaded asset.
            </summary>
            <value>
            Target public id.
            </value>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RenameParams.ResourceType">
            <summary>
            Gets or sets the type of asset to rename.
            Valid values: image, raw, and video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RenameParams.Type">
            <summary>
            Gets or sets the specific type of the resource.
            Valid values: upload, private and authenticated.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RenameParams.ToType">
            <summary>
            Gets or sets the new type for the resource.
            Valid values: upload, private and authenticated.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RenameParams.Overwrite">
            <summary>
            Gets or sets a value indicating whether to overwrite an existing asset with the target public ID. Default: false.
            </summary>
            <value>
              <c>true</c> to overwrite; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RenameParams.Invalidate">
            <summary>
            Gets or sets a value indicating whether to invalidate CDN cache copies of a previously uploaded image that shares the same public ID. Default: false.
            </summary>
            <value>
              <c>true</c> to invalidate; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RenameParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RenameParams.Check">
            <summary>
            Validate object model.
            </summary>
            <exception cref="T:System.ArgumentException">
            FromPublicId can't be null.
            or
            ToPublicId can't be null.
            </exception>
        </member>
        <member name="T:CloudinaryDotNet.Actions.RenameResult">
            <summary>
            Results of resource renaming.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.RestoreParams">
            <summary>
            Parameters of restore a deleted resources request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RestoreParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.RestoreParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoreParams.PublicIds">
            <summary>
            Gets or sets the public IDs of (deleted or existing) backed up resources to restore. Reverts to the latest backed up
            version of the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoreParams.Versions">
            <summary>
            Gets or sets version IDs of backed up resources to restore.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoreParams.ResourceType">
            <summary>
            Gets or sets restore resources with the given resource type. Default: image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoreParams.Type">
            <summary>
            Gets or sets the specific type of the asset.
            Valid values: upload, private and authenticated. Default: upload.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RestoreParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RestoreParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.RestoreResult">
            <summary>
            Parsed results of resources restore.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.RestoreResult.m_resourceType">
            <summary>
            The type of file. Possible values: image, raw, video. Default: image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoreResult.ResourceType">
            <summary>
            Gets the cloudinary resource type.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.RestoreResult.RestoredResources">
            <summary>
            Gets or sets collection of restored resources.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.RestoreResult.SetValues(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Overrides corresponding method of <see cref="T:CloudinaryDotNet.Actions.BaseResult"/> class.
            Populates additional token fields.
            </summary>
            <param name="source">JSON token received from the server.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.SearchResult">
            <summary>
            Search response with information about the assets matching the search criteria.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResult.TotalCount">
            <summary>
            Gets or sets the total count of assets matching the search criteria.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResult.Time">
            <summary>
            Gets or sets the time taken to process the request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResult.Resources">
            <summary>
            Gets or sets the details of each of the assets (resources) found.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResult.NextCursor">
            <summary>
            Gets or sets when a search request has more results to return than max_results, the next_cursor value is returned as
            part of the response.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SearchResult.Aggregations">
            <summary>
            Gets or sets counts of assets, grouped by specified parameters.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.SpriteParams">
            <summary>
            Parameters of create sprite request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SpriteParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.SpriteParams"/> class.
            </summary>
            <param name="tag">The tag name assigned to images that we should merge into the sprite.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.SpriteParams.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.SpriteParams"/> class.
            </summary>
            <param name="urls">The sprite is created from all images with the urls specified.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.SpriteResult">
            <summary>
            Parsed response with detailed information about the created sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.CssUri">
            <summary>
            Gets or sets URL to css file for the sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.CssUrl">
            <summary>
            Gets or sets URL to css file for the sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.SecureCssUri">
            <summary>
            Gets or sets secure URL to css file for the sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.SecureCssUrl">
            <summary>
            Gets or sets secure URL to css file for the sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.ImageUri">
            <summary>
            Gets or sets URL to access the created sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.ImageUrl">
            <summary>
            Gets or sets URL to access the created sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.SecureImageUrl">
            <summary>
            Gets or sets HTTPS URL to access the created sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.JsonUri">
            <summary>
            Gets or sets URL to json file with detailed parameters of the created sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.JsonUrl">
            <summary>
            Gets or sets URL to json file with detailed parameters of the created sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.SecureJsonUrl">
            <summary>
            Gets or sets HTTPS URL to json file with detailed parameters of the created sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.PublicId">
            <summary>
            Gets or sets public ID assigned to the sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.Version">
            <summary>
            Gets or sets version of the created sprite.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SpriteResult.ImageInfos">
            <summary>
            Gets or sets details of the images included in the sprite.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.TagCommand">
            <summary>
            The action to perform on image resources using the given tag.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.TagCommand.Add">
            <summary>
            Assign the given tag to the resources with the given Public IDs.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.TagCommand.Remove">
            <summary>
            Remove the given tag from the resources with the given Public IDs.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.TagCommand.Replace">
            <summary>
            Assign the given tag to the resources with the given Public IDs while clearing all other tags assigned
            to these resources.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.TagCommand.SetExclusive">
            <summary>
            Assign the given tag to the resources with the given Public IDs while clearing the given tag from all other
            resources. This means that only the resources with the given Public IDs will have the given tag.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.TagCommand.RemoveAll">
            <summary>
            Remove all the tags assigned to the resources with the given Public IDs.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.TagParams">
            <summary>
            Parameters of tag management request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.TagParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.TagParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TagParams.PublicIds">
            <summary>
            Gets or sets a list of public IDs (up to 1000) of assets uploaded to Cloudinary.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TagParams.Tag">
            <summary>
            Gets or sets the tag to assign, remove, or replace. Not relevant when removing all tags.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TagParams.ResourceType">
            <summary>
            Gets or sets the type of asset. Valid values: image, raw, and video. Default: image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TagParams.Type">
            <summary>
            Gets or sets the specific type of the asset. Valid values: upload, private and authenticated.Default: upload.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TagParams.Command">
            <summary>
            Gets or sets the action to perform on the assets.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.TagParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.TagParams.ToParamsDictionary">
            <summary>
            Map object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.TagResult">
            <summary>
            Results of tags management.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TagResult.PublicIds">
            <summary>
            Gets or sets a list of public IDs (up to 1000) of affected assets.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.TextParams">
            <summary>
            Parameters of generating an image of a given textual string.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.TextParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.TextParams"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.TextParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.TextParams"/> class.
            Parameterized constructor.
            </summary>
            <param name="text">The text string to generate an image for.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.Text">
            <summary>
            Gets or sets the text string to generate an image for.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.PublicId">
            <summary>
            Gets or sets the identifier that is used for accessing the generated image. If not specified, a unique identifier is
            generated, persistently mapped to the given text and style settings. This way, you can keep using
            Cloudinary’s API for generating texts. Cloudinary will make sure not to generate multiple images for the
            same text and style.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.FontFamily">
            <summary>
            Gets or sets the name of the font family.
            Supported font families: Andale Mono, Arial, Arial Black, AvantGarde, Bookman, Century Schoolbook,
            Comic Sans MS, Courier, Courier New, DejaVu Sans, DejaVu Sans Mono, DejaVu Serif, Dingbats, Georgia,
            Helvetica, Helvetica Narrow, Impact, Liberation Mono, Liberation Sans, Liberation Sans Narrow,
            Liberation Serif, NewCenturySchlbk, Nimbus Mono, Nimbus Roman No9, Nimbus Sans, Palatino, Standard Symbols,
            Symbol, Times, Times New Roman, Trebuchet MS, URW Bookman, URW Chancery, URW Gothic, URW Palladio, Verdana,
            Webdings.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.FontSize">
            <summary>
            Gets or sets font size in points. Default: 12.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.FontColor">
            <summary>
            Gets or sets name or RGB representation of the font"s color. For example: "red", "#ff0000". Default: "black".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.FontWeitgh">
            <summary>
            Gets or sets whether to use a "normal" or a "bold" font. Default: "normal".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.FontWeight">
            <summary>
            Gets or sets whether to use a "normal" or a "bold" font. Default: "normal".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.FontStyle">
            <summary>
            Gets or sets whether to use a "normal" or an "italic" font. Default: "normal".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.Background">
            <summary>
            Gets or sets name or RGB representation of the background color of the generated image.
            For example: "red", "#ff0000". Default: "transparent".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.Opacity">
            <summary>
            Gets or sets text opacity value between 0 (invisible) and 100. Default: 100.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.TextDecoration">
            <summary>
            Gets or sets an "underline" to the text. Default: "none".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextParams.TextAlign">
            <summary>
            Gets or sets text alignment for the text. Default: "left".
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.TextParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.TextParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.TextResult">
            <summary>
            Results of generating an image of a given textual string.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.TextResult.m_resourceType">
            <summary>
            The type of file. Possible values: image, raw, video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.Width">
            <summary>
            Gets or sets parameter "width" of the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.Height">
            <summary>
            Gets or sets parameter "height" of the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.PublicId">
            <summary>
            Gets or sets public ID assigned to the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.Version">
            <summary>
            Gets or sets version of uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.Signature">
            <summary>
            Gets or sets the signature for verifying the response is a valid response from Cloudinary.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.Format">
            <summary>
            Gets or sets asset format.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.ResourceType">
            <summary>
            Gets the type of resource. Possible values: image, raw, video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.CreatedAt">
            <summary>
            Gets or sets date when the resource was created.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.Tags">
            <summary>
            Gets or sets a list of tag names assigned to resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.Bytes">
            <summary>
            Gets or sets size of the created archive (in bytes).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.Type">
            <summary>
            Gets or sets the storage type: upload, private, authenticated, facebook, twitter, gplus, instagram_name, gravatar,
            youtube, hulu, vimeo, animoto, worldstarhiphop or dailymotion.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.Placeholder">
            <summary>
            Gets or sets a value indicating whether a placeholder (default image) is currently used instead of displaying the image (due to moderation).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.Url">
            <summary>
            Gets or sets the URL for accessing the created archive.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.SecureUrl">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the created archive.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TextResult.AccessMode">
            <summary>
            Gets or sets the accessibility mode of the media asset: public, or authenticated.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.TransformDerived">
            <summary>
            Settings of derived assets generated (and cached) from the original media asset.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.TransformDerived.m_resourceType">
            <summary>
            The type of media asset: image, raw, or video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDerived.PublicId">
            <summary>
            Gets or sets the public identifier that is used for accessing the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDerived.ResourceType">
            <summary>
            Gets the type of media asset: image, raw, or video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDerived.Type">
            <summary>
            Gets or sets the accessibility type of the media asset: upload, private or authenticated.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDerived.Format">
            <summary>
            Gets or sets the format of the media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDerived.Url">
            <summary>
            Gets or sets URL for accessing the derived media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDerived.SecureUrl">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the derived media asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDerived.Length">
            <summary>
            Gets or sets the size of the media asset in bytes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDerived.Bytes">
            <summary>
            Gets or sets the size of the media asset in bytes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDerived.Id">
            <summary>
            Gets or sets id of the generated derived resource.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.TransformDesc">
            <summary>
            Details of a single transformation specified in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDesc.Name">
            <summary>
            Gets or sets the name of a named transformation (e.g., t_trans1) or the transformation itself as expressed in a dynamic
            URL (e.g., w_110,h_100,c_fill).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDesc.Strict">
            <summary>
            Gets or sets a value indicating whether the transformation can be used when strict transformations are enabled.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDesc.AllowedForStrict">
            <summary>
            Gets or sets a value indicating whether the transformation can be used when strict transformations are enabled.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDesc.Used">
            <summary>
            Gets or sets a value indicating whether the transformation has been used to create a derived asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformDesc.Named">
            <summary>
            Gets or sets a value indicating whether the transformation is a named transformation.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.TransformResult">
            <summary>
            Parsed response after transformation manipulation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.TransformResult.Message">
            <summary>
            Gets or sets result message.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UpdateParams">
            <summary>
            Parameters to update details of an existing resource.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.UpdateParams"/> class with public ID.
            </summary>
            <param name="publicId">The public ID of the resource to update.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.PublicId">
            <summary>
            Gets or sets the public ID of the resource to update.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.ResourceType">
            <summary>
            Gets or sets the type of file. Possible values: image, raw, video. Default: image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.Type">
            <summary>
            Gets or sets the storage type: upload, private, authenticated, facebook, twitter, gplus, instagram_name, gravatar,
            youtube, hulu, vimeo, animoto, worldstarhiphop or dailymotion. Default: upload.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.Headers">
            <summary>
            Gets or sets an HTTP header or a list of headers lines for returning as response HTTP headers when delivering the
            uploaded image to your users. Supported headers: 'Link', 'X-Robots-Tag'.
            For example 'X-Robots-Tag: noindex'.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.Tags">
            <summary>
            Gets or sets a comma-separated list of tag names to assign to the uploaded image for later group reference.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.Context">
            <summary>
            Gets or sets a possibility to store a set of key-value pairs together with resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.Metadata">
             <summary>
             Gets or sets metadata.
            
             Allows to store a set of custom metadata fields (by external_id) and the values to assign to each of them.
             </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.RawConvert">
            <summary>
            Gets or sets a possibility to use "aspose" to automatically convert Office documents to PDF files and other image formats using the
            Aspose Document Conversion add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.FaceCoordinates">
            <summary>
            Gets or sets the face coordinates. Use plain string (x,y,w,h|x,y,w,h) or <see cref="T:CloudinaryDotNet.Core.Rectangle"/>
            or <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.CustomCoordinates">
            <summary>
            Gets or sets coordinates of an interesting region contained in an uploaded image. The given coordinates are used for
            cropping uploaded images using the custom gravity mode. The region is specified by the X and Y coordinates
            of the top left corner and the width and height of the region. For example: "85,120,220,310".
            Otherwise, one can use <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.Categorization">
            <summary>
            Gets or sets a possibility to use "rekognition_scene" to automatically detect scene categories of photos using the ReKognition Scene
            Categorization add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.BackgroundRemoval">
            <summary>
            Gets or sets a possibility to use "remove_the_background" to remove the background from the image.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.AutoTagging">
            <summary>
            Gets or sets a possibility to use "rekognition_scene" to automatically detect scene categories of photos using the ReKognition Scene
            Categorization add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.Detection">
            <summary>
            Gets or sets a possibility to use "rekognition_face" to automatically extract advanced face attributes of photos using the ReKognition
            Detect Face Attributes add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.SimilaritySearch">
            <summary>
            Gets or sets a possibility to use "tineye" to use the TinEye add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.Ocr">
            <summary>
            Gets or sets a possibility to use 'adv_ocr' to extract all text elements in an image as well as the bounding box coordinates
            of each detected element using the OCR Text Detection and Extraction Add-on add-on. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.NotificationUrl">
            <summary>
            Gets or sets an HTTP or HTTPS URL to notify your application (a webhook) when the process has completed.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.QualityOveride">
            <summary>
            Gets or sets a value that overrides the default quality defined in the account level for a specific resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.QualityOverride">
            <summary>
            Gets or sets a value that overrides the default quality defined in the account level for a specific resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.ModerationStatus">
            <summary>
            Gets or sets the moderation status.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateParams.AccessControl">
            <summary>
            Gets or sets a list of AccessControlRule parameters. Optional.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams">
            <summary>
            Stores a set of parameters for updating the access_mode of resources.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams.PublicIds">
            <summary>
            Gets or sets a possibility to update all resources with the given public IDs (array of up to 100 public_ids).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams.AccessMode">
            <summary>
            Gets or sets the new access mode ("public" or "authenticated").
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams.ResourceType">
            <summary>
            Gets or sets a possibility to update resources with the given resource type. Default resource type: "image".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams.Type">
            <summary>
            Gets or sets a possibility to update resources with the given type. Default resource type: "upload".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams.Prefix">
             <summary>
             Gets or sets prefix.
            
             Update all assets where the public ID starts with the given
             prefix (up to a maximum of 100 matching original assets).
             </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams.Tag">
             <summary>
             Gets or sets tag.
            
             Update all assets with the given tag (up to a maximum of 100 matching original assets).
             </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateResourceAccessModeParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UpdateResourceAccessModeResult">
            <summary>
            Results of the resource access mode update.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateResourceAccessModeResult.Updated">
            <summary>
            Gets or sets list of successfully updated results.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateResourceAccessModeResult.Failed">
            <summary>
            Gets or sets list of failed results.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UpdateTransformParams">
            <summary>
            Parameters for transformation update.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateTransformParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.UpdateTransformParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformParams.Transformation">
            <summary>
            Gets or sets transformation represented as string.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformParams.UnsafeTransform">
             <summary>
             Gets or sets unsafe update transformation.
            
             Optional. Allows updating an existing named transformation without updating all associated derived images
             (the new settings of the named transformation only take effect from now on).
             </summary>
             <value>
             New transformation.
             </value>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformParams.UnsafeUpdate">
             <summary>
             Gets or sets unsafe update transformation.
            
             Optional. Allows updating an existing named transformation without updating all associated derived images
             (the new settings of the named transformation only take effect from now on).
             </summary>
             <value>
             New transformation.
             </value>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformParams.Strict">
            <summary>
            Gets or sets a value indicating whether this transformation is allowed when Strict Transformations are enabled.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformParams.AllowedForStrict">
            <summary>
            Gets or sets a value indicating whether this transformation is allowed when Strict Transformations are enabled.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateTransformParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateTransformParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UpdateTransformResult">
            <summary>
            Response of transformation update.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformResult.Name">
            <summary>
            Gets or sets the name of transformation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformResult.AllowedForStrict">
            <summary>
            Gets or sets a value indicating whether this transformation is allowed when Strict Transformations are enabled.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformResult.Used">
            <summary>
            Gets or sets a value indicating whether the transformation was ever used.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformResult.Info">
            <summary>
            Gets or sets detailed info about the transformation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformResult.Derived">
            <summary>
            Gets or sets an array with derived assets settings.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformResult.Strict">
            <summary>
            Gets or sets a value indicating whether this transformation is allowed when Strict Transformations are enabled.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateTransformResult.Message">
            <summary>
            Gets or sets result message.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UploadMappingParams">
            <summary>
            Parameters for Mapping of folders to URL prefixes for dynamic image fetching from existing online locations.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UploadMappingParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.UploadMappingParams"/> class.
            Default constructor.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadMappingParams.NextCursor">
            <summary>
            Gets or sets a value for a situation when a listing request has more results to return than <see cref="P:CloudinaryDotNet.Actions.UploadMappingParams.MaxResults"/>, the
            <see cref="P:CloudinaryDotNet.Actions.UploadMappingParams.NextCursor"/> value is returned as part of the response. You can then specify this value as the
            <see cref="P:CloudinaryDotNet.Actions.UploadMappingParams.NextCursor"/> parameter of the following listing request. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadMappingParams.MaxResults">
            <summary>
            Gets or sets max number of upload mappings to return. Default=10. Maximum=500. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadMappingParams.Folder">
            <summary>
            Gets or sets the name for the Folder to map.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadMappingParams.Template">
            <summary>
            Gets or sets the URL to be mapped to the <see cref="P:CloudinaryDotNet.Actions.UploadMappingParams.Folder"/>.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UploadMappingParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UploadMappingParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>Sorted dictionary of parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UploadMappingResults">
            <summary>
            Response of upload mappings manipulation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadMappingResults.Message">
            <summary>
            Gets or sets result of CRUD operations.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadMappingResults.Mappings">
            <summary>
            Gets or sets returned upload mappings.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadMappingResults.NextCursor">
            <summary>
            Gets or sets the cursor value if there are more upload mappings than <see cref="P:CloudinaryDotNet.Actions.UploadMappingParams.MaxResults"/>.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UploadMappingResults.SetValues(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Overrides corresponding method of <see cref="T:CloudinaryDotNet.Actions.BaseResult"/> class.
            Populates additional token fields.
            </summary>
            <param name="source">JSON token received from the server.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UploadPresetParams">
            <summary>
            Parameters of upload preset, which enable you to centrally define a set of image upload options instead of
            specifying them in each upload call.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UploadPresetParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.UploadPresetParams"/> class.
            Default parameterless constructor.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UploadPresetParams.#ctor(CloudinaryDotNet.Actions.GetUploadPresetResult)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.UploadPresetParams"/> class with result object.
            </summary>
            <param name="preset">The preset returned from API.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Name">
            <summary>
            Gets or sets this unique preset name is specified as the upload_preset parameter when calling the upload API.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Unsigned">
            <summary>
            Gets or sets a value indicating whether to enable unsigned uploading to Cloudinary with this upload preset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.DisallowPublicId">
            <summary>
            Gets or sets a value indicating whether to prevent specifying public_id as one of the extra
            parameters for upload. Only relevant when using unsigned presets.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Backup">
            <summary>
            Gets or sets whether to backup the uploaded image.
            Overrides the default backup settings of your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Type">
            <summary>
            Gets or sets privacy mode of the image. Valid values: 'private', 'upload' and 'authenticated'.
            Default: 'upload'.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Tags">
            <summary>
            Gets or sets a comma-separated list of tag names to assign to the uploaded image for later group reference.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Invalidate">
            <summary>
            Gets or sets a value indicating whether to invalidate CDN cache copies of a previously uploaded image that shares the same public ID.
            Default: false.
            </summary>
            <value>
              <c>true</c> to invalidate; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.UseFilename">
            <summary>
            Gets or sets a value indicating whether to use the original file name of the uploaded image if available for the public ID. The file name
            is normalized and random characters are appended to ensure uniqueness. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.UniqueFilename">
            <summary>
            Gets or sets whether to add random characters at the end of the filename to guarantee uniqueness.
            Only relevant if <see cref="P:CloudinaryDotNet.Actions.UploadPresetParams.UseFilename"/> is True.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.DiscardOriginalFilename">
            <summary>
            Gets or sets a value indicating whether to discard the name of the original uploaded file. Relevant when delivering images as attachments
            (setting the 'flags' transformation parameter to 'attachment'). Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.NotificationUrl">
            <summary>
            Gets or sets an HTTP URL to send notification to (a webhook) when the upload is completed.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Proxy">
            <summary>
            Gets or sets proxy to use when Cloudinary accesses remote folders.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Folder">
            <summary>
            Gets or sets base Folder to use when building the Cloudinary public_id.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Overwrite">
            <summary>
            Gets or sets whether to overwrite existing resources with the same public ID.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.RawConvert">
            <summary>
            Gets or sets a possibility to use "aspose" to automatically convert Office documents to PDF files and other image formats using the
            Aspose Document Conversion add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Context">
            <summary>
            Gets or sets a possibility to store a set of key-value pairs together with resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.AllowedFormats">
            <summary>
            Gets or sets a set of allowed formats.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Moderation">
            <summary>
            Gets or sets a possibility to use "manual" to add the uploaded image to a queue of pending moderation images. Set to "webpurify" to
            automatically moderate the uploaded image using the WebPurify Image Moderation add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Format">
            <summary>
            Gets or sets an optional format to convert the uploaded image to before saving in the cloud. For example: "jpg".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Transformation">
            <summary>
            Gets or sets a transformation to run on the uploaded image before saving it in the cloud. For example: limit the
            dimension of the uploaded image to 512x512 pixels.
            One may use string representation or <see cref="P:CloudinaryDotNet.Actions.UploadPresetParams.Transformation"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.EagerTransforms">
            <summary>
            Gets or sets a list of transformations to create for the uploaded image during the upload process, instead of lazily
            creating them when accessed by your site's visitors.
            One may use string representation or <see cref="P:CloudinaryDotNet.Actions.UploadPresetParams.Transformation"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Exif">
            <summary>
            Gets or sets a value indicating whether to retrieve the Exif metadata of the uploaded photo. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Colors">
            <summary>
            Gets or sets a value indicating whether to retrieve predominant colors and color histogram of the uploaded image. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Faces">
            <summary>
            Gets or sets a value indicating whether to retrieve a list of coordinates of automatically detected faces in the uploaded photo.
            Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.QualityAnalysis">
            <summary>
            Gets or sets a value indicating whether to retrieve the quality analysis of the image. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.FaceCoordinates">
            <summary>
            Gets or sets the face coordinates. Use plain string (x,y,w,h|x,y,w,h) or <see cref="P:CloudinaryDotNet.Actions.UploadPresetParams.FaceCoordinates"> object</see>.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Metadata">
            <summary>
            Gets or sets a value indicating whether to retrieve IPTC and detailed Exif metadata of the uploaded photo. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.ImageMetadata">
            <summary>
            Gets or sets a value indicating whether to retrieve IPTC and detailed Exif metadata of the uploaded photo.
            Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.EagerAsync">
            <summary>
            Gets or sets a value indicating whether to generate the eager transformations asynchronously in the background after the upload request is
            completed rather than online as part of the upload call. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.EagerNotificationUrl">
            <summary>
            Gets or sets an HTTP URL to send notification to (a webhook) when the generation of eager transformations is completed.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Categorization">
            <summary>
            Gets or sets a possibility to use "rekognition_scene" to automatically detect scene categories of photos using the ReKognition Scene
            Categorization add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.AutoTagging">
            <summary>
            Gets or sets a possibility for uploaded images to be automatically assigned tags based on the
            detected scene categories. The value of the AutoTagging parameter is the minimum score of a detected
            category that should be automatically used as an assigned tag.
            See http://cloudinary.com/documentation/rekognition_scene_categorization_addon#automatic_image_tagging
            for comments.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Detection">
            <summary>
            Gets or sets a possibility to use "rekognition_face" to automatically extract advanced face attributes of photos using the ReKognition
            Detect Face Attributes add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.SimilaritySearch">
            <summary>
            Gets or sets a possibility to use "tineye" to use the TinEye add-on.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Ocr">
            <summary>
            Gets or sets the following: if you are subscribed to the OCR Text Detection and Extraction add-on and you set this parameter
            to adv_ocr, the response includes the content and bounding box coordinates of all detected text on the
            image as well as the content and bounding box of each individual detected text element. Optional.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Live">
            <summary>
            Gets or sets a value indicating whether to use the upload preset for live streaming. Default: false.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.Eval">
            <summary>
            Gets or sets JavaScript code expression to be evaluated.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadPresetParams.AccessibilityAnalysis">
            <summary>
            Gets or sets accessibility analysis information.
            Optional (Boolean, default: false).
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UploadPresetParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UploadPresetParams.ToParamsDictionary">
            <summary>
            Maps object model to dictionary of parameters in cloudinary notation.
            </summary>
            <returns>
            Sorted dictionary of parameters.
            </returns>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UsageResult">
            <summary>
            The report on the status of your Cloudinary account usage details. Note that numbers are updated periodically.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Plan">
            <summary>
            Gets or sets your current plan.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.LastUpdated">
            <summary>
            Gets or sets date of the last report update.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Objects">
            <summary>
            Gets or sets information about the objects in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Bandwidth">
            <summary>
            Gets or sets information about usage of bandwith in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Storage">
            <summary>
            Gets or sets information about usage of storage in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Requests">
            <summary>
            Gets or sets count of requests used.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Resources">
            <summary>
            Gets or sets count of resources in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.DerivedResources">
            <summary>
            Gets or sets count of derived resources.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Transformations">
            <summary>
            Gets or sets information about usage of transformations in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Webpurify">
            <summary>
            Gets or sets information about usage of webpurify in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.AdvOcr">
            <summary>
            Gets or sets information about usage of adv ocr in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.AwsRekModeration">
            <summary>
            Gets or sets information about usage of aws rek moderation in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.SearchApi">
            <summary>
            Gets or sets information about usage of search api in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Url2png">
            <summary>
            Gets or sets information about usage of url2png in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Aspose">
            <summary>
            Gets or sets information about usage of aspose in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.StyleTransfer">
            <summary>
            Gets or sets information about usage of style transfers in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.AzureVideoIndexer">
            <summary>
            Gets or sets information about usage of azure video indexer in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.ObjectDetection">
            <summary>
            Gets or sets information about usage of object detection in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.Credits">
            <summary>
            Gets or sets information about usage of credits in your account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UsageResult.MediaLimits">
            <summary>
            Gets or sets information about file size limits per resource type.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.VideoUploadParams">
            <summary>
            Parameters of video file uploading.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadParams.ResourceType">
            <summary>
            Gets get the type of video asset for upload.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.VideoUploadResult">
            <summary>
            Parsed response after upload of the video resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.Width">
            <summary>
            Gets or sets width of the video asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.Height">
            <summary>
            Gets or sets height of the video asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.Video">
            <summary>
            Gets or sets the detailed information about the video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.Audio">
            <summary>
            Gets or sets the detailed information about the audio.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.FrameRate">
            <summary>
            Gets or sets frame rate of the video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.BitRate">
            <summary>
            Gets or sets bit rate of the video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.Duration">
            <summary>
            Gets or sets duration of the video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.Pages">
            <summary>
            Gets or sets the number of page(s) or layers in a multi-page or multi-layer file (PDF, animated GIF, TIFF, PSD).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.CinemagraphAnalysis">
            <summary>
            Gets or sets details of cinemagraph analysis for the video.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.Context">
            <summary>
            Gets or sets a key-value pairs of context associated with the resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.IsAudio">
            <summary>
            Gets or sets a value indicating whether source video has audio.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.Rotation">
            <summary>
            Gets or sets determine whether source video has rotation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.VideoUploadResult.NbFrames">
            <summary>
            Gets or sets amount of nb frames in a source video.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UploadResult">
            <summary>
            Results of uploading the asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadResult.PublicId">
            <summary>
            Gets or sets public ID of uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadResult.Version">
            <summary>
            Gets or sets version of uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadResult.Uri">
            <summary>
            Gets or sets the URL for accessing the uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadResult.Url">
            <summary>
            Gets or sets the URL for accessing the uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadResult.SecureUri">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadResult.SecureUrl">
            <summary>
            Gets or sets the HTTPS URL for securely accessing the uploaded asset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadResult.Length">
            <summary>
            Gets or sets resource length in bytes.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadResult.Bytes">
            <summary>
            Gets or sets resource length in bytes..
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadResult.Format">
            <summary>
            Gets or sets asset format.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UploadResult.MetadataFields">
            <summary>
            Gets or sets a key-value pairs of custom metadata fields associated with the resource.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListUsersResult">
            <summary>
            Parsed result of the users listing request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListUsersResult.Users">
            <summary>
            Gets or sets a list of the users matching the request conditions.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UpdateUserParams">
            <summary>
            Parameters of update user request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateUserParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.UpdateUserParams"/> class.
            </summary>
            <param name="userId">The ID of the user to update.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateUserParams.UserId">
            <summary>
            Gets or sets the ID of the user.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateUserParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DelUserResult">
            <summary>
            Result of removing a user.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelUserResult.Message">
            <summary>
            Gets or sets an API message.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ApiAccessKey">
            <summary>
            Access key, enabled for the account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ApiAccessKey.Key">
            <summary>
            Gets or sets account API key.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ApiAccessKey.Secret">
            <summary>
            Gets or sets the account API secret.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ApiAccessKey.Enabled">
            <summary>
            Gets or sets a value indicating whether account is enabled or not.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.BaseSubAccountParams">
            <summary>
            Base parameters for sub-account modification requests.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseSubAccountParams.Name">
            <summary>
            Gets or sets the display name as shown in the management console.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseSubAccountParams.CloudName">
            <summary>
            Gets or sets a case-insensitive cloud name comprised of alphanumeric and underscore characters.
            Generates an error if the specified cloud name is not unique across all Cloudinary accounts.
            Note: Once created, the name can only be changed for accounts with fewer than 1000 assets.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseSubAccountParams.CustomAttributes">
            <summary>
            Gets or sets any custom attributes you want to associate with the sub-account, as a map/hash of key/value pairs.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseSubAccountParams.Enabled">
            <summary>
            Gets or sets whether the sub-account is enabled. Default: true.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseSubAccountParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.BaseUserGroupParams">
            <summary>
            Base parameters for user groups modification requests.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseUserGroupParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.BaseUserGroupParams"/> class.
            </summary>
            <param name="name">The name of the user group.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseUserGroupParams.Name">
            <summary>
            Gets or sets the name of the user group.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseUserGroupParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseUserGroupParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.BaseUserParams">
            <summary>
            Base parameters for user modification requests.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseUserParams.Name">
            <summary>
            Gets or sets the name of the user.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseUserParams.Email">
            <summary>
            Gets or sets a unique email address, which serves as the login name and notification address.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseUserParams.Role">
            <summary>
            Gets or sets the role to assign to the user.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.BaseUserParams.SubAccountIds">
            <summary>
            Gets or sets the list of sub-account IDs that this user can access.
            Note: This parameter is ignored if the role is specified as master_admin.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.BaseUserParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.CreateSubAccountParams">
            <summary>
            Parameters of create sub-account request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.CreateSubAccountParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.CreateSubAccountParams"/> class.
            </summary>
            <param name="subAccountName">The name of the sub-account.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.CreateSubAccountParams.BaseSubAccountId">
            <summary>
            Gets or sets he ID of another sub-account, from which to copy all of
            the following  settings:Size limits, Timed limits, and Flags.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.CreateSubAccountParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.CreateSubAccountParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.CreateUserGroupParams">
            <summary>
            Parameters of create user group request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.CreateUserGroupParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.CreateUserGroupParams"/> class.
            </summary>
            <param name="name">The name of the user group.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.CreateUserParams">
            <summary>
            Parameters of create user request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.CreateUserParams.#ctor(System.String,System.String,CloudinaryDotNet.Actions.Role)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.CreateUserParams"/> class.
            </summary>
            <param name="name">Name of the user.</param>
            <param name="email">Email of the user.</param>
            <param name="role">The role to assign to the user.</param>
        </member>
        <member name="M:CloudinaryDotNet.Actions.CreateUserParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DelSubAccountResult">
            <summary>
            Result of removing a sub-account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelSubAccountResult.Message">
            <summary>
            Gets or sets an API message.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.DelUserGroupResult">
            <summary>
            Result of removing a user group.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.DelUserGroupResult.Ok">
            <summary>
            Gets or sets a value indicating whether an API message.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListSubAccountsParams">
            <summary>
            Parameters of list sub-accounts request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListSubAccountsParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.ListSubAccountsParams"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListSubAccountsParams.Enabled">
            <summary>
            Gets or sets whether to return enabled sub-accounts only (true) or disabled accounts (false).
            Default: all accounts are returned(both enabled and disabled).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListSubAccountsParams.Ids">
            <summary>
            Gets or sets the list of up to 100 sub-account IDs. When provided, other parameters are ignored.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListSubAccountsParams.Prefix">
            <summary>
            Gets or sets accounts where the name begins with the specified case-insensitive string.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListSubAccountsParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListSubAccountsParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListSubAccountsResult">
            <summary>
            Parsed result of the sub-accounts listing request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListSubAccountsResult.SubAccounts">
            <summary>
            Gets or sets list of the sub-accounts matching the request conditions.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListUserGroupsResult">
            <summary>
            Parsed result of the user groups listing request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListUserGroupsResult.UserGroups">
            <summary>
            Gets or sets list of the user groups.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.ListUsersParams">
            <summary>
            Parameters of list users request.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListUsersParams.Pending">
            <summary>
            Gets or sets whether to limit results to pending users (true), users that are not pending (false),
            or all users (undefined, the default).
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListUsersParams.UserIds">
            <summary>
            Gets or sets a list of up to 100 user IDs. When provided, other parameters are ignored.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListUsersParams.Prefix">
            <summary>
            Gets or sets users where the name or email address begins
            with the specified case-insensitive string.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.ListUsersParams.SubAccountId">
            <summary>
             Gets or sets users who have access to the specified account.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListUsersParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.ListUsersParams.AddParamsToDictionary(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Add parameters to the object model dictionary.
            </summary>
            <param name="dict">Dictionary to be updated with parameters.</param>
        </member>
        <member name="T:CloudinaryDotNet.Actions.Role">
            <summary>
            Possible roles of a user.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Role.MaserAdmin">
            <summary>
            Has access to all elements of the Cloudinary console, including user
            and account management, billing details and purchase/upgrade options,
            and full permissions to use all Cloudinary functionality.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Role.Admin">
            <summary>
            Same as a master admin, except that they do not have access to
            account management, billing details and purchase/upgrade options.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Role.Billing">
            <summary>
            Can access only billing-related areas of the Cloudinary management console,
            including the Billing tab (for paid accounts), usage reports, and purchase/upgrade options.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Role.TechnicalAdmin">
            <summary>
            Same as an Admin, except they do not have access to the List of users area of the User Settings.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Role.Reports">
            <summary>
            Can access only reporting details in the Cloudinary console,
            including those in the Dashboard and in the Reports tabs.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Role.MediaLibraryAdmin">
            <summary>
            Full read-write access to all areas of the Cloudinary console that are related to asset management.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Actions.Role.MediaLibraryUser">
            <summary>
            Can access only the Media Library area of the console. The specific read, write,
            and other access permissions that a user has within the Media Library are controlled
            by the user groups that the user belongs to and the folders that are shared with those user groups.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.SubAccountResult">
            <summary>
            Detailed information about sub-account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SubAccountResult.Id">
            <summary>
            Gets or sets an auto-generated unique identifier of the sub-account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SubAccountResult.CloudName">
            <summary>
            Gets or sets the name of the cloud, provided by user or auto-generated.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SubAccountResult.Name">
            <summary>
            Gets or sets the name of the sub-account.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SubAccountResult.Enabled">
            <summary>
            Gets or sets a value indicating whether sub-accounts should always be created as enabled.
            Disabled accounts cannot perform any new API operations,
            i.e.no image upload, no new transformations.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SubAccountResult.ApiAccessKeys">
            <summary>
            Gets or sets list of ​enabled​ access keys for this account, sorted by ascending order
            of creation.On creation there will only be one.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SubAccountResult.CreatedAt">
            <summary>
            Gets or sets date when the sub-account was created.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.SubAccountResult.CustomAttributes">
            <summary>
            Gets or sets a list of ​enabled​ access keys for this account, sorted by ascending order
            of creation.On creation there will only be one.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UpdateSubAccountParams">
            <summary>
            Parameters of update sub-account request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateSubAccountParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.UpdateSubAccountParams"/> class.
            </summary>
            <param name="subAccountId">The ID of the sub-account.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateSubAccountParams.SubAccountId">
            <summary>
            Gets or sets the ID of the sub-account.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateSubAccountParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UpdateUserGroupParams">
            <summary>
            Parameters of update user group request.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateUserGroupParams.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Actions.UpdateUserGroupParams"/> class.
            </summary>
            <param name="userGroupId">The ID of the user group to update.</param>
            <param name="name">The name of the user group to update.</param>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UpdateUserGroupParams.UserGroupId">
            <summary>
            Gets or sets the ID of the user.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Actions.UpdateUserGroupParams.Check">
            <summary>
            Validate object model.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UserGroupResult">
            <summary>
            Detailed information about user group.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserGroupResult.GroupId">
            <summary>
            Gets or sets the ID of the user group.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserGroupResult.Name">
            <summary>
            Gets or sets the name of the user group.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserGroupResult.Users">
            <summary>
            Gets or sets users of the group.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Actions.UserResult">
            <summary>
            Detailed information about user.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserResult.Id">
            <summary>
            Gets or sets an auto-generated unique identifier of the user.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserResult.Name">
            <summary>
            Gets or sets the name of the user.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserResult.Email">
            <summary>
            Gets or sets the email of the user.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserResult.Role">
            <summary>
            Gets or sets the user role.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserResult.Pending">
            <summary>
            Gets or sets a value indicating whether account is pending or not. Should always be true for new accounts,
            and becomes false upon setting a password.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserResult.Enabled">
            <summary>
            Gets or sets a value indicating whether account is enabled or not. Should always be true for new accounts.
            When false, user should not be able to login to the management console.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserResult.SubAccountIds">
            <summary>
            Gets or sets a list of sub-accounts to which the user has access.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserResult.AllSubAccounts">
            <summary>
            Gets or sets a value indicating whether the user has access to all sub-accounts or not.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Actions.UserResult.CreatedAt">
            <summary>
            Gets or sets date when the user was created.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.HttpMethod">
            <summary>
            HTTP method.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.HttpMethod.DELETE">
            <summary>
            DELETE
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.HttpMethod.GET">
            <summary>
            GET
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.HttpMethod.POST">
            <summary>
            POST
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.HttpMethod.PUT">
            <summary>
            PUT
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.ApiShared">
            <summary>
            Provider for the API calls.
            </summary>
            <summary>
            Provider for the API calls.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.ADDR_API">
            <summary>
            URL of the cloudinary API.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.ADDR_RES">
            <summary>
            URL of the cloudinary shared CDN.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.API_VERSION">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.HTTP_BOUNDARY">
            <summary>
            The boundary string to split form-data content.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.USER_AGENT">
            <summary>
            User agent for cloudinary API requests.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.Client">
            <summary>
            Sends HTTP requests and receives HTTP responses.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.CSubDomain">
            <summary>
            Whether to use a sub domain.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.ShortenUrl">
            <summary>
            Whether to use a shortened URL when possible.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.UseRootPath">
            <summary>
            Whether to use root path.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.UsePrivateCdn">
            <summary>
            Set this parameter to true if you are an Advanced plan user with a private CDN distribution.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.Secure">
            <summary>
            Whether to use secure URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.PrivateCdn">
            <summary>
            The private CDN prefix for the URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.Suffix">
            <summary>
            The descriptive suffix to add to the Public ID in the delivery URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.UserPlatform">
            <summary>
            User platform information.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.Timeout">
            <summary>
            Timeout for the API requests, milliseconds.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.ForceVersion">
            <summary>
            Indicates whether to add '/v1/' to the URL when the public ID includes folders and a 'version' value was
            not defined.
            When no version is explicitly specified and the public id contains folders, a default v1 version
            is added to the URL. Set this boolean as false to prevent that behaviour.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.UseChunkedEncoding">
            <summary>
            Sets whether to use the use chunked encoding. See http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.6.1 for further info.
            Server must support HTTP/1.1 in order to use the chunked encoding.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.ChunkSize">
            <summary>
            Maximum size of chunk when uploading a file.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.ApiShared.m_apiAddr">
            <summary>
            URL of the cloudinary API.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.ApiShared"/> class.
            Default parameterless constructor.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.ApiShared"/> class.
            Parameterized constructor.
            </summary>
            <param name="cloudinaryUrl">Cloudinary URL.</param>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.#ctor(CloudinaryDotNet.Account,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.ApiShared"/> class.
            Parameterized constructor.
            </summary>
            <param name="account">Cloudinary account.</param>
            <param name="usePrivateCdn">Whether to use private Content Delivery Network.</param>
            <param name="privateCdn">Private Content Delivery Network.</param>
            <param name="shortenUrl">Whether to use shorten URL when possible.</param>
            <param name="cSubDomain">Whether to use sub domain.</param>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.#ctor(CloudinaryDotNet.Account)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.ApiShared"/> class.
            Parameterized constructor.
            </summary>
            <param name="account">Cloudinary account.</param>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.Account">
            <summary>
            Gets cloudinary account information.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.ApiBaseAddress">
            <summary>
            Gets or sets API base address (https://api.cloudinary.com by default) which is used to build ApiUrl*.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.Url">
            <summary>
            Gets default URL for working with resources.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.UrlImgUp">
            <summary>
            Gets default URL for working with uploaded images.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.UrlImgFetch">
            <summary>
            Gets default URL for working with fetched images.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.UrlVideoUp">
            <summary>
            Gets default URL for working with uploaded videos.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.ApiUrl">
            <summary>
            Gets default cloudinary API URL.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.ApiUrlImgUp">
            <summary>
            Gets default cloudinary API URL for uploading images.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.ApiUrlV">
            <summary>
            Gets default cloudinary API URL with version.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.ApiUrlStreamingProfileV">
            <summary>
            Gets default cloudinary API URL for streaming profiles.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.ApiUrlMetadataFieldV">
            <summary>
            Gets default cloudinary API URL for metadata fields.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.ApiUrlImgUpV">
            <summary>
            Gets default cloudinary API URL for uploading images with version.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.ApiShared.ApiUrlVideoUpV">
            <summary>
            Gets default cloudinary API URL for uploading video resources with version.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.GetCloudinaryParam``1(``0)">
            <summary>
            Gets cloudinary parameter from enumeration.
            </summary>
            <typeparam name="T">Enum which fields are decorated with DescriptionAttribute.</typeparam>
            <param name="e">Field of enum.</param>
            <returns>Cloudinary-compatible parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.ParseCloudinaryParam``1(System.String)">
            <summary>
            Parse cloudinary-compatible parameter as enum field.
            </summary>
            <typeparam name="T">Enum which fields are decorated with DescriptionAttribute.</typeparam>
            <param name="s">Field of enum represented as string.</param>
            <returns>Field of enum.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.CallAndParseAsync``1(CloudinaryDotNet.HttpMethod,System.String,System.Collections.Generic.SortedDictionary{System.String,System.Object},CloudinaryDotNet.FileDescription,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Call the Cloudinary API and parse HTTP response asynchronously.
            </summary>
            <typeparam name="T">Type of the response.</typeparam>
            <param name="method">HTTP method.</param>
            <param name="url">A generated URL.</param>
            <param name="parameters">Cloudinary parameters to add to the API call.</param>
            <param name="file">(Optional) Add file to the body of the API call.</param>
            <param name="extraHeaders">Headers to add to the request.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Instance of the parsed response from the cloudinary API.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.CallAndParse``1(CloudinaryDotNet.HttpMethod,System.String,System.Collections.Generic.SortedDictionary{System.String,System.Object},CloudinaryDotNet.FileDescription,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Call the Cloudinary API and parse HTTP response.
            </summary>
            <typeparam name="T">Type of the response.</typeparam>
            <param name="method">HTTP method.</param>
            <param name="url">A generated URL.</param>
            <param name="parameters">Cloudinary parameters to add to the API call.</param>
            <param name="file">(Optional) Add file to the body of the API call.</param>
            <param name="extraHeaders">(Optional) Headers to add to the request.</param>
            <returns>Instance of the parsed response from the cloudinary API.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.CallAsync(CloudinaryDotNet.HttpMethod,System.String,System.Collections.Generic.SortedDictionary{System.String,System.Object},CloudinaryDotNet.FileDescription,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Makes custom call to Cloudinary API asynchronously.
            </summary>
            <param name="method">HTTP method of call.</param>
            <param name="url">URL to call.</param>
            <param name="parameters">Dictionary of call parameters (can be null).</param>
            <param name="file">File to upload (must be null for non-uploading actions).</param>
            <param name="extraHeaders">Headers to add to the request.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>HTTP response on call.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.Call(CloudinaryDotNet.HttpMethod,System.String,System.Collections.Generic.SortedDictionary{System.String,System.Object},CloudinaryDotNet.FileDescription,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Makes custom call to Cloudinary API.
            </summary>
            <param name="method">HTTP method of call.</param>
            <param name="url">URL to call.</param>
            <param name="parameters">Dictionary of call parameters (can be null).</param>
            <param name="file">File to upload (must be null for non-uploading actions).</param>
            <param name="extraHeaders">Headers to add to the request.</param>
            <returns>HTTP response on call.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.GetUploadUrl(System.String)">
            <summary>
            Gets the upload URL for resource.
            </summary>
            <param name="resourceType">Type of the resource.</param>
            <returns>
            The upload URL.
            </returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.PrepareUploadParams(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Signs and serializes upload parameters.
            </summary>
            <param name="parameters">Dictionary of upload parameters.</param>
            <returns>JSON representation of upload parameters.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.SignParameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Calculates signature of parameters.
            </summary>
            <param name="parameters">Parameters to sign.</param>
            <returns>Signature of parameters.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.SignUriPart(System.String,System.Boolean)">
            <summary>
            Signs the specified URI part.
            </summary>
            <param name="uriPart">The URI part.</param>
            <param name="isLong">Indicates whether to generate long signature.</param>
            <returns>Signature of the URI part.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.VerifyApiResponseSignature(System.String,System.String,System.String)">
            <summary>
            Validates API response signature against Cloudinary configuration.
            </summary>
            <param name="publicId">Public ID of resource.</param>
            <param name="version">Version of resource.</param>
            <param name="signature">Response signature.</param>
            <returns>Boolean result of the validation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.VerifyNotificationSignature(System.String,System.Int64,System.String,System.Int32)">
            <summary>
            Validates notification signature against Cloudinary configuration.
            </summary>
            <param name="body">Request body.</param>
            <param name="timestamp">Request timestamp.</param>
            <param name="signature">Notification signature.</param>
            <param name="validFor">For how long the signature is valid, in seconds.</param>
            <returns>Boolean result of the validation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.BuildCallbackUrl(System.String)">
            <summary>
            Virtual build callback URL method. This method should be overridden in child classes.
            </summary>
            <param name="path">File path to check.</param>
            <returns>Callback URL.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.BuildUnsignedUploadForm(System.String,System.String,System.String,System.Collections.Generic.SortedDictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds HTML file input tag for unsigned upload of an asset.
            </summary>
            <param name="field">The name of an input field in the same form that will be updated post-upload with the asset's metadata.
            If no such field exists in your form, a new hidden field with the specified name will be created.</param>
            <param name="preset">The name of upload preset.</param>
            <param name="resourceType">Type of the uploaded resource.</param>
            <param name="parameters">Cloudinary upload parameters to add to the file input tag.</param>
            <param name="htmlOptions">Html options to be applied to the file input tag.</param>
            <returns>A file input tag, that needs to be added to the form on your HTML page.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.BuildUploadForm(System.String,System.String,System.Collections.Generic.SortedDictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds HTML file input tag for upload an asset.
            </summary>
            <param name="field">The name of an input field in the same form that will be updated post-upload with the asset's metadata.
            If no such field exists in your form, a new hidden field with the specified name will be created.</param>
            <param name="resourceType">Type of the uploaded resource.</param>
            <param name="parameters">Cloudinary upload parameters to add to the file input tag.</param>
            <param name="htmlOptions">Html options to be applied to the file input tag.</param>
            <returns>A file input tag, that needs to be added to the form on your HTML page.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.BuildUploadFormShared(System.String,System.String,System.Collections.Generic.SortedDictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Build file input html tag.
            </summary>
            <param name="field">The name of an input field in the same form that will be updated post-upload with the asset's metadata.
            If no such field exists in your form, a new hidden field with the specified name will be created.</param>
            <param name="resourceType">Type of the uploaded resource.</param>
            <param name="parameters">Cloudinary upload parameters to add to the file input tag.</param>
            <param name="htmlOptions">Html options to be applied to the file input tag.</param>
            <returns>A file input tag, that needs to be added to the form on your HTML page.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.ParseAsync``1(System.Net.Http.HttpResponseMessage)">
            <summary>
            Parses HTTP response and creates new instance of this class asynchronously.
            </summary>
            <param name="response">HTTP response.</param>
            <returns>New instance of this class.</returns>
            <typeparam name="T">Type of the parsed response.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.Parse``1(System.Net.Http.HttpResponseMessage)">
            <summary>
            Parses HTTP response and creates new instance of this class.
            </summary>
            <param name="response">HTTP response.</param>
            <returns>New instance of this class.</returns>
            <typeparam name="T">Type of the parsed response.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.CallApiAsync``1(CloudinaryDotNet.HttpMethod,System.String,CloudinaryDotNet.Actions.BaseParams,CloudinaryDotNet.FileDescription,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Call api asynchronous and return response of specified type asynchronously.
            </summary>
            <param name="method">HTTP method.</param>
            <param name="url">Url for api call.</param>
            <param name="parameters">Parameters for api call.</param>
            <param name="file">File to upload (must be null for non-uploading actions).</param>
            <param name="extraHeaders">Extra headers.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Return response of specified type.</returns>
            <typeparam name="T">Type of the parsed response.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.CallApi``1(CloudinaryDotNet.HttpMethod,System.String,CloudinaryDotNet.Actions.BaseParams,CloudinaryDotNet.FileDescription,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Call api synchronous and return response of specified type.
            </summary>
            <param name="method">HTTP method.</param>
            <param name="url">Url for api call.</param>
            <param name="parameters">Parameters for api call.</param>
            <param name="file">File to upload (must be null for non-uploading actions).</param>
            <param name="extraHeaders">Extra headers.</param>
            <returns>Return response of specified type.</returns>
            <typeparam name="T">Type of the parsed response.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.PrepareRequestBodyAsync(System.Net.Http.HttpRequestMessage,CloudinaryDotNet.HttpMethod,System.Collections.Generic.SortedDictionary{System.String,System.Object},CloudinaryDotNet.FileDescription,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Prepares request body to be sent on custom asynchronous call to Cloudinary API.
            </summary>
            <param name="request">HTTP request to alter.</param>
            <param name="method">HTTP method of call.</param>
            <param name="parameters">Dictionary of call parameters.</param>
            <param name="file">File to upload.</param>
            <param name="extraHeaders">(Optional) Headers to add to the request.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Prepared HTTP request.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.PrepareRequestBody(System.Net.Http.HttpRequestMessage,CloudinaryDotNet.HttpMethod,System.Collections.Generic.SortedDictionary{System.String,System.Object},CloudinaryDotNet.FileDescription,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Prepares request body to be sent on custom call to Cloudinary API.
            </summary>
            <param name="request">HTTP request to alter.</param>
            <param name="method">HTTP method of call.</param>
            <param name="parameters">Dictionary of call parameters.</param>
            <param name="file">File to upload.</param>
            <param name="extraHeaders">(Optional) Headers to add to the request.</param>
            <returns>Prepared HTTP request.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.FinalizeUploadParameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Extends Cloudinary upload parameters with additional attributes.
            </summary>
            <param name="parameters">Cloudinary upload parameters.</param>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.EncodeApiUrl(System.String)">
            <summary>
            Virtual encode API URL method. This method should be overridden in child classes.
            </summary>
            <param name="value">URL to be encoded.</param>
            <returns>Encoded URL.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.ParamsToJson(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Serialize the cloudinary parameters to JSON.
            </summary>
            <param name="parameters">Parameters to serialize.</param>
            <returns>Serialized parameters as JSON string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.BuildUnsignedUploadParams(System.String,System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            <summary>
            Build unsigned upload params with defined preset.
            </summary>
            <param name="preset">The name of an upload preset defined for your Cloudinary account.</param>
            <param name="parameters">Cloudinary upload parameters.</param>
            <returns>Unsigned cloudinary parameters with upload preset included.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.GetApiCredentials">
            <summary>
            Gets authentication credentials.
            </summary>
            <returns>Credentials string for authentication.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ApiShared.HandleUnsignedParameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Check 'unsigned' parameter value and add signature into parameters if unsigned=false or not specified.
            </summary>
            <param name="parameters">Parameters to check signature.</param>
        </member>
        <member name="T:CloudinaryDotNet.AuthToken">
            <summary>
            Authentication token for the token-based authentication feature.
            Allows you to limit the validity of the image delivery URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AuthToken.AUTH_TOKEN_NAME">
            <summary>
            Name of the cloudinary cookie with token.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AuthToken.UNSAFE_RE">
            <summary>
            Reqular expression pattern to match special characters in URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AuthToken.NULL_AUTH_TOKEN">
            <summary>
            Authentication token explicitly set to NULL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AuthToken.tokenName">
            <summary>
            Name of the cookie token.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AuthToken.key">
            <summary>
            The encryption key received from Cloudinary to sign token with.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AuthToken.startTime">
            <summary>
            Timestamp in UNIX time when the cookie becomes valid. Default value: the current time.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AuthToken.expiration">
            <summary>
            Timestamp in UNIX time when the cookie will expire.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AuthToken.ip">
            <summary>
            A specific IP Address that can access the authenticated images.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AuthToken.acl">
            <summary>
            An Access Control List for limiting the allowed URL path (e.g., /image/authenticated/*).
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AuthToken.duration">
            <summary>
            Duration that the cookie is valid in seconds.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.AuthToken"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.AuthToken"/> class.
            </summary>
            <param name="key">The encryption key received from Cloudinary to sign token with.</param>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.HexStringToByteArray(System.String)">
            <summary>
            Convert hex string to the array of bytes.
            </summary>
            <param name="s">Hex string to convert.</param>
            <returns>An array of bytes.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.StartTime(System.Int64)">
            <summary>
            Set the Start time when the cookie becomes valid.
            </summary>
            <param name="startTime">Timestamp in UNIX time when the cookie becomes valid.</param>
            <returns>The instance of token with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.Expiration(System.Int64)">
            <summary>
            Set the cookie expiration time.
            </summary>
            <param name="expiration">Timestamp in UNIX time when the cookie will expire.</param>
            <returns>The instance of token with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.Ip(System.String)">
            <summary>
            Set the IP for access the asset.
            </summary>
            <param name="ip">Only this IP address can access the resource.</param>
            <returns>The instance of token with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.Acl(System.String)">
            <summary>
            Set the Access Control List for limiting the allowed URL path to a specified pattern.
            </summary>
            <param name="acl">The pattern (e.g., /image/authenticated/*).</param>
            <returns>The instance of token with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.Duration(System.Int64)">
            <summary>
            Set the duration that the cookie is valid.
            </summary>
            <param name="duration">The duration that the cookie is valid in seconds.</param>
            <returns>The instance of token with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.Generate">
            <summary>
            Generate authentication token.
            </summary>
            <returns>Generated authentication token.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.Generate(System.String)">
            <summary>
            Generate authentication token for the URL.
            </summary>
            <param name="url">URL to generate authentication token.</param>
            <returns>Generated authentication token.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.Copy">
            <summary>
            Make a copy of the token.
            </summary>
            <returns>A new instance of the token.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.Equals(System.Object)">
            <summary>
            Check the equality of two tokens.
            </summary>
            <param name="o">The authentication token to compare.</param>
            <returns>True - if tokens are equal. Otherwise false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.GetHashCode">
            <summary>
            Compute a hashcode for the token.
            </summary>
            <returns>The hashcode for the token.</returns>
        </member>
        <member name="M:CloudinaryDotNet.AuthToken.EscapeUrlToLower(System.String)">
            <summary>
            Encode and lowercase the URL.
            </summary>
            <param name="url">URL for escaping.</param>
            <returns>Escaped URL in lowercase.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Cloudinary">
            <summary>
            Part of Cloudinary .NET API main class, responsible for metadata fields management.
            </summary>
            <summary>
            Part of Cloudinary .NET API main class, responsible for streaming profiles management.
            </summary>
            <summary>
            Main class of Cloudinary .NET API.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.AddMetadataField``1(CloudinaryDotNet.Actions.MetadataFieldCreateParams{``0})">
            <summary>
            Create a new metadata field definition.
            </summary>
            <param name="parameters">Parameters of the metadata field.</param>
            <returns>Parsed result of the metadata field creating.</returns>
            <typeparam name="T">Type of the metadata field.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListMetadataFields">
            <summary>
            Retrieve a list of all metadata field definitions as an array of JSON objects.
            </summary>
            <returns>Parsed list of metadata field definitions.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetMetadataField(System.String)">
            <summary>
            Retrieve a single metadata field definition.
            </summary>
            <param name="fieldExternalId">The ID of the metadata field.</param>
            <returns>Parsed information about metadata field.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateMetadataField``1(System.String,CloudinaryDotNet.Actions.MetadataFieldUpdateParams{``0})">
            <summary>
            Update a metadata field by its external ID.
            There is no need to pass the entire object, only properties to be updated.
            </summary>
            <param name="fieldExternalId">The ID of the metadata field.</param>
            <param name="parameters">Parameters of the metadata field to be updated.</param>
            <returns>Parsed result of the operation.</returns>
            <typeparam name="T">Type of the metadata field.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateMetadataDataSourceEntries(System.String,CloudinaryDotNet.Actions.MetadataDataSourceParams)">
            <summary>
            Update the datasource of a supported field type (currently only enum and set).
            The update is partial: datasource entries with an existing external_id will be updated.
            Entries with new external_id’s (or without external_id’s) will be appended.
            </summary>
            <param name="fieldExternalId">The ID of the metadata field.</param>
            <param name="parameters">Parameters of the datasource to be updated.</param>
            <returns>Parsed result of the operation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteMetadataField(System.String)">
            <summary>
            Delete a metadata field definition.
            The field should no longer be considered a valid candidate for all other endpoints.
            </summary>
            <param name="fieldExternalId">The ID of the metadata field.</param>
            <returns>Parsed result of the operation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteMetadataDataSourceEntries(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Delete datasource entries for a specified metadata field definition.
            This operation sets the state of the entries to inactive.
            </summary>
            <param name="fieldExternalId">The ID of the metadata field.</param>
            <param name="entriesExternalIds">An array of IDs of datasource entries to delete.</param>
            <returns>Parsed result of the operation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.RestoreMetadataDataSourceEntries(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Restore (unblock) any previously deleted datasource entries for a specified metadata field definition
             and set the state of the entries to active.
            </summary>
            <param name="fieldExternalId">The ID of the metadata field.</param>
            <param name="entriesExternalIds">An array of IDs of datasource entries to restore.</param>
            <returns>Parsed result of the operation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateMetadata(CloudinaryDotNet.Actions.MetadataUpdateParams)">
             <summary>
             Populate metadata fields with the given values. Existing values will be overwritten.
            
             Any metadata-value pairs given are merged with any existing metadata-value pairs
             (an empty value for an existing metadata field clears the value).
             </summary>
             <param name="parameters">Values to be applied to metadata fields of uploaded assets.</param>
             <returns>Parsed result of the operation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateStreamingProfileAsync(CloudinaryDotNet.Actions.StreamingProfileCreateParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Create a new streaming profile asynchronously.
            </summary>
            <param name="parameters">Parameters of streaming profile creating.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Detailed information about created streaming profile.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateStreamingProfile(CloudinaryDotNet.Actions.StreamingProfileCreateParams)">
            <summary>
            Create a new streaming profile.
            </summary>
            <param name="parameters">Parameters of streaming profile creating.</param>
            <returns>Detailed information about created streaming profile.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateStreamingProfileAsync(System.String,CloudinaryDotNet.Actions.StreamingProfileUpdateParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Update streaming profile asynchronously.
            </summary>
            <param name="name">Name to be assigned to a streaming profile.</param>
            <param name="parameters">Parameters of streaming profile updating.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <exception cref="T:System.ArgumentNullException">parameters can't be null.</exception>
            <exception cref="T:System.ArgumentException">name can't be null or empty.</exception>
            <returns>Result of updating the streaming profile.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateStreamingProfile(System.String,CloudinaryDotNet.Actions.StreamingProfileUpdateParams)">
            <summary>
            Update streaming profile.
            </summary>
            <param name="name">Name to be assigned to a streaming profile.</param>
            <param name="parameters">Parameters of streaming profile updating.</param>
            <exception cref="T:System.ArgumentNullException">both arguments can't be null.</exception>
            <returns>Result of updating the streaming profile.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteStreamingProfileAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Delete streaming profile asynchronously.
            </summary>
            <param name="name">The Name of streaming profile.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <exception cref="T:System.ArgumentException">name can't be null.</exception>
            <returns>Result of removing the streaming profile.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteStreamingProfile(System.String)">
            <summary>
            Delete streaming profile.
            </summary>
            <param name="name">Streaming profile name to delete.</param>
            <exception cref="T:System.ArgumentNullException">name can't be null.</exception>
            <returns>Result of removing the streaming profile.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetStreamingProfileAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Retrieve the details of a single streaming profile by name asynchronously.
            </summary>
            <param name="name">The Name of streaming profile.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <exception cref="T:System.ArgumentException">name can't be null.</exception>
            <returns>Detailed information about the streaming profile.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetStreamingProfile(System.String)">
            <summary>
            Retrieve the details of a single streaming profile by name.
            </summary>
            <param name="name">Streaming profile name.</param>
            <exception cref="T:System.ArgumentNullException">name can't be null.</exception>
            <returns>Detailed information about the streaming profile.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListStreamingProfilesAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Retrieve the list of streaming profiles, including built-in and custom profiles asynchronously.
            </summary>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Detailed information about streaming profiles.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListStreamingProfiles">
            <summary>
            Retrieve the list of streaming profiles, including built-in and custom profiles.
            </summary>
            <returns>Detailed information about streaming profiles.</returns>
        </member>
        <member name="F:CloudinaryDotNet.Cloudinary.RESOURCE_TYPE_IMAGE">
            <summary>
            Resource type 'image'.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Cloudinary.ACTION_GENERATE_ARCHIVE">
            <summary>
            Action 'generate_archive'.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Cloudinary.DEFAULT_CHUNK_SIZE">
            <summary>
            Default chunk (buffer) size for upload large files.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Cloudinary.m_random">
            <summary>
            Instance of <see cref="T:System.Random"/> class.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Cloudinary.m_api">
            <summary>
            Cloudinary <see cref="P:CloudinaryDotNet.Cloudinary.Api"/> object.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Cloudinary"/> class.
            Default parameterless constructor. Assumes that environment variable CLOUDINARY_URL is set.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Cloudinary"/> class with Cloudinary URL.
            </summary>
            <param name="cloudinaryUrl">Cloudinary URL.</param>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.#ctor(CloudinaryDotNet.Account)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Cloudinary"/> class with Cloudinary account.
            </summary>
            <param name="account">Cloudinary account.</param>
        </member>
        <member name="P:CloudinaryDotNet.Cloudinary.Api">
            <summary>
            Gets API object that used by this instance.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Search">
            <summary>
            Gets the advanced search provider used by the Cloudinary instance.
            </summary>
            <returns>Instance of the <see cref="M:CloudinaryDotNet.Cloudinary.Search"/> class.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DownloadPrivate(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Gets URL to download private image.
            </summary>
            <param name="publicId">The image public ID.</param>
            <param name="attachment">Whether to download image as attachment (optional).</param>
            <param name="format">Format to download (optional).</param>
            <param name="type">The type (optional).</param>
            <param name="expiresAt">The date (UNIX time in seconds) for the URL expiration. (optional).</param>
            <param name="resourceType">Resource type (image, video or raw) of files to include in the archive (optional).</param>
            <returns>Download URL.</returns>
            <exception cref="T:System.ArgumentException">publicId can't be null.</exception>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DownloadZip(System.String,CloudinaryDotNet.Transformation,System.String)">
            <summary>
            Gets URL to download tag cloud as ZIP package.
            </summary>
            <param name="tag">The tag.</param>
            <param name="transform">The transformation.</param>
            <returns>Download URL.</returns>
            <exception cref="T:System.ArgumentException">Tag should be specified.</exception>
            <param name="resourceType">Resource type (image, video or raw) of files to include in the archive (optional).</param>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DownloadArchiveUrl(CloudinaryDotNet.Actions.ArchiveParams)">
            <summary>
             Returns URL on archive file.
            </summary>
            <param name="parameters">Parameters of generated archive.</param>
            <returns>URL on archive file.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DownloadFolder(System.String,CloudinaryDotNet.Actions.ArchiveParams)">
            <summary>
             Creates and returns an URL that when invoked creates an archive of a folder.
            </summary>
            <param name="folderPath">Full path from the root.</param>
            <param name="parameters">Optional parameters of generated archive.</param>
            <returns>Url for downloading an archive of a folder.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DownloadBackedUpAsset(System.String,System.String)">
            <summary>
            Creates and returns an URL that allows downloading the backed-up asset
            based on the the asset ID and the version ID.
            </summary>
            <param name="assetId">ID of the asset.</param>
            <param name="versionId">Version ID of the asset.</param>
            <returns>Url for downloading the backed-up asset.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.PublishResourceByPrefixAsync(System.String,CloudinaryDotNet.Actions.PublishResourceParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Publishes resources by prefix asynchronously.
            </summary>
            <param name="prefix">The prefix for publishing resources.</param>
            <param name="parameters">Parameters for publishing of resources.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Parsed result of publishing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.PublishResourceByPrefix(System.String,CloudinaryDotNet.Actions.PublishResourceParams)">
            <summary>
            Publishes resources by prefix.
            </summary>
            <param name="prefix">The prefix for publishing resources.</param>
            <param name="parameters">Parameters for publishing of resources.</param>
            <returns>Parsed result of publishing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.PublishResourceByTagAsync(System.String,CloudinaryDotNet.Actions.PublishResourceParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Publishes resources by tag asynchronously.
            </summary>
            <param name="tag">All resources with the given tag will be published.</param>
            <param name="parameters">Parameters for publishing of resources.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of publishing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.PublishResourceByTag(System.String,CloudinaryDotNet.Actions.PublishResourceParams)">
            <summary>
            Publishes resources by tag.
            </summary>
            <param name="tag">All resources with the given tag will be published.</param>
            <param name="parameters">Parameters for publishing of resources.</param>
            <returns>Parsed result of publishing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.PublishResourceByIdsAsync(System.String,CloudinaryDotNet.Actions.PublishResourceParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Publishes resource by Id asynchronously.
            </summary>
            <param name="tag">Not used.</param>
            <param name="parameters">Parameters for publishing of resources.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Structure with the results of publishing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.PublishResourceByIds(System.String,CloudinaryDotNet.Actions.PublishResourceParams)">
            <summary>
            Publishes resource by Id.
            </summary>
            <param name="tag">Not used.</param>
            <param name="parameters">Parameters for publishing of resources.</param>
            <returns>Structure with the results of publishing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateResourceAccessModeByTagAsync(System.String,CloudinaryDotNet.Actions.UpdateResourceAccessModeParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates access mode for the resources selected by tag asynchronously.
            </summary>
            <param name="tag">Update all resources with the given tag (up to a maximum
            of 100 matching original resources).</param>
            <param name="parameters">Parameters for updating of resources.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Structure with the results of update.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateResourceAccessModeByTag(System.String,CloudinaryDotNet.Actions.UpdateResourceAccessModeParams)">
            <summary>
            Updates access mode for the resources selected by tag.
            </summary>
            <param name="tag">Update all resources with the given tag (up to a maximum
            of 100 matching original resources).</param>
            <param name="parameters">Parameters for updating of resources.</param>
            <returns>Structure with the results of update.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateResourceAccessModeByPrefixAsync(System.String,CloudinaryDotNet.Actions.UpdateResourceAccessModeParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates access mode for the resources selected by prefix asynchronously.
            </summary>
            <param name="prefix">Update all resources where the public ID starts with the given prefix (up to a maximum
            of 100 matching original resources).</param>
            <param name="parameters">Parameters for updating of resources.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Structure with the results of update.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateResourceAccessModeByPrefix(System.String,CloudinaryDotNet.Actions.UpdateResourceAccessModeParams)">
            <summary>
            Updates access mode for the resources selected by prefix.
            </summary>
            <param name="prefix">Update all resources where the public ID starts with the given prefix (up to a maximum
            of 100 matching original resources).</param>
            <param name="parameters">Parameters for updating of resources.</param>
            <returns>Structure with the results of update.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateResourceAccessModeByIdsAsync(CloudinaryDotNet.Actions.UpdateResourceAccessModeParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates access mode for the resources selected by public ids asynchronously.
            </summary>
            <param name="parameters">Parameters for updating of resources. Update all resources with the given
            public IDs (array of up to 100 public_ids).</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Structure with the results of update.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateResourceAccessModeByIds(CloudinaryDotNet.Actions.UpdateResourceAccessModeParams)">
            <summary>
            Updates access mode for the resources selected by public ids.
            </summary>
            <param name="parameters">Parameters for updating of resources. Update all resources with the given
            public IDs (array of up to 100 public_ids).</param>
            <returns>Structure with the results of update.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.TagAsync(CloudinaryDotNet.Actions.TagParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Manage tag assignments asynchronously.
            </summary>
            <param name="parameters">Parameters of tag management.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Results of tags management.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Tag(CloudinaryDotNet.Actions.TagParams)">
            <summary>
            Manages tag assignments.
            </summary>
            <param name="parameters">Parameters of tag management.</param>
            <returns>Results of tags management.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ContextAsync(CloudinaryDotNet.Actions.ContextParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Manages context assignments asynchronously.
            </summary>
            <param name="parameters">Parameters of context management.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Results of contexts management.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Context(CloudinaryDotNet.Actions.ContextParams)">
            <summary>
            Manages context assignments.
            </summary>
            <param name="parameters">Parameters of context management.</param>
            <returns>Results of contexts management.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteDerivedResourcesByTransformAsync(CloudinaryDotNet.Actions.DelDerivedResParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes derived resources by the given transformation (should be specified in parameters) asynchronously.
            </summary>
            <param name="parameters">Parameters to delete derived resources.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of deletion derived resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteDerivedResourcesByTransform(CloudinaryDotNet.Actions.DelDerivedResParams)">
            <summary>
            Deletes derived resources by the given transformation (should be specified in parameters).
            </summary>
            <param name="parameters">Parameters to delete derived resources.</param>
            <returns>Parsed result of deletion derived resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateArchiveAsync(CloudinaryDotNet.Actions.ArchiveParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Creates archive and stores it as a raw resource in your Cloudinary account asynchronously.
            </summary>
            <param name="parameters">Parameters of new generated archive.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of creating the archive.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateArchive(CloudinaryDotNet.Actions.ArchiveParams)">
            <summary>
            Creates archive and stores it as a raw resource in your Cloudinary account.
            </summary>
            <param name="parameters">Parameters of new generated archive.</param>
            <returns>Parsed result of creating the archive.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateZipAsync(CloudinaryDotNet.Actions.ArchiveParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Creates a zip archive and stores it as a raw resource in your Cloudinary account asynchronously.
            </summary>
            <param name="parameters">Parameters of the new generated zip archive.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of creating the archive.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateZip(CloudinaryDotNet.Actions.ArchiveParams)">
            <summary>
            Creates a zip archive and stores it as a raw resource in your Cloudinary account.
            </summary>
            <param name="parameters">Parameters of the new generated zip archive.</param>
            <returns>Parsed result of creating the archive.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ExplicitAsync(CloudinaryDotNet.Actions.ExplicitParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            This method can be used to force refresh facebook and twitter profile pictures. The response of this method
            includes the image's version. Use this version to bypass previously cached CDN copies. Also it can be used
            to generate transformed versions of an uploaded image. This is useful when Strict Transformations are
            allowed for your account and you wish to create custom derived images for already uploaded images asynchronously.
            </summary>
            <param name="parameters">The parameters for explicit method.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after a call of Explicit method.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Explicit(CloudinaryDotNet.Actions.ExplicitParams)">
            <summary>
            This method can be used to force refresh facebook and twitter profile pictures. The response of this method
            includes the image's version. Use this version to bypass previously cached CDN copies. Also it can be used
            to generate transformed versions of an uploaded image. This is useful when Strict Transformations are
            allowed for your account and you wish to create custom derived images for already uploaded images.
            </summary>
            <param name="parameters">The parameters for explicit method.</param>
            <returns>Parsed response after a call of Explicit method.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateUploadPresetAsync(CloudinaryDotNet.Actions.UploadPresetParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Creates the upload preset.
            Upload presets allow you to define the default behavior for your uploads, instead of
            receiving these as parameters during the upload request itself. Upload presets have
            precedence over client-side upload parameters asynchronously.
            </summary>
            <param name="parameters">Parameters of the upload preset.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after manipulation of upload presets.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateUploadPreset(CloudinaryDotNet.Actions.UploadPresetParams)">
            <summary>
            Creates the upload preset.
            Upload presets allow you to define the default behavior for your uploads, instead of receiving these as parameters during the upload request itself. Upload presets have precedence over client-side upload parameters.
            </summary>
            <param name="parameters">Parameters of the upload preset.</param>
            <returns>Parsed response after manipulation of upload presets.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateUploadPresetAsync(CloudinaryDotNet.Actions.UploadPresetParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates the upload preset.
            Every update overwrites all the preset settings asynchronously.
            File specified as null because it's non-uploading action.
            </summary>
            <param name="parameters">New parameters for upload preset.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after manipulation of upload presets.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateUploadPreset(CloudinaryDotNet.Actions.UploadPresetParams)">
            <summary>
            Updates the upload preset.
            Every update overwrites all the preset settings.
            File specified as null because it's non-uploading action.
            </summary>
            <param name="parameters">New parameters for upload preset.</param>
            <returns>Parsed response after manipulation of upload presets.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetUploadPresetAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the upload preset asynchronously.
            </summary>
            <param name="name">Name of the upload preset.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Upload preset details.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetUploadPreset(System.String)">
            <summary>
            Gets the upload preset.
            </summary>
            <param name="name">Name of the upload preset.</param>
            <returns>Upload preset details.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListUploadPresetsAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists upload presets asynchronously.
            </summary>
            <param name="nextCursor">Next cursor.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of upload presets listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListUploadPresets(System.String)">
            <summary>
            Lists upload presets.
            </summary>
            <param name="nextCursor">(Optional) Starting position.</param>
            <returns>Parsed result of upload presets listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListUploadPresetsAsync(CloudinaryDotNet.Actions.ListUploadPresetsParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists upload presets asynchronously.
            </summary>
            <param name="parameters">Parameters to list upload presets.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of upload presets listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListUploadPresets(CloudinaryDotNet.Actions.ListUploadPresetsParams)">
            <summary>
            Lists upload presets.
            </summary>
            <param name="parameters">Parameters to list upload presets.</param>
            <returns>Parsed result of upload presets listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteUploadPresetAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes the upload preset asynchronously.
            </summary>
            <param name="name">Name of the upload preset.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Result of upload preset deletion.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteUploadPreset(System.String)">
            <summary>
            Deletes the upload preset.
            </summary>
            <param name="name">Name of the upload preset.</param>
            <returns>Result of upload preset deletion.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadAsync(CloudinaryDotNet.Actions.ImageUploadParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Uploads an image file to Cloudinary asynchronously.
            </summary>
            <param name="parameters">Parameters of image uploading .</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Results of image uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Upload(CloudinaryDotNet.Actions.ImageUploadParams)">
            <summary>
            Uploads an image file to Cloudinary.
            </summary>
            <param name="parameters">Parameters of image uploading .</param>
            <returns>Results of image uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadAsync(CloudinaryDotNet.Actions.VideoUploadParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Uploads a video file to Cloudinary asynchronously.
            </summary>
            <param name="parameters">Parameters of video uploading.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Results of video uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Upload(CloudinaryDotNet.Actions.VideoUploadParams)">
            <summary>
            Uploads a video file to Cloudinary.
            </summary>
            <param name="parameters">Parameters of video uploading.</param>
            <returns>Results of video uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},CloudinaryDotNet.FileDescription,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Uploads a file to Cloudinary asynchronously.
            </summary>
            <param name="resourceType">Resource type ("image", "raw", "video", "auto").</param>
            <param name="parameters">Upload parameters.</param>
            <param name="fileDescription">File description.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Results of the raw file uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Upload(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},CloudinaryDotNet.FileDescription)">
            <summary>
            Uploads a file to Cloudinary.
            </summary>
            <param name="resourceType">Resource type ("image", "raw", "video", "auto").</param>
            <param name="parameters">Upload parameters.</param>
            <param name="fileDescription">File description.</param>
            <returns>Results of the raw file uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.RootFoldersAsync(CloudinaryDotNet.Actions.GetFoldersParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Async call to get a list of folders in the root asynchronously.
            </summary>
            <param name="parameters">(optional) Parameters for managing folders list.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of folders listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.RootFolders(CloudinaryDotNet.Actions.GetFoldersParams)">
            <summary>
            Gets a list of folders in the root.
            </summary>
            <param name="parameters">(optional) Parameters for managing folders list.</param>
            <returns>Parsed result of folders listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.SubFoldersAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of subfolders in a specified folder asynchronously.
            </summary>
            <param name="folder">The folder name.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of folders listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.SubFoldersAsync(System.String,CloudinaryDotNet.Actions.GetFoldersParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of subfolders in a specified folder asynchronously.
            </summary>
            <param name="folder">The folder name.</param>
            <param name="parameters">(Optional) Parameters for managing folders list.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of folders listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.SubFolders(System.String,CloudinaryDotNet.Actions.GetFoldersParams)">
            <summary>
            Gets a list of subfolders in a specified folder.
            </summary>
            <param name="folder">The folder name.</param>
            <param name="parameters">(Optional) Parameters for managing folders list.</param>
            <returns>Parsed result of folders listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteFolderAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes folder asynchronously.
            </summary>
            <param name="folder">Folder name.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of folder deletion.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteFolder(System.String)">
            <summary>
            Deletes folder.
            </summary>
            <param name="folder">Folder name.</param>
            <returns>Parsed result of folder deletion.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateFolder(System.String)">
            <summary>
            Create a new empty folder.
            </summary>
            <param name="folder">The full path of the new folder to create.</param>
            <returns>Parsed result of folder creation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateFolderAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Create a new empty folder.
            </summary>
            <param name="folder">The full path of the new folder to create.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of folder creation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetUsageAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Cloudinary account usage details asynchronously.
            </summary>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>The report on the status of your Cloudinary account usage details.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetUsageAsync(System.Nullable{System.DateTime},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Cloudinary account usage details asynchronously.
            </summary>
            <param name="date">(Optional) The date for the usage report. Must be within the last 3 months.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>The report on the status of your Cloudinary account usage details.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetUsage(System.Nullable{System.DateTime})">
            <summary>
            Gets the Cloudinary account usage details.
            </summary>
            <param name="date">(Optional) The date for the usage report. Must be within the last 3 months.</param>
            <returns>The report on the status of your Cloudinary account usage details.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadAsync(CloudinaryDotNet.Actions.RawUploadParams,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Uploads a file to Cloudinary asynchronously.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="type">The type ("raw" or "auto", last by default).</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the raw file uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Upload(CloudinaryDotNet.Actions.RawUploadParams,System.String)">
            <summary>
            Uploads a file to Cloudinary.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="type">The type ("raw" or "auto", last by default).</param>
            <returns>Parsed result of the raw file uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLargeRawAsync(CloudinaryDotNet.Actions.BasicRawUploadParams,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Uploads large file by dividing it to chunks asynchronously.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the large file uploading.</returns>
            <exception cref="T:System.ArgumentException">
            Please use BasicRawUploadParams class for large raw file uploading!
            or
            The UploadLargeRaw method is intended to be used for large local file uploading and can't be used for
            remote file uploading.
            </exception>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLargeRaw(CloudinaryDotNet.Actions.BasicRawUploadParams,System.Int32)">
            <summary>
            Uploads large file to Cloudinary by dividing it to chunks.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <returns>Parsed result of the large file uploading.</returns>
            <exception cref="T:System.ArgumentException">
            Please use BasicRawUploadParams class for large raw file uploading!
            or
            The UploadLargeRaw method is intended to be used for large local file uploading and can't be used for remote file uploading.
            </exception>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLargeAsync(CloudinaryDotNet.Actions.RawUploadParams,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Uploads large raw file to Cloudinary by dividing it to chunks asynchronously.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLarge(CloudinaryDotNet.Actions.RawUploadParams,System.Int32)">
            <summary>
            Uploads large raw file to Cloudinary by dividing it to chunks.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <returns>Parsed result of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLargeAsync(CloudinaryDotNet.Actions.ImageUploadParams,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Uploads large image file to Cloudinary by dividing it to chunks asynchronously.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLarge(CloudinaryDotNet.Actions.ImageUploadParams,System.Int32)">
            <summary>
            Uploads large image file to Cloudinary by dividing it to chunks.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <returns>Parsed result of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLargeAsync(CloudinaryDotNet.Actions.VideoUploadParams,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Uploads large video file to Cloudinary by dividing it to chunks asynchronously.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLarge(CloudinaryDotNet.Actions.VideoUploadParams,System.Int32)">
            <summary>
            Uploads large video file to Cloudinary by dividing it to chunks.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <returns>Parsed result of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLarge(CloudinaryDotNet.Actions.BasicRawUploadParams,System.Int32,System.Boolean)">
            <summary>
            Uploads large resources to Cloudinary by dividing it to chunks.
            </summary>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <param name="isRaw">Whether the file is raw.</param>
            <returns>Parsed result of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLargeAsync``1(CloudinaryDotNet.Actions.BasicRawUploadParams,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Uploads large resources to Cloudinary by dividing it to chunks asynchronously.
            </summary>
            <typeparam name="T">The type of result of upload.</typeparam>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLarge``1(CloudinaryDotNet.Actions.BasicRawUploadParams,System.Int32)">
            <summary>
            Uploads large resources to Cloudinary by dividing it to chunks.
            </summary>
            <typeparam name="T">The type of result of upload.</typeparam>
            <param name="parameters">Parameters of file uploading.</param>
            <param name="bufferSize">Chunk (buffer) size (20 MB by default).</param>
            <returns>Parsed result of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.RenameAsync(System.String,System.String,System.Boolean,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Changes public identifier of a file asynchronously.
            </summary>
            <param name="fromPublicId">Old identifier.</param>
            <param name="toPublicId">New identifier.</param>
            <param name="overwrite">Overwrite a file with the same identifier as new if such file exists.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Result of resource renaming.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Rename(System.String,System.String,System.Boolean)">
            <summary>
            Changes public identifier of a file.
            </summary>
            <param name="fromPublicId">Old identifier.</param>
            <param name="toPublicId">New identifier.</param>
            <param name="overwrite">Overwrite a file with the same identifier as new if such file exists.</param>
            <returns>Result of resource renaming.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.RenameAsync(CloudinaryDotNet.Actions.RenameParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Changes public identifier of a file asynchronously.
            </summary>
            <param name="parameters">Operation parameters.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Result of resource renaming.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Rename(CloudinaryDotNet.Actions.RenameParams)">
            <summary>
            Changes public identifier of a file.
            </summary>
            <param name="parameters">Operation parameters.</param>
            <returns>Result of resource renaming.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DestroyAsync(CloudinaryDotNet.Actions.DeletionParams)">
            <summary>
            Delete file from Cloudinary asynchronously.
            </summary>
            <param name="parameters">Parameters for deletion of resource from Cloudinary.</param>
            <returns>Results of deletion.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Destroy(CloudinaryDotNet.Actions.DeletionParams)">
            <summary>
            Deletes file from Cloudinary.
            </summary>
            <param name="parameters">Parameters for deletion of resource from Cloudinary.</param>
            <returns>Results of deletion.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.TextAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Generate an image of a given textual string asynchronously.
            </summary>
            <param name="text">Text to draw.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Results of generating an image of a given textual string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Text(System.String)">
            <summary>
            Generates an image of a given textual string.
            </summary>
            <param name="text">Text to draw.</param>
            <returns>Results of generating an image of a given textual string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.TextAsync(CloudinaryDotNet.Actions.TextParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Generates an image of a given textual string asynchronously.
            </summary>
            <param name="parameters">Parameters of generating an image of a given textual string.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Results of generating an image of a given textual string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Text(CloudinaryDotNet.Actions.TextParams)">
            <summary>
            Generates an image of a given textual string.
            </summary>
            <param name="parameters">Parameters of generating an image of a given textual string.</param>
            <returns>Results of generating an image of a given textual string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourceTypesAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists resource types asynchronously.
            </summary>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed list of resource types.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourceTypes">
            <summary>
            Lists resource types.
            </summary>
            <returns>Parsed list of resource types.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesAsync(System.String,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists resources asynchronously asynchronously.
            </summary>
            <param name="nextCursor">Starting position.</param>
            <param name="tags">Whether to include tags in result.</param>
            <param name="context">Whether to include context in result.</param>
            <param name="moderations">Whether to include moderation status in result.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResources(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Lists resources.
            </summary>
            <param name="nextCursor">Starting position.</param>
            <param name="tags">Whether to include tags in result.</param>
            <param name="context">Whether to include context in result.</param>
            <param name="moderations">Whether to include moderation status in result.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByTypeAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists resources of specified type asynchronously.
            </summary>
            <param name="type">Resource type.</param>
            <param name="nextCursor">Starting position.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByType(System.String,System.String)">
            <summary>
            Lists resources of specified type.
            </summary>
            <param name="type">Resource type.</param>
            <param name="nextCursor">Starting position.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByPrefixAsync(System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists resources by prefix asynchronously.
            </summary>
            <param name="prefix">Public identifier prefix.</param>
            <param name="type">Resource type.</param>
            <param name="nextCursor">Starting position.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByPrefix(System.String,System.String,System.String)">
            <summary>
            Lists resources by prefix.
            </summary>
            <param name="prefix">Public identifier prefix.</param>
            <param name="type">Resource type.</param>
            <param name="nextCursor">Starting position.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByPrefixAsync(System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists resources by prefix asynchronously.
            </summary>
            <param name="prefix">Public identifier prefix.</param>
            <param name="tags">Whether to include tags in result.</param>
            <param name="context">Whether to include context in result.</param>
            <param name="moderations">If true, include moderation status for each resource.</param>
            <param name="type">Resource type.</param>
            <param name="nextCursor">Starting position.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByPrefix(System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Lists resources by prefix.
            </summary>
            <param name="prefix">Public identifier prefix.</param>
            <param name="tags">Whether to include tags in result.</param>
            <param name="context">Whether to include context in result.</param>
            <param name="moderations">If true, include moderation status for each resource.</param>
            <param name="type">Resource type.</param>
            <param name="nextCursor">Starting position.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByTagAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists resources by tag asynchronously.
            </summary>
            <param name="tag">The tag.</param>
            <param name="nextCursor">Starting position.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByTag(System.String,System.String)">
            <summary>
            Lists resources by tag.
            </summary>
            <param name="tag">The tag.</param>
            <param name="nextCursor">Starting position.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByPublicIdsAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Returns resources with specified public identifiers asynchronously.
            </summary>
            <param name="publicIds">Public identifiers.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByPublicIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns resources with specified public identifiers.
            </summary>
            <param name="publicIds">Public identifiers.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourceByPublicIdsAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Returns resources with specified public identifiers asynchronously.
            </summary>
            <param name="publicIds">Public identifiers.</param>
            <param name="tags">Whether to include tags in result.</param>
            <param name="context">Whether to include context in result.</param>
            <param name="moderations">Whether to include moderation status in result.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourceByPublicIds(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns resources with specified public identifiers.
            </summary>
            <param name="publicIds">Public identifiers.</param>
            <param name="tags">Whether to include tags in result.</param>
            <param name="context">Whether to include context in result.</param>
            <param name="moderations">Whether to include moderation status in result.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByModerationStatusAsync(System.String,CloudinaryDotNet.Actions.ModerationStatus,System.Boolean,System.Boolean,System.Boolean,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists resources by moderation status asynchronously.
            </summary>
            <param name="kind">The moderation kind.</param>
            <param name="status">The moderation status.</param>
            <param name="tags">Whether to include tags in result.</param>
            <param name="context">Whether to include context in result.</param>
            <param name="moderations">Whether to include moderation status in result.</param>
            <param name="nextCursor">The next cursor.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByModerationStatus(System.String,CloudinaryDotNet.Actions.ModerationStatus,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Lists resources by moderation status.
            </summary>
            <param name="kind">The moderation kind.</param>
            <param name="status">The moderation status.</param>
            <param name="tags">Whether to include tags in result.</param>
            <param name="context">Whether to include context in result.</param>
            <param name="moderations">Whether to include moderation status in result.</param>
            <param name="nextCursor">The next cursor.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByContextAsync(System.String,System.String,System.Boolean,System.Boolean,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            List resources by context metadata keys and values asynchronously.
            </summary>
            <param name="key">Only resources with the given key should be returned.</param>
            <param name="value">When provided should only return resources with this given value for the context key.
            When not provided, return all resources for which the context key exists.</param>
            <param name="tags">If true, include list of tag names assigned for each resource.</param>
            <param name="context">If true, include context assigned to each resource.</param>
            <param name="nextCursor">The next cursor.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesByContext(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            List resources by context metadata keys and values.
            </summary>
            <param name="key">Only resources with the given key should be returned.</param>
            <param name="value">When provided should only return resources with this given value for the context key.
            When not provided, return all resources for which the context key exists.</param>
            <param name="tags">If true, include list of tag names assigned for each resource.</param>
            <param name="context">If true, include context assigned to each resource.</param>
            <param name="nextCursor">The next cursor.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResourcesAsync(CloudinaryDotNet.Actions.ListResourcesParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of resources asynchronously.
            </summary>
            <param name="parameters">Parameters to list resources.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListResources(CloudinaryDotNet.Actions.ListResourcesParams)">
            <summary>
            Gets a list of resources.
            </summary>
            <param name="parameters">Parameters to list resources.</param>
            <returns>Parsed result of the resources listing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListTagsAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of tags asynchronously.
            </summary>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed list of tags.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListTags">
            <summary>
            Gets a list of all tags.
            </summary>
            <returns>Parsed list of tags.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListTagsByPrefixAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Finds all tags that start with the given prefix asynchronously.
            </summary>
            <param name="prefix">The tag prefix.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed list of tags.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListTagsByPrefix(System.String)">
            <summary>
            Finds all tags that start with the given prefix.
            </summary>
            <param name="prefix">The tag prefix.</param>
            <returns>Parsed list of tags.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListTagsAsync(CloudinaryDotNet.Actions.ListTagsParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of tags asynchronously.
            </summary>
            <param name="parameters">Parameters of the request.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed list of tags.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListTags(CloudinaryDotNet.Actions.ListTagsParams)">
            <summary>
            Gets a list of tags.
            </summary>
            <param name="parameters">Parameters of the request.</param>
            <returns>Parsed list of tags.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListTransformationsAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of transformations asynchronously.
            </summary>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed list of transformations details.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListTransformations">
            <summary>
            Gets a list of transformations.
            </summary>
            <returns>Parsed list of transformations details.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListTransformationsAsync(CloudinaryDotNet.Actions.ListTransformsParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of transformations asynchronously.
            </summary>
            <param name="parameters">Parameters of the request for a list of transformation.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed list of transformations details.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ListTransformations(CloudinaryDotNet.Actions.ListTransformsParams)">
            <summary>
            Gets a list of transformations.
            </summary>
            <param name="parameters">Parameters of the request for a list of transformation.</param>
            <returns>Parsed list of transformations details.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetTransformAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets details of a single transformation asynchronously.
            </summary>
            <param name="transform">Name of the transformation.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed details of a single transformation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetTransform(System.String)">
            <summary>
            Gets details of a single transformation by name.
            </summary>
            <param name="transform">Name of the transformation.</param>
            <returns>Parsed details of a single transformation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetTransformAsync(CloudinaryDotNet.Actions.GetTransformParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets details of a single transformation asynchronously.
            </summary>
            <param name="parameters">Parameters of the request of transformation details.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed details of a single transformation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetTransform(CloudinaryDotNet.Actions.GetTransformParams)">
            <summary>
            Gets details of a single transformation.
            </summary>
            <param name="parameters">Parameters of the request of transformation details.</param>
            <returns>Parsed details of a single transformation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateResourceAsync(System.String,CloudinaryDotNet.Actions.ModerationStatus,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates details of an existing resource asynchronously.
            </summary>
            <param name="publicId">The public ID of the resource to update.</param>
            <param name="moderationStatus">The image moderation status.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response of the detailed resource information.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateResource(System.String,CloudinaryDotNet.Actions.ModerationStatus)">
            <summary>
            Updates details of an existing resource.
            </summary>
            <param name="publicId">The public ID of the resource to update.</param>
            <param name="moderationStatus">The image moderation status.</param>
            <returns>Parsed response of the detailed resource information.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateResourceAsync(CloudinaryDotNet.Actions.UpdateParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates details of an existing resource asynchronously.
            </summary>
            <param name="parameters">Parameters to update details of an existing resource.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response of the detailed resource information.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateResource(CloudinaryDotNet.Actions.UpdateParams)">
            <summary>
            Updates details of an existing resource.
            </summary>
            <param name="parameters">Parameters to update details of an existing resource.</param>
            <returns>Parsed response of the detailed resource information.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetResourceAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets details of a single resource as well as all its derived resources by its public ID asynchronously.
            </summary>
            <param name="publicId">The public ID of the resource.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response with the detailed resource information.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetResource(System.String)">
            <summary>
            Gets details of a single resource as well as all its derived resources by its public ID.
            </summary>
            <param name="publicId">The public ID of the resource.</param>
            <returns>Parsed response with the detailed resource information.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetResourceAsync(CloudinaryDotNet.Actions.GetResourceParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets details of the requested resource as well as all its derived resources asynchronously.
            </summary>
            <param name="parameters">Parameters of the request of resource.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response with the detailed resource information.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetResource(CloudinaryDotNet.Actions.GetResourceParams)">
            <summary>
            Gets details of the requested resource as well as all its derived resources.
            </summary>
            <param name="parameters">Parameters of the request of resource.</param>
            <returns>Parsed response with the detailed resource information.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteDerivedResourcesAsync(System.String[])">
            <summary>
            Deletes all derived resources with the given IDs asynchronously.
            </summary>
            <param name="ids">An array of up to 100 derived_resource_ids.</param>
            <returns>Parsed result of deletion derived resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteDerivedResources(System.String[])">
            <summary>
            Deletes all derived resources with the given IDs.
            </summary>
            <param name="ids">An array of up to 100 derived_resource_ids.</param>
            <returns>Parsed result of deletion derived resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteDerivedResourcesAsync(CloudinaryDotNet.Actions.DelDerivedResParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes all derived resources with the given parameters asynchronously.
            </summary>
            <param name="parameters">Parameters to delete derived resources.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of deletion derived resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteDerivedResources(CloudinaryDotNet.Actions.DelDerivedResParams)">
            <summary>
            Deletes all derived resources with the given parameters.
            </summary>
            <param name="parameters">Parameters to delete derived resources.</param>
            <returns>Parsed result of deletion derived resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesAsync(CloudinaryDotNet.Actions.ResourceType,System.String[])">
            <summary>
            Deletes all resources of the given resource type and with the given public IDs asynchronously.
            </summary>
            <param name="type">The type of file to delete. Default: image.</param>
            <param name="publicIds">Array of up to 100 public_ids.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResources(CloudinaryDotNet.Actions.ResourceType,System.String[])">
            <summary>
            Deletes all resources of the given resource type and with the given public IDs.
            </summary>
            <param name="type">The type of file to delete. Default: image.</param>
            <param name="publicIds">Array of up to 100 public_ids.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesAsync(System.String[])">
            <summary>
            Deletes all resources with the given public IDs asynchronously.
            </summary>
            <param name="publicIds">Array of up to 100 public_ids.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResources(System.String[])">
            <summary>
            Deletes all resources with the given public IDs.
            </summary>
            <param name="publicIds">Array of up to 100 public_ids.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesByPrefixAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes all resources, including derived resources, where the public ID starts with the given prefix (up to
            a maximum of 1000 original resources) asynchronously.
            </summary>
            <param name="prefix">Delete all resources where the public ID starts with the given prefix. </param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesByPrefix(System.String)">
            <summary>
            Deletes all resources, including derived resources, where the public ID starts with the given prefix (up to
            a maximum of 1000 original resources).
            </summary>
            <param name="prefix">Delete all resources where the public ID starts with the given prefix. </param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesByPrefixAsync(System.String,System.Boolean,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes all resources, including derived resources, where the public ID starts with the given prefix (up to
            a maximum of 1000 original resources) asynchronously.
            </summary>
            <param name="prefix">Delete all resources where the public ID starts with the given prefix. </param>
            <param name="keepOriginal">If true, delete only the derived images of the matching resources.</param>
            <param name="nextCursor">Continue deletion from the given cursor.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesByPrefix(System.String,System.Boolean,System.String)">
            <summary>
            Deletes all resources, including derived resources, where the public ID starts with the given prefix (up to
            a maximum of 1000 original resources).
            </summary>
            <param name="prefix">Delete all resources where the public ID starts with the given prefix. </param>
            <param name="keepOriginal">If true, delete only the derived images of the matching resources.</param>
            <param name="nextCursor">Continue deletion from the given cursor.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesByTagAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes resources by the given tag name asynchronously.
            </summary>
            <param name="tag">
            Delete all resources (and their derivatives) with the given tag name (up to a maximum of
            1000 original resources).
            </param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesByTag(System.String)">
            <summary>
            Deletes resources by the given tag name.
            </summary>
            <param name="tag">
            Delete all resources (and their derivatives) with the given tag name (up to a maximum of
            1000 original resources).
            </param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesByTagAsync(System.String,System.Boolean,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes resources by the given tag name asynchronously.
            </summary>
            <param name="tag">
            Delete all resources (and their derivatives) with the given tag name (up to a maximum of
            1000 original resources).
            </param>
            <param name="keepOriginal">If true, delete only the derived images of the matching resources.</param>
            <param name="nextCursor">Continue deletion from the given cursor.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesByTag(System.String,System.Boolean,System.String)">
            <summary>
            Deletes resources by the given tag name.
            </summary>
            <param name="tag">
            Delete all resources (and their derivatives) with the given tag name (up to a maximum of
            1000 original resources).
            </param>
            <param name="keepOriginal">If true, delete only the derived images of the matching resources.</param>
            <param name="nextCursor">Continue deletion from the given cursor.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteAllResourcesAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes all resources asynchronously.
            </summary>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteAllResources">
            <summary>
            Deletes all resources.
            </summary>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteAllResourcesAsync(System.Boolean,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes all resources with conditions asynchronously.
            </summary>
            <param name="keepOriginal">If true, delete only the derived resources.</param>
            <param name="nextCursor">
            Value of the <see cref="P:CloudinaryDotNet.Actions.DelResResult.NextCursor"/> to continue delete from.
            </param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteAllResources(System.Boolean,System.String)">
            <summary>
            Deletes all resources with conditions.
            </summary>
            <param name="keepOriginal">If true, delete only the derived resources.</param>
            <param name="nextCursor">
            Value of the <see cref="P:CloudinaryDotNet.Actions.DelResResult.NextCursor"/> to continue delete from.
            </param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResourcesAsync(CloudinaryDotNet.Actions.DelResParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes all resources with parameters asynchronously.
            </summary>
            <param name="parameters">Parameters for deletion resources.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteResources(CloudinaryDotNet.Actions.DelResParams)">
            <summary>
            Deletes all resources with parameters.
            </summary>
            <param name="parameters">Parameters for deletion resources.</param>
            <returns>Parsed result of deletion resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.RestoreAsync(System.String[])">
            <summary>
            Restores a deleted resources by array of public ids asynchronously.
            </summary>
            <param name="publicIds">The public IDs of (deleted or existing) backed up resources to restore.</param>
            <returns>Parsed result of restoring resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Restore(System.String[])">
            <summary>
            Restores a deleted resources by array of public ids.
            </summary>
            <param name="publicIds">The public IDs of (deleted or existing) backed up resources to restore.</param>
            <returns>Parsed result of restoring resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.RestoreAsync(CloudinaryDotNet.Actions.RestoreParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Restores a deleted resources asynchronously.
            </summary>
            <param name="parameters">Parameters to restore a deleted resources.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed result of restoring resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Restore(CloudinaryDotNet.Actions.RestoreParams)">
            <summary>
            Restores a deleted resources.
            </summary>
            <param name="parameters">Parameters to restore a deleted resources.</param>
            <returns>Parsed result of restoring resources.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadMappingsAsync(CloudinaryDotNet.Actions.UploadMappingParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Returns list of all upload mappings asynchronously.
            </summary>
            <param name="parameters">
            Uses only <see cref="P:CloudinaryDotNet.Actions.UploadMappingParams.MaxResults"/> and <see cref="P:CloudinaryDotNet.Actions.UploadMappingParams.NextCursor"/>
            properties. Can be null.
            </param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after Upload mappings manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadMappings(CloudinaryDotNet.Actions.UploadMappingParams)">
            <summary>
            Returns list of all upload mappings.
            </summary>
            <param name="parameters">
            Uses only <see cref="P:CloudinaryDotNet.Actions.UploadMappingParams.MaxResults"/> and <see cref="P:CloudinaryDotNet.Actions.UploadMappingParams.NextCursor"/>
            properties. Can be null.
            </param>
            <returns>Parsed response after Upload mappings manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadMappingAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Returns single upload mapping by <see cref="T:CloudinaryDotNet.Actions.Folder"/> name asynchronously.
            </summary>
            <param name="folder">Folder name.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after Upload mappings manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadMapping(System.String)">
            <summary>
            Returns single upload mapping by <see cref="T:CloudinaryDotNet.Actions.Folder"/> name.
            </summary>
            <param name="folder">Folder name.</param>
            <returns>Parsed response after Upload mappings manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateUploadMappingAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Creates a new upload mapping folder and its template (URL) asynchronously.
            </summary>
            <param name="folder">Folder name to create.</param>
            <param name="template">URL template for mapping to the <paramref name="folder"/>.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after Upload mappings manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateUploadMapping(System.String,System.String)">
            <summary>
            Creates a new upload mapping folder and its template (URL).
            </summary>
            <param name="folder">Folder name to create.</param>
            <param name="template">URL template for mapping to the <paramref name="folder"/>.</param>
            <returns>Parsed response after Upload mappings manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateUploadMappingAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates existing upload mapping asynchronously.
            </summary>
            <param name="folder">Existing Folder to be updated.</param>
            <param name="newTemplate">New value of Template URL.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after Upload mappings update.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateUploadMapping(System.String,System.String)">
            <summary>
            Updates existing upload mapping.
            </summary>
            <param name="folder">Existing Folder to be updated.</param>
            <param name="newTemplate">New value of Template URL.</param>
            <returns>Parsed response after Upload mappings update.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteUploadMappingAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes all upload mappings asynchronously.
            </summary>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after Upload mappings delete.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteUploadMapping">
            <summary>
            Deletes all upload mappings.
            </summary>
            <returns>Parsed response after Upload mappings delete.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteUploadMappingAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes upload mapping by <paramref name="folder"/> name asynchronously.
            </summary>
            <param name="folder">Folder name.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after Upload mappings manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteUploadMapping(System.String)">
            <summary>
            Deletes upload mapping by <paramref name="folder"/> name.
            </summary>
            <param name="folder">Folder name.</param>
            <returns>Parsed response after Upload mappings manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateTransformAsync(CloudinaryDotNet.Actions.UpdateTransformParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates Cloudinary transformation resource asynchronously.
            </summary>
            <param name="parameters">Parameters for transformation update.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after transformation manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UpdateTransform(CloudinaryDotNet.Actions.UpdateTransformParams)">
            <summary>
            Updates Cloudinary transformation resource.
            </summary>
            <param name="parameters">Parameters for transformation update.</param>
            <returns>Parsed response after transformation manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateTransformAsync(CloudinaryDotNet.Actions.CreateTransformParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Creates Cloudinary transformation resource asynchronously.
            </summary>
            <param name="parameters">Parameters of the new transformation.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after transformation manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CreateTransform(CloudinaryDotNet.Actions.CreateTransformParams)">
            <summary>
            Creates Cloudinary transformation resource.
            </summary>
            <param name="parameters">Parameters of the new transformation.</param>
            <returns>Parsed response after transformation manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteTransformAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes transformation by name asynchronously.
            </summary>
            <param name="transformName">The name of transformation to delete.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after transformation manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DeleteTransform(System.String)">
            <summary>
            Deletes transformation by name.
            </summary>
            <param name="transformName">The name of transformation to delete.</param>
            <returns>Parsed response after transformation manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.MakeSpriteAsync(CloudinaryDotNet.Actions.SpriteParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Eagerly generate sprites asynchronously.
            </summary>
            <param name="parameters">Parameters for sprite generation.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response with detailed information about the created sprite.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.MakeSprite(CloudinaryDotNet.Actions.SpriteParams)">
            <summary>
            Eagerly generates sprites.
            </summary>
            <param name="parameters">Parameters for sprite generation.</param>
            <returns>Parsed response with detailed information about the created sprite.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DownloadSprite(CloudinaryDotNet.Actions.SpriteParams)">
            <summary>
            Gets a signed URL to download generated sprite.
            </summary>
            <param name="parameters">Parameters of Sprite operation.</param>
            <returns>Download URL.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.MultiAsync(CloudinaryDotNet.Actions.MultiParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Creates a single animated GIF file from a group of images asynchronously.
            </summary>
            <param name="parameters">Parameters of Multi operation.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response with detailed information about the created animated GIF.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Multi(CloudinaryDotNet.Actions.MultiParams)">
            <summary>
            Creates a single animated GIF file from a group of images.
            </summary>
            <param name="parameters">Parameters of Multi operation.</param>
            <returns>Parsed response with detailed information about the created animated GIF.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.DownloadMulti(CloudinaryDotNet.Actions.MultiParams)">
            <summary>
            Gets a signed URL to download animated GIF file generated through multi request.
            </summary>
            <param name="parameters">Parameters of Multi operation.</param>
            <returns>Download URL.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.ExplodeAsync(CloudinaryDotNet.Actions.ExplodeParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Explodes multipage document to single pages asynchronously.
            </summary>
            <param name="parameters">Parameters of explosion operation.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after a call of Explode method.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Explode(CloudinaryDotNet.Actions.ExplodeParams)">
            <summary>
            Explodes multipage document to single pages.
            </summary>
            <param name="parameters">Parameters of explosion operation.</param>
            <returns>Parsed response after a call of Explode method.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetCloudinaryJsConfig(System.Boolean,System.String)">
            <summary>
            Gets java script that configures Cloudinary JS.
            </summary>
            <param name="directUpload">Whether to reference additional scripts that are necessary for uploading files directly from browser.</param>
            <param name="dir">Override location of js files (default: ~/Scripts).</param>
            <returns>HTML script tag with Cloudinary JS configuration.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.GetApiUrlV">
            <summary>
            Get default API URL with version.
            </summary>
            <returns>URL of the API.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CallApi``1(CloudinaryDotNet.Cloudinary.UploadPresetApiParams)">
            <summary>
            Call api with specified parameters.
            </summary>
            <param name="apiParams">New parameters for upload preset.</param>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CallApiAsync``1(CloudinaryDotNet.Cloudinary.UploadPresetApiParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Call api with specified parameters asynchronously.
            </summary>
            <param name="apiParams">New parameters for upload preset.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadAsync``1(CloudinaryDotNet.Actions.BasicRawUploadParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Uploads a resource to Cloudinary asynchronously.
            </summary>
            <param name="parameters">Parameters of uploading .</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Results of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.Upload``2(``1)">
            <summary>
            Uploads a resource to Cloudinary.
            </summary>
            <param name="parameters">Parameters of uploading .</param>
            <returns>Results of uploading.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CallUploadMappingsApiAsync(CloudinaryDotNet.HttpMethod,CloudinaryDotNet.Actions.UploadMappingParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Calls an upload mappings API asynchronously.
            </summary>
            <param name="httpMethod">HTTP method.</param>
            <param name="parameters">Parameters for Mapping of folders to URL prefixes for dynamic image fetching from
            existing online locations.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed response after Upload mappings manipulation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.CallUploadMappingsAPI(CloudinaryDotNet.HttpMethod,CloudinaryDotNet.Actions.UploadMappingParams)">
            <summary>
            Calls an upload mappings API.
            </summary>
            <param name="httpMethod">HTTP method.</param>
            <param name="parameters">Parameters for Mapping of folders to URL prefixes for dynamic image fetching from
            existing online locations.</param>
            <returns>Parsed response after Upload mappings manipulation.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Cloudinary.UploadLargeParams">
            <summary>
            Upload large file parameters.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLargeParams.#ctor(CloudinaryDotNet.Actions.BasicRawUploadParams,System.Int32,CloudinaryDotNet.Api)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Cloudinary.UploadLargeParams"/> class.
            </summary>
            <param name="parameters">Basic raw upload parameters.</param>
            <param name="bufferSize">Buffer size.</param>
            <param name="api">Technological layer to work with cloudinary API.</param>
        </member>
        <member name="P:CloudinaryDotNet.Cloudinary.UploadLargeParams.BufferSize">
            <summary>
            Gets buffer size.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Cloudinary.UploadLargeParams.Url">
            <summary>
            Gets url.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Cloudinary.UploadLargeParams.Parameters">
            <summary>
            Gets basic raw upload parameters.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Cloudinary.UploadLargeParams.Headers">
            <summary>
            Gets request headers.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLargeParams.RandomPublicId">
            <summary>
            Generate random PublicId.
            </summary>
            <returns>Randomly generated PublicId.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadLargeParams.GetUploadUrl(CloudinaryDotNet.Actions.BasicRawUploadParams,CloudinaryDotNet.Api)">
            <summary>
            A convenient method for uploading an image before testing.
            </summary>
            <param name="parameters">Parameters of type BasicRawUploadParams.</param>
            <param name="mApi">Action to set custom upload parameters.</param>
            <returns>The upload url.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Cloudinary.UploadPresetApiParams">
            <summary>
            Private helper class for specifying parameters for upload preset api call.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Cloudinary.UploadPresetApiParams.#ctor(CloudinaryDotNet.HttpMethod,System.String,CloudinaryDotNet.Actions.UploadPresetParams)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Cloudinary.UploadPresetApiParams"/> class.
            </summary>
            <param name="httpMethod">Http request method.</param>
            <param name="url">Url for api call.</param>
            <param name="paramsCopy">Parameters of the upload preset.</param>
        </member>
        <member name="P:CloudinaryDotNet.Cloudinary.UploadPresetApiParams.Url">
            <summary>
            Gets url for api call.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Cloudinary.UploadPresetApiParams.ParamsCopy">
            <summary>
            Gets parameters of the upload preset.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Cloudinary.UploadPresetApiParams.HttpMethod">
            <summary>
            Gets http request method.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.CloudinaryConfiguration">
            <summary>
            Struct with Cloudinary configuration parameters.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.CloudinaryConfiguration.CloudName">
            <summary>
            The name of your cloud.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.CloudinaryConfiguration.ApiKey">
            <summary>
            API key.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.CloudinaryConfiguration.ApiSecret">
            <summary>
            API secret.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.CloudinaryConfiguration.AuthToken">
            <summary>
            Authentication token for the token-based authentication.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.CloudinaryConfiguration.LongUrlSignature">
            <summary>
            Defines whether to generate 32 characters length signature for URIs.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Constants">
            <summary>
            Group of the most widely used API constants.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.RESOURCES_API_URL">
            <summary> API URL pattern for resources.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.TAG_API_URL">
            <summary> API URL pattern for tags.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.STREAMING_PROFILE_API_URL">
            <summary> API URL pattern for streaming profiles.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.METADATA_FIELDS_API_URL">
            <summary> API URL pattern for metadata fields.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.METADATA">
            <summary> API URL action name for metadata operations.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.UPDATE_ACESS_MODE">
            <summary> API URL action name for access mode update.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.TAGS_MANGMENT">
            <summary> API URL action name for tags management.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.CONTEXT_MANAGMENT">
            <summary> API URL action name for context management.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.DATASOURCE_MANAGMENT">
            <summary> API URL action name for data source management.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.TAG_PARAM_NAME">
            <summary> Parameter name for tag.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.CONTEXT_PARAM_NAME">
            <summary> Parameter name for context.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.METADATA_PARAM_NAME">
            <summary> Parameter name for metadata.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.PREFIX_PARAM_NAME">
            <summary> Parameter name for prefix.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.PUBLIC_IDS">
            <summary> Parameter name for public IDs.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.COMMAND">
            <summary> Parameter name for command.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.RESOURCE_TYPE_FETCH">
            <summary> Resource type name for fetch.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.RESOURCE_TYPE_IMAGE">
            <summary> Resource type name for image asset.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.RESOURCE_TYPE_VIDEO">
            <summary> Resource type name for video asset.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.RESOURCE_TYPE_ALL">
            <summary> Resource type name for all asset types.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.RESOURCE_TYPE">
            <summary> Parameter name for asset resource type.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.ACTION_NAME_UPLOAD">
            <summary> Action name for upload.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.ACTION_NAME_FETCH">
            <summary> Action name for fetch.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.ACTION_NAME_MULTI">
            <summary> Action name for multi.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.ACTION_NAME_SPRITE">
            <summary> Action name for multi.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.CF_SHARED_CDN">
            <summary> URL for shared CDN.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.OLD_AKAMAI_SHARED_CDN">
            <summary> URL for old Akamai shared CDN.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.AKAMAI_SHARED_CDN">
            <summary> URL for Akamai shared CDN.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.SHARED_CDN">
            <summary> Alias for Akamai shared CDN.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.HEADER_CONTENT_TYPE">
            <summary> HTTP protocol Content-Type header name.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.CONTENT_TYPE_APPLICATION_JSON">
            <summary> HTTP protocol Content-Type header value for application/json.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.PROVISIONING">
            <summary> Part of general API URL pattern for account api.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.ACCOUNTS">
            <summary> Part of general API URL pattern for account api.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.SUB_ACCOUNTS">
            <summary> Sub-accounts resource of account api.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.USERS">
            <summary> Users resource of account api.</summary>
        </member>
        <member name="F:CloudinaryDotNet.Constants.USER_GROUPS">
            <summary> User groups resource of account api.</summary>
        </member>
        <member name="T:CloudinaryDotNet.Core.ICloneable">
            <summary>
            Supports cloning, which creates a new instance of a class with the same value as an existing instance.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Core.ICloneable.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Core.Rectangle">
            <summary>
            Stores a set of four integers that represent the location and size of a rectangle.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Core.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Core.Rectangle"/> struct with the specified location and size.
            </summary>
            <param name="x">the x-coordinate of the upper-left corner of this <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.</param>
            <param name="y">the y-coordinate of the upper-left corner of this <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.</param>
            <param name="width">the width of this <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.</param>
            <param name="height">the height of this <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.</param>
        </member>
        <member name="P:CloudinaryDotNet.Core.Rectangle.Height">
            <summary>
            Gets or sets the height of this <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Core.Rectangle.Width">
            <summary>
            Gets or sets the width of this <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Core.Rectangle.X">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Core.Rectangle.Y">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Core.Rectangle.op_Equality(CloudinaryDotNet.Core.Rectangle,CloudinaryDotNet.Core.Rectangle)">
            <summary>
            Equality operator for two rectangles.
            </summary>
            <param name="left">First rectangle to compare.</param>
            <param name="right">Second rectangle to compare.</param>
            <returns>The computed hashcode.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Core.Rectangle.op_Inequality(CloudinaryDotNet.Core.Rectangle,CloudinaryDotNet.Core.Rectangle)">
            <summary>
            Inequality operator for two rectangles.
            </summary>
            <param name="left">First rectangle to compare.</param>
            <param name="right">Second rectangle to compare.</param>
        </member>
        <member name="M:CloudinaryDotNet.Core.Rectangle.ToString">
            <summary>
            Converts the attributes of this <see cref="T:CloudinaryDotNet.Core.Rectangle"/> to a human-readable string.
            </summary>
            <returns>
            A string that contains the position, width, and height of this <see cref="T:CloudinaryDotNet.Core.Rectangle"/> structure.
            For example, {{X=20, Y=20, Width=100, Height=50}}.
            </returns>
        </member>
        <member name="M:CloudinaryDotNet.Core.Rectangle.Equals(CloudinaryDotNet.Core.Rectangle)">
            <summary>
            Check the equality of two rectangles.
            </summary>
            <param name="other">The rectangle to compare.</param>
            <returns>True - if rectangles are equal. Otherwise false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Core.Rectangle.Equals(System.Object)">
            <summary>
            Check the equality of two rectangles.
            </summary>
            <param name="obj">The rectangle to compare.</param>
            <returns>True - if rectangles are equal. Otherwise false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Core.Rectangle.GetHashCode">
            <summary>
            Compute a hashcode for the rectangle.
            </summary>
            <returns>The computed hashcode.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Crc32">
            <summary>
            Checksum generator using CRC32 algorithm.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Crc32.ComputeChecksum(System.Byte[])">
            <summary>
            Compute checksum for a byte array.
            </summary>
            <param name="bytes">Byte array to compute CRC.</param>
            <returns>Computed checksum.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Crc32.ComputeChecksumBytes(System.Byte[])">
            <summary>
            Compute checksum for a byte array.
            </summary>
            <param name="bytes">Byte array to compute CRC.</param>
            <returns>Computed checksum represented as byte array.</returns>
        </member>
        <member name="T:CloudinaryDotNet.CSource">
            <summary>
            Source definition of the URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.CSource.Source">
            <summary>
            Source part of the URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.CSource.SourceToSign">
            <summary>
            Source part of the URL to be signed.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.CSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.CSource"/> class with a source.
            </summary>
            <param name="source">Source part of the URL.</param>
        </member>
        <member name="M:CloudinaryDotNet.CSource.op_Addition(CloudinaryDotNet.CSource,System.String)">
            <summary>
            Add source value to the source part of the URL.
            </summary>
            <param name="src">Source definition of the URL.</param>
            <param name="value">Source value to add.</param>
            <returns>Updated source definition.</returns>
        </member>
        <member name="M:CloudinaryDotNet.CSource.Add(CloudinaryDotNet.CSource,System.String)">
            <summary>
            Add source value to the source part of the URL.
            </summary>
            <param name="src">Source definition of the URL.</param>
            <param name="value">Source value to add.</param>
            <returns>Updated source definition.</returns>
        </member>
        <member name="T:CloudinaryDotNet.FileDescription">
            <summary>
            Represents a file for uploading to cloudinary.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FileDescription.BufferLength">
            <summary>
            Maximum size of a single chunk of data to be uploaded.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FileDescription.BytesSent">
            <summary>
            Byte sent.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.FileDescription.#ctor(System.String,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.FileDescription"/> class.
            Constructor to upload file from stream.
            </summary>
            <param name="name">Resource name.</param>
            <param name="stream">Stream to read from (will be disposed with this object).</param>
        </member>
        <member name="M:CloudinaryDotNet.FileDescription.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.FileDescription"/> class.
            Constructor to upload file by path specifying explicit filename.
            </summary>
            <param name="name">Resource name.</param>
            <param name="filePath">Either URL (http/https/s3/data) or local path to file.</param>
        </member>
        <member name="M:CloudinaryDotNet.FileDescription.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.FileDescription"/> class.
            Constructor to upload file by path.
            </summary>
            <param name="filePath">Either URL (http/https/s3/data) or local path to file.</param>
        </member>
        <member name="P:CloudinaryDotNet.FileDescription.Stream">
            <summary>
            Gets stream to upload.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.FileDescription.FileName">
            <summary>
            Gets or sets name of the file to upload.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.FileDescription.FilePath">
            <summary>
            Gets filesystem path to the file to upload.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.FileDescription.IsRemote">
            <summary>
            Gets a value indicating whether it is remote (by URL) or local file.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.FileDescription.Eof">
            <summary>
            Gets a value indicating whether the pointer is at the end of file.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.FileDescription.GetFileLength">
            <summary>
            Get file length.
            </summary>
            <returns>The length of file.</returns>
        </member>
        <member name="M:CloudinaryDotNet.FileDescription.Reset(System.Int32)">
            <summary>
            Reset stream buffer length and bytes sent values.
            </summary>
            <param name="bufferSize">(Optional) Size of the buffer.</param>
        </member>
        <member name="T:CloudinaryDotNet.ISignProvider">
            <summary>
            Digital signature provider.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.ISignProvider.SignParameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Generate digital signature for parameters.
            </summary>
            <param name="parameters">The parameters to sign.</param>
            <returns>Generated signature.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ISignProvider.SignUriPart(System.String,System.Boolean)">
            <summary>
            Generate digital signature for part of an URI.
            </summary>
            <param name="uriPart">The part of an URI to sign.</param>
            <param name="isLong">Indicates whether to generate long signature.</param>
            <returns>Generated signature.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Provisioning.AccountProvisioning">
            <summary>
            Account provisioning.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Provisioning.AccountProvisioning.ProvisioningApi">
            <summary>
            Gets Provisioning API object that used by this instance.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.SubAccount(System.String)">
            <summary>
            Retrieves the details of the specified sub-account.
            </summary>
            <param name="subAccountId">The ID of the sub-account.</param>
            <returns>Parsed information about sub-account.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.SubAccountAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Retrieves the details of the specified sub-account asynchronously.
            </summary>
            <param name="subAccountId">The ID of the sub-account.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about sub-account.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.SubAccounts(CloudinaryDotNet.Actions.ListSubAccountsParams)">
            <summary>
            Lists sub-accounts.
            </summary>
            <param name="parameters">Parameters to list sub-accounts.</param>
            <returns>Parsed information about sub-accounts.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.SubAccountsAsync(CloudinaryDotNet.Actions.ListSubAccountsParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists sub-accounts asynchronously.
            </summary>
            <param name="parameters">Parameters to list sub-accounts.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about sub-accounts.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.CreateSubAccount(CloudinaryDotNet.Actions.CreateSubAccountParams)">
            <summary>
            Creates a new sub-account. Any users that have access to all sub-accounts
            will also automatically have access to the new sub-account.
            </summary>
            <param name="parameters">Parameters to create sub-account.</param>
            <returns>Parsed information about created sub-account.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.CreateSubAccountAsync(CloudinaryDotNet.Actions.CreateSubAccountParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Creates a new sub-account asynchronously. Any users that have access to all sub-accounts
            will also automatically have access to the new sub-account.
            </summary>
            <param name="parameters">Parameters to create sub-account.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about created sub-account.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UpdateSubAccount(CloudinaryDotNet.Actions.UpdateSubAccountParams)">
            <summary>
            Updates the specified details of the sub-account.
            </summary>
            <param name="parameters">Parameters to update sub-account.</param>
            <returns>Parsed information about updated sub-account.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UpdateSubAccountAsync(CloudinaryDotNet.Actions.UpdateSubAccountParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates the specified details of the sub-account asynchronously.
            </summary>
            <param name="parameters">Parameters to update sub-account.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about updated sub-account.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.DeleteSubAccount(System.String)">
            <summary>
            Deletes the specified sub-account. Supported only for accounts with fewer than 1000 assets.
            </summary>
            <param name="subAccountId">The ID of the sub-account to delete.</param>
            <returns>Parsed information about deleted sub-account.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.DeleteSubAccountAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes the specified sub-account asynchronously. Supported only for accounts with fewer than 1000 assets.
            </summary>
            <param name="subAccountId">The ID of the sub-account to delete.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about deleted sub-account.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.User(System.String)">
            <summary>
            Returns the user with the specified ID.
            </summary>
            <param name="userId">The ID of the user.</param>
            <returns>Parsed information about sub-account.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UserAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Returns the user with the specified ID asynchronously.
            </summary>
            <param name="userId">The ID of the user.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about sub-account.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.Users(CloudinaryDotNet.Actions.ListUsersParams)">
            <summary>
            Lists users in the account.
            </summary>
            <param name="parameters">Parameters to list users.</param>
            <returns>Parsed information about users.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UsersAsync(CloudinaryDotNet.Actions.ListUsersParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists users in the account asynchronously.
            </summary>
            <param name="parameters">Parameters to list users.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about users.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.CreateUser(CloudinaryDotNet.Actions.CreateUserParams)">
            <summary>
            Creates a new user in the account.
            </summary>
            <param name="parameters">Parameters to create user.</param>
            <returns>Parsed information about created user.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.CreateUserAsync(CloudinaryDotNet.Actions.CreateUserParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Creates a new user in the account asynchronously.
            </summary>
            <param name="parameters">Parameters to create user.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about created user.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UpdateUser(CloudinaryDotNet.Actions.UpdateUserParams)">
            <summary>
            Updates the details of the specified user.
            </summary>
            <param name="parameters">Parameters to update user.</param>
            <returns>Parsed information about updated user.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UpdateUserAsync(CloudinaryDotNet.Actions.UpdateUserParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates the details of the specified user asynchronously.
            </summary>
            <param name="parameters">Parameters to update user.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about updated user.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.DeleteUser(System.String)">
            <summary>
            Deletes an existing user.
            </summary>
            <param name="userId">The ID of the user to delete.</param>
            <returns>Parsed information about deleted user.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.DeleteUserAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes an existing user asynchronously.
            </summary>
            <param name="userId">The ID of the user to delete.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about deleted user.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.CreateUserGroup(CloudinaryDotNet.Actions.CreateUserGroupParams)">
            <summary>
            Creates a new user group.
            </summary>
            <param name="parameters">Parameters to create user group.</param>
            <returns>Parsed information about created user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.CreateUserGroupAsync(CloudinaryDotNet.Actions.CreateUserGroupParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Creates a new user group asynchronously.
            </summary>
            <param name="parameters">Parameters to create user group.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about created user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UpdateUserGroup(CloudinaryDotNet.Actions.UpdateUserGroupParams)">
            <summary>
            Updates the specified user group.
            </summary>
            <param name="parameters">Parameters to update user group.</param>
            <returns>Parsed information about updated user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UpdateUserGroupAsync(CloudinaryDotNet.Actions.UpdateUserGroupParams,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Updates the specified user group asynchronously.
            </summary>
            <param name="parameters">Parameters to update user group.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about updated user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.DeleteUserGroup(System.String)">
            <summary>
            Deletes the user group with the specified ID.
            </summary>
            <param name="groupId">The ID of the user group to delete.</param>
            <returns>Parsed information about deleted user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.DeleteUserGroupAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes the user group with the specified ID asynchronously.
            </summary>
            <param name="groupId">The ID of the user group to delete.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about deleted user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UserGroup(System.String)">
            <summary>
            Retrieves the details of the specified user group.
            </summary>
            <param name="groupId">The ID of the user group to retrieve.</param>
            <returns>Parsed information about user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UserGroupAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Retrieves the details of the specified user group asynchronously.
            </summary>
            <param name="groupId">The ID of the user group to retrieve.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UserGroups">
            <summary>
            Lists user groups in the account.
            </summary>
            <returns>Parsed information about user groups.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UserGroupsAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists user groups in the account asynchronously.
            </summary>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about user groups.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.AddUserToGroup(System.String,System.String)">
            <summary>
            Adds a user to a group with the specified ID.
            </summary>
            <param name="groupId">The ID of the user group.</param>
            <param name="userId">The ID of the user.</param>
            <returns>Parsed information about updated user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.AddUserToGroupAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Adds a user to a group with the specified ID asynchronously.
            </summary>
            <param name="groupId">The ID of the user group.</param>
            <param name="userId">The ID of the user.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about updated user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.RemoveUserFromGroup(System.String,System.String)">
            <summary>
            Removes a user from a group with the specified ID.
            </summary>
            <param name="groupId">The ID of the user group.</param>
            <param name="userId">The ID of the user.</param>
            <returns>Parsed information about updated user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.RemoveUserFromGroupAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Removes a user from a group with the specified ID asynchronously.
            </summary>
            <param name="groupId">The ID of the user group.</param>
            <param name="userId">The ID of the user.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about updated user group.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UsersGroupUsers(System.String)">
            <summary>
            Lists users in the specified user group.
            </summary>
            <param name="groupId">The ID of the user group.</param>
            <returns>Parsed information about users.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.AccountProvisioning.UsersGroupUsersAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Lists users in the specified user group asynchronously.
            </summary>
            <param name="groupId">The ID of the user group.</param>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Parsed information about users.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Provisioning.ProvisioningApi">
            <inheritdoc />
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.ProvisioningApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Provisioning.ProvisioningApi"/> class.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Provisioning.ProvisioningApi.ProvisioningApiAccount">
            <summary>
            Gets cloudinary account API credentials.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Provisioning.ProvisioningApi.AccountApiUrlV">
            <summary>
            Gets cloudinary account API URL.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.ProvisioningApi.CallAccountApiAsync``1(CloudinaryDotNet.HttpMethod,System.String,CloudinaryDotNet.Actions.BaseParams,CloudinaryDotNet.FileDescription,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Call account api asynchronous and return response of specified type asynchronously.
            </summary>
            <param name="method">HTTP method.</param>
            <param name="url">Url for api call.</param>
            <param name="parameters">Parameters for api call.</param>
            <param name="file">File to upload (must be null for non-uploading actions).</param>
            <param name="extraHeaders">Extra headers.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Return response of specified type.</returns>
            <typeparam name="T">Type of the parsed response.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.ProvisioningApi.CallAccountApi``1(CloudinaryDotNet.HttpMethod,System.String,CloudinaryDotNet.Actions.BaseParams,CloudinaryDotNet.FileDescription,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Call account api synchronous and return response of specified type.
            </summary>
            <param name="method">HTTP method.</param>
            <param name="url">Url for api call.</param>
            <param name="parameters">Parameters for api call.</param>
            <param name="file">File to upload (must be null for non-uploading actions).</param>
            <param name="extraHeaders">Extra headers.</param>
            <returns>Return response of specified type.</returns>
            <typeparam name="T">Type of the parsed response.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.ProvisioningApi.GetApiCredentials">
            <summary>
            Gets authentication credentials for provisioning api.
            </summary>
            <returns>Credentials string for authentication.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Provisioning.ProvisioningApiAccount">
            <summary>
            Cloudinary provisioning API account.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.ProvisioningApiAccount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Provisioning.ProvisioningApiAccount"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.ProvisioningApiAccount.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Provisioning.ProvisioningApiAccount"/> class.
            Parameterized constructor.
            </summary>
            <param name="accountUrl">The Cloudinary Account Url.</param>
        </member>
        <member name="M:CloudinaryDotNet.Provisioning.ProvisioningApiAccount.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Provisioning.ProvisioningApiAccount"/> class.
            Parameterized constructor.
            </summary>
            <param name="accountId">Account id.</param>
            <param name="provisioningApiKey">Provisioning API key.</param>
            <param name="provisioningApiSecret">Provisioning API secret.</param>
        </member>
        <member name="P:CloudinaryDotNet.Provisioning.ProvisioningApiAccount.AccountId">
            <summary>
            Gets or sets the account id.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Provisioning.ProvisioningApiAccount.ProvisioningApiKey">
            <summary>
            Gets or sets the provisioning API key.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Provisioning.ProvisioningApiAccount.ProvisioningApiSecret">
            <summary>
            Gets or sets the provisioning API secret.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Search">
            <summary>
            Advanced search provider. Allows you to retrieve information on all the assets in your account with the help of
            query expressions in a Lucene-like query language.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Search.#ctor(CloudinaryDotNet.ApiShared)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Search"/> class.
            </summary>
            <param name="api">Provider of the API calls.</param>
        </member>
        <member name="M:CloudinaryDotNet.Search.Expression(System.String)">
            <summary>
            The (Lucene-like) string expression specifying the search query. If this parameter is not provided then all
            resources are listed (up to max_results).
            </summary>
            <param name="value">Search query expression.</param>
            <returns>The search provider with search query defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Search.MaxResults(System.Int32)">
            <summary>
            The maximum number of results to return. Default 50. Maximum 500.
            </summary>
            <param name="value">Number of results to return.</param>
            <returns>The search provider with maximum number of results defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Search.NextCursor(System.String)">
            <summary>
            Set value of NextCursor.
            </summary>
            <param name="value">The value of NextCursor.</param>
            <returns>The search provider with next cursor defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Search.Direction(System.String)">
            <summary>
            Set value of Direction.
            </summary>
            <param name="value">The value of Direction.</param>
            <returns>The search provider with direction defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Search.Aggregate(System.String)">
            <summary>
            Set name of field (attribute) for which aggregation counts should be calculated and returned in the
            response. Supported parameters: resource_type, type, pixels, duration, format, and bytes.
            </summary>
            <param name="field">The name of field.</param>
            <returns>The search provider with aggregation field defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Search.WithField(System.String)">
            <summary>
            The name of an additional asset attribute to include for each asset in the response.
            Possible value: context, tags, image_metadata and image_analysis.
            </summary>
            <param name="field">The name of field.</param>
            <returns>The search provider with additional asset attribute defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Search.SortBy(System.String,System.String)">
            <summary>
            Set sort parameter. If this parameter is not provided then the results are sorted by descending
            creation date. Valid sort directions are 'asc' or 'desc'.
            </summary>
            <param name="field">The field to sort by.</param>
            <param name="dir">The direction.</param>
            <returns>The search provider with sort parameter defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Search.ToQuery">
            <summary>
            Collect all search parameters to a dictionary.
            </summary>
            <returns>Search parameters as dictionary.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Search.Execute">
            <summary>
            Execute search request.
            </summary>
            <returns>Search response with information about the assets matching the search criteria.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Search.ExecuteAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Execute search request asynchronously.
            </summary>
            <param name="cancellationToken">(Optional) Cancellation token.</param>
            <returns>Search response with information about the assets matching the search criteria.</returns>
        </member>
        <member name="T:CloudinaryDotNet.StringDictionary">
            <summary>
            This class is based on list so is very slow but allows not unique keys.
            This behavior is required for DeleteResources and ListResources commands.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.StringDictionary"/> class.
            Default constructor.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.StringDictionary"/> class from an array of strings.
            </summary>
            <param name="keyValuePairs">Array of strings in form of "key=value". A string could also contain only a key ("key"). Only the first '=' character is used to split string.</param>
        </member>
        <member name="P:CloudinaryDotNet.StringDictionary.Sort">
            <summary>
            Gets or sets a value indicating whether the list should be sorted before enumerating.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.StringDictionary.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:CloudinaryDotNet.StringDictionary.Pairs">
            <summary>
            Gets all keys and values.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.StringDictionary.SafePairs">
            <summary>
            Gets all keys and values with escaped "=" symbol.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.StringDictionary.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:CloudinaryDotNet.StringDictionary.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:CloudinaryDotNet.StringDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:CloudinaryDotNet.StringDictionary.Item(System.String)">
            <summary>
            Gets a value of a first found key or adds a new pair of key and value or updates a value of first found key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.Add(System.String,System.String)">
            <summary>
            Add a new pair of key and value.
            </summary>
            <param name="key">The key to add.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.Add(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Add a new pair of key and a list of strings that is json encoded to a string value.
            </summary>
            <param name="key">The key to add.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value of removed item.</returns>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.
            </returns>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.System#Collections#Generic#IDictionary{System#String,System#String}#Remove(System.String)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </returns>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.TryGetValue(System.String,System.String@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>True if the element is found; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:CloudinaryDotNet.StringDictionary.EscapeSafePairString(System.String)">
            <summary>
            Escape safe pair delimiter.
            </summary>
            <param name="value">Value to escape.</param>
            <returns>Escaped value.</returns>
        </member>
        <member name="T:CloudinaryDotNet.BaseLayer">
            <summary>
            Base abstract non-generic class for creating Layers.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.BaseLayer.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:CloudinaryDotNet.BaseLayer`1">
            <summary>
            Base abstract generic class for creating Layers.
            </summary>
            <typeparam name="T">Type of the layer.</typeparam>
        </member>
        <member name="F:CloudinaryDotNet.BaseLayer`1.m_resourceType">
            <summary>
            The type of the resource.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.BaseLayer`1.m_type">
            <summary>
            The specific type of the asset. Valid values: upload, private and authenticated. Default: upload.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.BaseLayer`1.m_publicId">
            <summary>
            The identifier of the uploaded asset.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.BaseLayer`1.m_format">
            <summary>
            The resource format.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.BaseLayer`1.ResourceType(System.String)">
            <summary>
            Sets the type of resource. Valid values: image, raw, and video.
            </summary>
            <param name="resourceType">Type of the resource.</param>
            <returns>The instance of Layer object with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseLayer`1.Type(System.String)">
            <summary>
            Sets the specific type of asset. Valid values: upload, private and authenticated. Default: upload.
            </summary>
            <param name="type">Type of the asset.</param>
            <returns>The instance of Layer object with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseLayer`1.PublicId(System.String)">
            <summary>
            Sets the public ID of previously uploaded PNG image to add as overlay.
            </summary>
            <param name="publicId">Public ID.</param>
            <returns>The instance of Layer object with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseLayer`1.Format(System.String)">
            <summary>
            Sets a format of asset.
            </summary>
            <param name="format">Asset format.</param>
            <returns>The instance of Layer object with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseLayer`1.AdditionalParams">
            <summary>
            Gets an additional parameters for the layer.
            </summary>
            <returns>A string that represents additional parameters.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseLayer`1.ToString">
            <summary>
            Gets this layer represented as string.
            </summary>
            <returns>The Layer represented as string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseLayer`1.Clone">
            <summary>
            Creates a shallow copy of the current object.
            </summary>
            <returns>A new instance of the current object.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Condition">
            <summary>
            Represents Condition object that can be used in user defined variables and conditional transformations.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Condition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Condition"/> class.
            Default parameterless constructor.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Condition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Condition"/> class.
            The condition string will be translated to a serialized condition.
            </summary>
            <param name="condition">Condition in string format.</param>
        </member>
        <member name="M:CloudinaryDotNet.Condition.Then">
            <summary>
            Terminates the definition of the condition and continue with Transformation definition.
            </summary>
            <returns>The Transformation object this Condition is attached to.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Condition.Width(System.String,System.Object)">
            <summary>
            Gets a predicate for width.
            </summary>
            <param name="operator">Applied operator.</param>
            <param name="value">The compared value.</param>
            <returns>A condition that represents the predicate.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Condition.InitialWidth(System.String,System.Object)">
            <summary>
            Gets a predicate for initial width.
            </summary>
            <param name="operator">Applied operator.</param>
            <param name="value">The compared value.</param>
            <returns>A condition that represents the predicate.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Condition.Height(System.String,System.Object)">
            <summary>
            Gets a predicate for height.
            </summary>
            <param name="operator">Applied operator.</param>
            <param name="value">The compared value.</param>
            <returns>A condition that represents the predicate.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Condition.InitialHeight(System.String,System.Object)">
            <summary>
            Gets a predicate for initial height.
            </summary>
            <param name="operator">Applied operator.</param>
            <param name="value">The compared value.</param>
            <returns>A condition that represents the predicate.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Condition.AspectRatio(System.String,System.String)">
            <summary>
            Gets a predicate for aspect ratio.
            </summary>
            <param name="operator">Applied operator.</param>
            <param name="value">The compared value.</param>
            <returns>A condition that represents the predicate.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Condition.FaceCount(System.String,System.Object)">
            <summary>
            Get a predicate for face count.
            </summary>
            <param name="operator">Applied operator.</param>
            <param name="value">The compared value.</param>
            <returns>A condition that represents the predicate.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Condition.PageCount(System.String,System.Object)">
            <summary>
            Gets a predicate for page count.
            </summary>
            <param name="operator">Applied operator.</param>
            <param name="value">The compared value.</param>
            <returns>A condition that represents the predicate.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Condition.Duration(System.String,System.Object)">
            <summary>
            Gets a predicate for duration.
            </summary>
            <param name="operator">Applied operator.</param>
            <param name="value">The compared value.</param>
            <returns>A condition that represents the predicate.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Condition.InitialDuration(System.String,System.Object)">
            <summary>
            Gets a predicate for initial duration.
            </summary>
            <param name="operator">Applied operator.</param>
            <param name="value">The compared value.</param>
            <returns>A condition that represents the predicate.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Condition.Predicate(System.String,System.String,System.Object)">
            <summary>
            Creates a predicate for binary operators.
            </summary>
            <param name="name">A name of parameter.</param>
            <param name="operator">An operator.</param>
            <param name="value">A value.</param>
            <returns>A condition that represents the predicate.</returns>
        </member>
        <member name="T:CloudinaryDotNet.BaseExpression">
            <summary>
            Base abstract non-generic class for creating Expressions.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.BaseExpression`1">
            <summary>
            Represents expression object that can be used in user defined variables and conditional transformations.
            </summary>
            <typeparam name="T">Type of the expression.</typeparam>
        </member>
        <member name="F:CloudinaryDotNet.BaseExpression`1.operators">
            <summary>
            A dictionary with available operators.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.BaseExpression`1.parameters">
            <summary>
            A dictionary with available parameters.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.BaseExpression`1.m_expressions">
            <summary>
            A list of expressions.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.BaseExpression`1"/> class.
            Default paramaterless constructor.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.BaseExpression`1.Parent">
            <summary>
            Gets parent transformation this expression belongs to.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Normalize(System.String)">
            <summary>
            Normalize an expression string, replace "nice names" with their coded values and spaces with "_"
            e.g. "width > 0" => "w_lt_0".
            </summary>
            <param name="expression">An expression.</param>
            <returns>A parsed expression.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.SetParent(CloudinaryDotNet.Transformation)">
            <summary>
            Set parent transformation.
            </summary>
            <param name="parent">A parent transformation.</param>
            <returns>The expression with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.ToString">
            <summary>
            Get a serialized list of predicates.
            </summary>
            <returns>Serialized list of predicates.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Value(System.Object)">
            <summary>
            Set expression value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Mul(System.Object)">
            <summary>
            Add 'multiply' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Mul">
            <summary>
            Add 'multiply' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Gt(System.Object)">
            <summary>
            Add 'greater than' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Gt">
            <summary>
            Add 'greater than' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.And(System.Object)">
            <summary>
            Add 'and' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.And">
            <summary>
            Add 'and' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Or(System.Object)">
            <summary>
            Add 'or' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Or">
            <summary>
            Add 'or' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Eq(System.Object)">
            <summary>
            Add 'equal to' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Eq">
            <summary>
            Add 'equal to' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Ne(System.Object)">
            <summary>
            Add 'not equal to' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Ne">
            <summary>
            Add 'not equal to' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Lt(System.Object)">
            <summary>
            Add 'less than' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Lt">
            <summary>
            Add 'less than' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Lte(System.Object)">
            <summary>
            Add 'less than or equal to' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Lte">
            <summary>
            Add 'less than or equal to' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Gte(System.Object)">
            <summary>
            Add 'greater than or equal to' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Gte">
            <summary>
            Add 'greater than or equal to' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Div(System.Object)">
            <summary>
            Add 'divide' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Div">
            <summary>
            Add 'divide' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Add(System.Object)">
            <summary>
            Add 'add' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Add">
            <summary>
            Add 'add' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Sub(System.Object)">
            <summary>
            Add 'subtract' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Sub">
            <summary>
            Add 'subtract' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.In">
            <summary>
            Add 'included in' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.In(System.Object)">
            <summary>
            Add 'included in' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Nin">
            <summary>
            Add 'not included in' operation.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Nin(System.Object)">
            <summary>
            Add 'not included in' operation with value.
            </summary>
            <param name="value">The value.</param>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Pow">
            <summary>
            Adds "to the power of" sub-expression to the end of the list
            of already present sub-expressions in this expression instance.
            </summary>
            <returns>The expression with operation added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Pow(System.Object)">
            <summary>
            Utility shortcut method which invokes on this Expression instance method,
            takes its result and invokes method on it. Effectively, invocation of this shortcut results in
            "to the power of value" sub-expression added to the end of current expression instance.
            </summary>
            <param name="value">Value argument for the call.</param>
            <returns>The result of the call.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.GetOperatorReplacement(System.String)">
            <summary>
            Helper method to replace the operator to the Cloudinary URL syntax.
            </summary>
            <param name="value">An operator to replace.</param>
            <returns>An operator replaced to the Cloudinary URL syntax.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.Serialize">
            <summary>
            Serialize a list of predicates.
            </summary>
            <returns>A string that represents serialized predicates list.</returns>
        </member>
        <member name="M:CloudinaryDotNet.BaseExpression`1.GetPattern">
            <summary>
            Get regex pattern for operators and predefined vars as /((operators)(?=[ _])|variables)/.
            </summary>
            <returns>A regex pattern.</returns>
        </member>
        <member name="T:CloudinaryDotNet.CustomFunction">
            <summary>
            Parameters of custom function.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.CustomFunction.Wasm(System.String)">
            <summary>
            Generate a web-assembly custom function param to send to CustomFunction(customFunction) transformation.
            </summary>
            <param name="publicId">The public id of the web-assembly file.</param>
            <returns>A new instance of custom function param.</returns>
        </member>
        <member name="M:CloudinaryDotNet.CustomFunction.Remote(System.String)">
            <summary>
            Generate a remote lambda custom action function to send to CustomFunction(customFunction) transformation.
            </summary>
            <param name="url">The public URL of the aws lambda function.</param>
            <returns>A new instance of custom function param.</returns>
        </member>
        <member name="M:CloudinaryDotNet.CustomFunction.ToString">
            <summary>
            Get string representation of custom function parameters.
            </summary>
            <returns>String with parameters joined with ':'.</returns>
        </member>
        <member name="M:CloudinaryDotNet.CustomFunction.Clone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns> A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="T:CloudinaryDotNet.EagerTransformation">
            <summary>
            Class that represents an Eager transformation.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.EagerTransformation.#ctor(CloudinaryDotNet.Transformation[])">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.EagerTransformation"/> class.
            Creates eager transformation object chained with other transformations.
            </summary>
            <param name="transforms">A list of transformations to chain with.</param>
        </member>
        <member name="M:CloudinaryDotNet.EagerTransformation.#ctor(System.Collections.Generic.List{CloudinaryDotNet.Transformation})">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.EagerTransformation"/> class.
            Creates eager transformation object chained with other transformations.
            </summary>
            <param name="transforms">A list of transformations to chain with.</param>
        </member>
        <member name="M:CloudinaryDotNet.EagerTransformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.EagerTransformation"/> class.
            Creates an empty eager transformation object.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.EagerTransformation.Format">
            <summary>
            Gets or sets a file format for the transformation.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.EagerTransformation.SetFormat(System.String)">
            <summary>
            Set file format for the transformation.
            </summary>
            <param name="format">The file format to set.</param>
            <returns>The transformation with file format defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.EagerTransformation.Generate">
            <summary>
            Get this transformation represented as string.
            </summary>
            <returns>The transformation represented as string.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Expression">
            <summary>
            Represents expression object that can be used in user defined variables and conditional transformations.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Expression.VARIABLE_NAME_REGEX">
            <summary>
            Regular expression to check variable name.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Expression.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Expression"/> class.
            Default parameterless constructor.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Expression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Expression"/> class with name.
            </summary>
            <param name="name">Name of the new expression.</param>
        </member>
        <member name="M:CloudinaryDotNet.Expression.Variable(System.String,System.Object)">
            <summary>
            Define a user defined variable.
            </summary>
            <param name="name">The name of variable.</param>
            <param name="value">The value.</param>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.CheckVariableName(System.String)">
            <summary>
            Check the variable name.
            </summary>
            <param name="name">The name to check.</param>
        </member>
        <member name="M:CloudinaryDotNet.Expression.ValueContainsVariable(System.String)">
            <summary>
            Check if the value contains user defined variable or predefined variable.
            </summary>
            <param name="value">The value to check.</param>
            <returns>True if the value contains the variable; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.Width">
            <summary>
            Predefined variable 'width'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.Height">
            <summary>
            Predefined variable 'height'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.InitialWidth">
            <summary>
            Predefined variable 'initial width'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.InitialHeight">
            <summary>
            Predefined variable 'initial height'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.PageCount">
            <summary>
            Predefined variable 'page count'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.FaceCount">
            <summary>
            Predefined variable 'face count'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.IllustrationScore">
            <summary>
            Predefined variable 'illustration score'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.CurrentPageIndex">
            <summary>
            Predefined variable 'current page index'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.Tags">
            <summary>
            Predefined variable 'tags'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.XOffset">
            <summary>
            Predefined variable 'x-offset'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.YOffset">
            <summary>
            Predefined variable 'y-offset'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.AspectRatio">
            <summary>
            Predefined variable 'aspect ratio'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.AspectRatioOfInitialImage">
            <summary>
            Predefined variable 'aspect ratio of initial image'.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.Duration">
            <summary>
            Predefined variable 'duration'.
            The current duration of the video.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Expression.InitialDuration">
            <summary>
            Predefined variable 'initial duration'.
            The video's initial duration.
            </summary>
            <returns>An expression that represents the variable.</returns>
        </member>
        <member name="T:CloudinaryDotNet.FetchLayer">
            <summary>
            Represents property of the overlay parameter to specify the Url on another image to be added as an overlay.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FetchLayer.m_url">
            <summary>
            The URL to fetch an image for.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.FetchLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.FetchLayer"/> class.
            Default parameterless constructor.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.FetchLayer.Url(System.String)">
            <summary>
            The URL to fetch an image for.
            </summary>
            <param name="url">The image URL.</param>
            <returns>The layer with set parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.FetchLayer.AdditionalParams">
            <summary>
            Get an additional parameters for the fetch layer.
            </summary>
            <returns>A string that represents additional parameters.</returns>
        </member>
        <member name="M:CloudinaryDotNet.FetchLayer.ToString">
            <summary>
            Get this layer represented as string.
            </summary>
            <returns>A string that represents the layer.</returns>
        </member>
        <member name="M:CloudinaryDotNet.FetchLayer.UrlEncode(System.String)">
            <summary>
            Prepare text for Overlay.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.AudioFrequency">
            <summary>
            Audio sample frequency values, in Hz.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF8000">
            <summary>
            8000 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF11025">
            <summary>
            11025 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF16000">
            <summary>
            16000 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF22050">
            <summary>
            22050 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF32000">
            <summary>
            32000 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF37800">
            <summary>
            37800 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF44056">
            <summary>
            44056 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF44100">
            <summary>
            44100 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF47250">
            <summary>
            47250 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF48000">
            <summary>
            48000 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF88200">
            <summary>
            88200 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF96000">
            <summary>
            96000 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF176400">
            <summary>
            176400 Hz
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.AudioFrequency.AF192000">
            <summary>
            192000 Hz
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Gravity">
            <summary>
            The gravity values.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.Center">
            <summary>
            The center of the image. Default.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.NorthWest">
            <summary>
            North west corner (top left).
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.North">
            <summary>
            North center part (top center).
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.NorthEast">
            <summary>
            North east corner (top right).
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.West">
            <summary>
            Middle west part (left).
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.East">
            <summary>
            Middle east part (right).
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.SouthWest">
            <summary>
            South west corner (bottom left).
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.South">
            <summary>
            South center part (bottom center).
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.SouthEast">
            <summary>
            South east corner (bottom right).
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.Auto">
            <summary>
            An intelligent algorithm analyzes and prioritizes the most prominent elements of the image to include.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.XYCenter">
            <summary>
            Set the crop's center of gravity to the given x and y coordinates.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.Face">
            <summary>
            Automatically detect the largest face in an image and aim to make it the center of the cropped image.
            Alternatively, use face coordinates specified by API if available.
            Defaults to the 'north' gravity if no face was detected.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.FaceCenter">
            <summary>
            Same as the 'face' gravity, but defaults to 'center' gravity instead of 'north' if no face is detected.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.FaceAuto">
            <summary>
            Same as the 'face' gravity, but defaults to 'auto' gravity instead of 'north' if no face is detected.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.Faces">
            <summary>
            Automatically detect multiple faces in an image and aim to make them the center of the cropped image.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.FacesCenter">
            <summary>
            Same as the 'faces' gravity, but defaults to 'center' gravity instead of 'north' if no faces are detected.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.FacesAuto">
            <summary>
            Same as the 'faces' gravity, but defaults to 'auto' gravity instead of 'north' if no faces are detected.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.Body">
            <summary>
            Automatically detect the largest body in an image and aim to make it the center of the cropped image.
            Defaults to the 'north' gravity if no body was detected.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.BodyFace">
            <summary>
            Automatically detect the largest body in an image and aim to make it the center of the cropped image.
            Defaults to the 'face' gravity if a full body was not detected.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.Liquid">
            <summary>
            Use liquid rescaling to change the aspect ratio of an image while retaining all important content and
            avoiding unnatural distortions. For more details and guidelines, see liquid gravity.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.OcrText">
            <summary>
            Detect all text elements in an image using the `OCR Text Detection and Extraction` add-on and use the
            detected bounding box coordinates as the basis of the transformation.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.AdvFace">
            <summary>
            Automatically detect the largest face in an image with the `Advanced Facial Attribute Detection` add-on
            and make it the focus of the transformation.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.AdvFaces">
            <summary>
            Automatically detect all the faces in an image with the `Advanced Facial Attribute Detection` add-on and
            make them the focus of the transformation.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.AdvEyes">
            <summary>
            Automatically detect the largest pair of eyes in an image with the `Advanced Facial Attribute Detection`
            add-on and make them the focus of the transformation.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.Custom">
            <summary>
            Use custom coordinates that were specified by the upload or admin API and aim to make it the center
            of the cropped image. Defaults to 'center' gravity if no custom coordinates are available.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.CustomFace">
            <summary>
            Same as the 'custom' gravity, but defaults to 'face' gravity if no custom coordinates are available.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.CustomFaces">
            <summary>
            Same as the 'custom' gravity, but defaults to 'faces' gravity if no custom coordinates are available.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.CustomAdvFace">
            <summary>
            Same as the 'custom' gravity, but defaults to 'adv_face' gravity if no custom coordinates are available.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Gravity.CustomAdvFaces">
            <summary>
            Same as the 'custom' gravity, but defaults to 'adv_faces' gravity if no custom coordinates are available.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Transformation">
            <summary>
            The building blocks for image assets transformation.
            </summary>
            <summary>
            The building blocks for assets transformation.
            </summary>
            <summary>
            The building blocks for video assets transformation.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Width(System.Object)">
            <summary>
            The required width of a transformed image or an overlay. Can be specified separately or together with the
            height value.
            </summary>
            <param name="value">
            Pixels, percents or string. Can also be a decimal value (e.g., 0.2) for percentage based resizing.
            </param>
            <returns>The transformation with width applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Height(System.Object)">
            <summary>
            Set required height of a transformed image or an overlay. Can be specified separately or together with the
            width value.
            </summary>
            <param name="value">
            Can also be a decimal value (e.g., 0.2) for percentage based resizing.
            </param>
            <returns>The transformation with height applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.SetHtmlWidth(System.Object)">
            <summary>
            Set HTML width to transform an uploaded image to a certain dimension and display it within your page in a
            different dimension.
            </summary>
            <param name="value">The HTML width value.</param>
            <returns>The transformation with HTML width applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.SetHtmlHeight(System.Object)">
            <summary>
            Set HTML height to transform an uploaded image to a certain dimension and display it within your page in a
            different dimension.
            </summary>
            <param name="value">The HTML height value.</param>
            <returns>The transformation with HTML height applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Named(System.String[])">
            <summary>
            Add named transformation.
            </summary>
            <param name="value">An array of transformations names.</param>
            <returns>The transformation with name applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.AspectRatio(System.Double)">
            <summary>
            Add the aspect_ratio parameter to resize or crop the image to a new aspect ratio.
            Decimal format (e.g., 1.33 or 2.5).
            </summary>
            <param name="value">A decimal value representing the ratio of the width divided by the height.</param>
            <returns>The transformation with aspect ratio applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.AspectRatio(System.Int32,System.Int32)">
            <summary>
            Add the aspect_ratio parameter to resize or crop the image to a new aspect ratio.
            Format - nom:denom (e.g., 4:3 or 16:9).
            </summary>
            <param name="nom">Signifies the relative width.</param>
            <param name="denom">Signifies the relative height.</param>
            <returns>The transformation with aspect ratio applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.AspectRatio(System.String)">
            <summary>
            Resize or crop the image to a new aspect ratio. This parameter is used together with a specified crop mode
            that determines how the image is adjusted to the new dimensions.
            </summary>
            <param name="value">A string value representing the aspect ratio.</param>
            <returns>The transformation with aspect ratio applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Crop(System.String)">
            <summary>
            A crop mode that determines how to transform the image for fitting into the desired width and height dimensions.
            </summary>
            <param name="value">A string representing the crop value, e.g.: 'scale'.</param>
            <returns>The transformation with crop applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Background(System.String)">
            <summary>
            Set the background color of the image. An opaque color can be set as an RGB hex
            triplet (e.g., '3e2222'), a 3-digit RGB hex (e.g., '777') or a named color (e.g., 'green').
            </summary>
            <param name="value"><see langword="abstract"/>A value of background color.</param>
            <returns>The transformation with background applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Color(System.String)">
            <summary>
            Defines the color to use for various effects.
            </summary>
            <param name="value">A string representing the color value.</param>
            <returns>The transformation with color applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Effect(System.String)">
            <summary>
            Apply a filter or an effect on an image. The value includes the name of the effect and an additional parameter that controls the behavior of the specific effect.
            </summary>
            <param name="value">A string representing name of the effect and its additional parameter.</param>
            <returns>The transformation with added parameter.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Effect(System.String,System.Object)">
            <summary>
            Apply a filter or an effect on an image.
            </summary>
            <param name="effect">The name of the effect.</param>
            <param name="param">An additional parameter that controls the behavior of the specific effect.</param>
            <returns>The transformation with effect applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Angle(System.Int32)">
            <summary>
            Set angle to rotate the image by.
            </summary>
            <param name="value">The value of angle.</param>
            <returns>The transformation with angle applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Angle(System.String[])">
            <summary>
            Apply the multiple rotation values to the image.
            </summary>
            <param name="value">An array of rotation values.</param>
            <returns>The transformation with angles applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Border(System.String)">
            <summary>
            Add a solid border around the image. The value has a CSS-like format: width_style_color.
            </summary>
            <param name="value">A string representing border in CSS-like format.</param>
            <returns>The transformation with border added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Border(System.Int32,System.String)">
            <summary>
            Add a solid border around the image.
            </summary>
            <param name="width">Border width.</param>
            <param name="color">Border color.</param>
            <returns>The transformation with border added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.X(System.Object)">
            <summary>
            Horizontal position for custom-coordinates based cropping and overlay placement.
            </summary>
            <param name="value">Value of horizontal position.</param>
            <returns>The transformation with horizontal position applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Y(System.Object)">
            <summary>
            Vertical position for custom-coordinates based cropping and overlay placement.
            </summary>
            <param name="value">Value of vertical position.</param>
            <returns>The transformation with vertical position applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Radius(System.Object)">
            <summary>
            Defines radius value for corners rounding.
            </summary>
            <param name="value">
            Can be string, number or collection with 1..4 values.
            </param>
            <returns>The transformation with radius defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Radius(CloudinaryDotNet.Radius)">
            <summary>
            Defines radius value for corners rounding.
            </summary>
            <param name="radius">Object for the advanced definition of the radius.</param>
            <returns>The transformation with radius defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Quality(System.Object)">
            <summary>
            Control the JPG compression quality. 1 is the lowest quality and 100 is the highest. The default is the
            original image's quality or 90% if not available. Reducing quality generates JPG images much smaller in
            file size.
            </summary>
            <param name="value">Quality level.</param>
            <returns>The transformation with quality level defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.DefaultImage(System.String)">
            <summary>
            Define the default image placeholder. Can be used in the case that a requested image does not exist.
            </summary>
            <param name="value">The default image name.</param>
            <returns>The transformation with default image defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Gravity(System.String)">
            <summary>
            Decides which part of the image to keep while 'crop', 'pad' and 'fill' crop modes are used. For overlays,
            this decides where to place the overlay.
            </summary>
            <param name="value">
            The gravity value. Use static class <see cref="T:CloudinaryDotNet.Gravity"/> for values.
            </param>
            <returns>The transformation with gravity applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Gravity(System.String,System.String)">
            <summary>
            Decides which part of the image to keep while 'crop', 'pad' and 'fill' crop modes are used. For overlays,
            this decides where to place the overlay.
            </summary>
            <param name="value">The gravity value (e.g. 'faces').</param>
            <param name="param">The gravity parameter (e.g. 'center').</param>
            <returns>The transformation with gravity applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.ColorSpace(System.String)">
            <summary>
            Control the color space used for the delivered image.
            </summary>
            <param name="value">The value of color space. Possible values: 'srgb', 'tinysrgb','cmyk', 'no_cmyk', 'cs_icc:[public_id]'. </param>
            <returns>The transformation with color space applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Prefix(System.String)">
            <summary>
            Add prefix to class names while creating sprites.
            </summary>
            <param name="value">The name of prefix.</param>
            <returns>The transformation with prefix added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Opacity(System.Int32)">
            <summary>
            Manipulate image opacity in order to make the image semi-transparent.
            </summary>
            <param name="value">Opacity level: 100 means opaque, while 0 is completely transparent.</param>
            <returns>The transformation with opacity level defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Overlay(System.String)">
            <summary>
            Add an overlay over the base image.
            </summary>
            <param name="value">A value of the overlay (e.g. 'text:hello').</param>
            <returns>The transformation with overlay added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Overlay(CloudinaryDotNet.BaseLayer)">
            <summary>
            Add an overlay over the base image.
            </summary>
            <param name="value">An object representing the overlay.</param>
            <returns>The transformation with overlay added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Underlay(System.String)">
            <summary>
            Add an underlay image below a base partially-transparent image.
            </summary>
            <param name="value">A value of the underlay (e.g. 'text:hello').</param>
            <returns>The transformation with underlay added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Underlay(CloudinaryDotNet.BaseLayer)">
            <summary>
            Add an underlay image below a base partially-transparent image.
            </summary>
            <param name="value">An object representing the underlay.</param>
            <returns>The transformation with underlay added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.FetchFormat(System.String)">
            <summary>
            Force format conversion to the given image format for remote 'fetch' URLs and auto uploaded images that
            already have a different format as part of their URLs.
            </summary>
            <param name="value">A format the image to convert to while fetching.</param>
            <returns>The transformation with format conversion defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Density(System.Object)">
            <summary>
            Control the density to use while converting a PDF document to images. (range: 50-300, default: 150).
            </summary>
            <param name="value">Dpi value.</param>
            <returns>The transformation with density defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Page(System.Object)">
            <summary>
            Given a multi-page PDF document, generate an image of a single page using the given index.
            </summary>
            <param name="value">Page number or layer name.</param>
            <returns>The transformation with paging defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Delay(System.Object)">
            <summary>
            Controls the time delay between the frames of an animated image, in milliseconds.
            </summary>
            <param name="value">The time delay in milliseconds.</param>
            <returns>The transformation with time delay defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.RawTransformation(System.String)">
            <summary>
            Pass an entire transformation string (including chained transformations) in URL format from an SDK helper
            method that builds a URL, image tag, or video tag. The URL string is appended as is (with no processing or
            validation) to the **end** of any other transformation parameters passed in the same method.
            </summary>
            <param name="value">A raw transformation string.</param>
            <returns>The transformation with raw transformation string applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Flags(System.String[])">
            <summary>
            Set one or more flags that alter the default transformation behavior.
            </summary>
            <param name="value">An array with transformation flags.</param>
            <returns>The transformation with array of transformation flags applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Zoom(System.Int32)">
            <summary>
            How much zoom should be applying when detecting faces for crop, thumb or for overlays. (e.g. 0.5 will cause zoom out of x2 on both axes).
            </summary>
            <param name="value">Zoom percent value represented by integer number.</param>
            <returns>The transformation with zoom percent applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Zoom(System.String)">
            <summary>
            How much zoom should be applying when detecting faces for crop, thumb or for overlays. (e.g. 0.5 will cause zoom out of x2 on both axes).
            </summary>
            <param name="value">Zoom percent value represented by string.</param>
            <returns>The transformation with zoom percent applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Zoom(System.Single)">
            <summary>
            How much zoom should be applying when detecting faces for crop, thumb or for overlays. (e.g. 0.5 will cause zoom out of x2 on both axes).
            </summary>
            <param name="value">Zoom percent value represented by single-precision number.</param>
            <returns>The transformation with zoom percent applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Zoom(System.Double)">
            <summary>
            How much zoom should be applying when detecting faces for crop, thumb or for overlays. (e.g. 0.5 will cause zoom out of x2 on both axes).
            </summary>
            <param name="value">Zoom percent value represented by double-precision number.</param>
            <returns>The transformation with zoom percent applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Dpr(System.Object)">
            <summary>
            Sets Device Pixel Ratio  (float, integer and "auto" values are allowed").
            See http://cloudinary.com/blog/how_to_automatically_adapt_website_images_to_retina_and_hidpi_devices for further info.
            </summary>
            <param name="value">Device pixel ratio.</param>
            <returns>The transformation with DPR defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.ResponsiveWidth(System.Boolean)">
            <summary>
            Whether to enable automatic adaptation of website images.
            See http://cloudinary.com/blog/how_to_automatically_adapt_website_images_to_retina_and_hidpi_devices for further info.
            </summary>
            <param name="value">Flag that determines automatic adaptation usage.</param>
            <returns>The transformation with responsive width defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.IfCondition">
            <summary>
            Start defining a condition, which will be completed with a call. <seealso cref="M:CloudinaryDotNet.Condition.Then"/>
            </summary>
            <returns>Condition.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.IfCondition(System.String)">
            <summary>
            Define a conditional transformation defined by the condition string.
            </summary>
            <param name="condition">A condition string.</param>
            <returns>The transformation for chaining.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.IfCondition(CloudinaryDotNet.BaseExpression)">
            <summary>
            Define a conditional transformation.
            </summary>
            <param name="expression">An expression.</param>
            <returns>The transformation for chaining.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.IfElse">
            <summary>
            Specify a transformation that is applied in the case that the initial condition is evaluated as negative.
            </summary>
            <returns>The transformation for chaining.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.EndIf">
            <summary>
            Set a condition for applying multiple transformations (in the form of chained transformation components).
            Apply EndIf to the last transformation component in the chain.
            </summary>
            <returns>The transformation for chaining.</returns>
        </member>
        <member name="F:CloudinaryDotNet.Transformation.m_transformParams">
            <summary>
            A dictionary of transformation parameters.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Transformation.m_nestedTransforms">
            <summary>
            A list of nested transformations.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Transformation.m_htmlWidth">
            <summary>
            HTML width attribute.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Transformation.m_htmlHeight">
            <summary>
            HTML height attribute.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Transformation"/> class.
            Creates empty transformation object.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.#ctor(System.Collections.Generic.List{CloudinaryDotNet.Transformation})">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Transformation"/> class.
            Creates transformation object chained with other transformations.
            </summary>
            <param name="transforms">List of transformations to chain with.</param>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Transformation"/> class.
            Creates transformation object initialized with array of transformation parameters.
            </summary>
            <param name="transformParams">List of transformation parameters represented as pairs 'name=value'.</param>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Transformation"/> class.
            Creates transformation object from single result of  <seealso cref="T:CloudinaryDotNet.Actions.GetTransformResult"/>.
            </summary>
            <param name="transformParams">
            One can use an element of <seealso cref="P:CloudinaryDotNet.Actions.GetTransformResult.Info"/> array.
            </param>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object}[])">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Transformation"/> class.
            Creates transformation object from results of <seealso cref="T:CloudinaryDotNet.Actions.GetTransformResult"/>.
            </summary>
            <param name="dictionary">One can use <seealso cref="P:CloudinaryDotNet.Actions.GetTransformResult.Info"/> array.</param>
        </member>
        <member name="P:CloudinaryDotNet.Transformation.DefaultDpr">
            <summary>
            Gets or sets default Device Pixel Ratio (float, integer and "auto" values are allowed").
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Transformation.DefaultIsResponsive">
            <summary>
            Gets or sets a value indicating whether to enable automatic adaptation of website images by default.
            See http://cloudinary.com/blog/how_to_automatically_adapt_website_images_to_retina_and_hidpi_devices for
            further info.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Transformation.ResponsiveWidthTransform">
            <summary>
            Gets or sets common responsive width transformation.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Transformation.Params">
            <summary>
            Gets the transformation parameters dictionary.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Transformation.NestedTransforms">
            <summary>
            Gets list of nested transformations.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Transformation.HiDpi">
            <summary>
            Gets a value indicating whether to support a HiDPI devices.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Transformation.IsResponsive">
            <summary>
            Gets a value indicating whether to support a responsive layout.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Transformation.HtmlWidth">
            <summary>
            Gets the HTML width parameter.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Transformation.HtmlHeight">
            <summary>
            Gets the HTML height parameter.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Chain">
            <summary>
            Chain transformation.
            </summary>
            <returns>A transformation for chaining.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Variable(System.String,System.Object)">
            <summary>
            Define a user defined variable.
            </summary>
            <param name="name">The name of variable.</param>
            <param name="value">The value.</param>
            <returns>The transformation with variable added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Variable(System.String,System.String[])">
            <summary>
            Define a user defined string variable.
            </summary>
            <param name="name">The name of variable.</param>
            <param name="values">A list of values.</param>
            <returns>The transformation with variable added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Variables(CloudinaryDotNet.Expression[])">
            <summary>
            Add user defined variables to the transformation.
            </summary>
            <param name="variables">A list of variables.</param>
            <returns>The transformation with variables added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.CustomFunction(CloudinaryDotNet.CustomFunction)">
            <summary>
            Add custom function to the transformation.
            </summary>
            <param name="function">The custom function.</param>
            <returns>The transformation with custom function added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.CustomPreFunction(CloudinaryDotNet.CustomFunction)">
            <summary>
            Add custom pre-function to the transformation.
            </summary>
            <param name="function">The custom pre-function.</param>
            <returns>The transformation with custom pre-function added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Add(System.String,System.Object)">
            <summary>
            Add transformation parameter.
            </summary>
            <param name="key">The name.</param>
            <param name="value">The value.</param>
            <returns>The transformation with parameter added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Generate">
            <summary>
            Get this transformation represented as string.
            </summary>
            <returns>The transformation represented as string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.GenerateThis">
            <summary>
            Generate transformation string.
            </summary>
            <returns>Generated transformation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.ToString">
            <summary>
            Get this transformation represented as string.
            </summary>
            <returns>The transformation represented as string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Clone">
            <summary>
            Get a deep cloned copy of this transformation.
            </summary>
            <returns>A deep cloned copy of this transformation.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.CloudinaryDotNet#Core#ICloneable#Clone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns> A new object that is a deep copy of this instance. </returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.VideoCodec(System.String[])">
            <summary>
            The video codec (with video profile and level if relevant).
            </summary>
            <param name="codecParams">Parameters of the video codec. Use the syntax: {codec}[:{profile}:[{level}]].</param>
            <returns>The transformation with video codec applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.VideoCodec(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            The video codec (with video profile and level if relevant).
            </summary>
            <param name="codecParams">Dictionary with parameters of the video codec. E.g. codec: h264.</param>
            <returns>The transformation with video codec applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Fps(System.String)">
            <summary>
            Control the range of acceptable FPS (Frames Per Second) to ensure that video (even when optimized) is
            delivered with an expected fps level (helps with sync to audio).
            </summary>
            <param name="value">Value of the frame rate.</param>
            <returns>The transformation with FPS value applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Fps(System.Double)">
            <summary>
            Control the range of acceptable FPS (Frames Per Second) to ensure that video (even when optimized) is
            delivered with an expected fps level (helps with sync to audio).
            </summary>
            <param name="value">Value of the frame rate.</param>
            <returns>The transformation with FPS value applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Fps(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Control the range of acceptable FPS (Frames Per Second) to ensure that video (even when optimized) is
            delivered with an expected fps level (helps with sync to audio).
            </summary>
            <param name="min">Minimum value of the range.</param>
            <param name="max">Maximum value of the range.</param>
            <returns>The transformation with FPS value applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Fps(System.String,System.String)">
            <summary>
            Control the range of acceptable FPS (Frames Per Second) to ensure that video (even when optimized) is
            delivered with an expected fps level (helps with sync to audio).
            </summary>
            <param name="min">Minimum value of the range.</param>
            <param name="max">Maximum value of the range.</param>
            <returns>The transformation with FPS value applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.AudioCodec(System.String)">
            <summary>
            Control the audio codec or remove the audio channel.
            </summary>
            <param name="codec">Audio codec to set. Use 'none' to remove the audio channel.</param>
            <returns>The transformation with audio codec applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.BitRate(System.Int32)">
            <summary>
            Advanced control of video bitrate in bits per second.
            </summary>
            <param name="bitRate">Number of bits per second as an integer (max: 500000).</param>
            <returns>The transformation with bit rate applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.BitRate(System.String)">
            <summary>
            Advanced control of video bitrate in bits per second.
            </summary>
            <param name="bitRate">Number of bits per second as a string, supporting k and m for kilobits and megabits
            respectively e.g., 500k or 1m. </param>
            <returns>The transformation with bit rate applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.AudioFrequency(System.Int32)">
            <summary>
            Control audio sample frequency.
            </summary>
            <param name="frequency">An integer value in Hz and can only take one of the following values: 8000, 11025,
            16000, 22050, 32000, 37800, 44056, 44100, 47250, 48000, 88200, 96000, 176400 or 192000.</param>
            <returns>The transformation with audio frequency defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.AudioFrequency(System.String)">
            <summary>
            Control audio sample frequency.
            </summary>
            <param name="frequency">A string value in Hz and can only take one of the following values: 8000, 11025,
            16000, 22050, 32000, 37800, 44056, 44100, 47250, 48000, 88200, 96000, 176400 or 192000.</param>
            <returns>The transformation with audio frequency defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.AudioFrequency(CloudinaryDotNet.AudioFrequency)">
            <summary>
            Control audio sample frequency.
            </summary>
            <param name="frequency">An enum value, that represents frequency value in Hz.</param>
            <returns>The transformation with audio frequency defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.VideoSampling(System.String)">
            <summary>
            Relevant when converting videos to animated GIF or WebP format. If not specified, the resulting GIF or WebP
            samples the whole video (up to 400 frames, at up to 10 frames per second).
            </summary>
            <param name="value">Value of the video sampling setting.</param>
            <returns>The transformation with video sampling defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.VideoSamplingFrames(System.Int32)">
            <summary>
            Relevant when converting videos to animated GIF or WebP format. If not specified, the resulting GIF or WebP
            samples the whole video (up to 400 frames, at up to 10 frames per second).
            </summary>
            <param name="value">The total number of frames to sample from the original video.</param>
            <returns>The transformation with video sampling defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.VideoSamplingSeconds(System.Int32)">
            <summary>
            Relevant when converting videos to animated GIF or WebP format. If not specified, the resulting GIF or WebP
            samples the whole video (up to 400 frames, at up to 10 frames per second).
            </summary>
            <param name="value">The number of seconds between each frame to sample from the original video.</param>
            <returns>The transformation with video sampling defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.VideoSamplingSeconds(System.Single)">
            <summary>
            Relevant when converting videos to animated GIF or WebP format. If not specified, the resulting GIF or WebP
            samples the whole video (up to 400 frames, at up to 10 frames per second).
            </summary>
            <param name="value">The number of seconds between each frame to sample from the original video.</param>
            <returns>The transformation with video sampling defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.VideoSamplingSeconds(System.Double)">
            <summary>
            Relevant when converting videos to animated GIF or WebP format. If not specified, the resulting GIF or WebP
            samples the whole video (up to 400 frames, at up to 10 frames per second).
            </summary>
            <param name="value">The number of seconds between each frame to sample from the original video.</param>
            <returns>The transformation with video sampling defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.StartOffset(System.String)">
            <summary>
            Offset in seconds of a video. The start of the video to be kept after trimming.
            </summary>
            <param name="value">String representing value of.</param>
            <returns>The transformation with start offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.StartOffset(System.Single)">
            <summary>
            Offset in seconds of a video. The start of the video to be kept after trimming.
            </summary>
            <param name="value">Float representing seconds.</param>
            <returns>The transformation with start offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.StartOffset(System.Double)">
            <summary>
            Offset in seconds of a video. The start of the video to be kept after trimming.
            </summary>
            <param name="value">Double representing seconds.</param>
            <returns>The transformation with start offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.StartOffsetPercent(System.Single)">
            <summary>
            Offset in percent of a video. The start of the video to be kept after trimming.
            </summary>
            <param name="value">Float representing a percent value.</param>
            <returns>The transformation with start offset percent defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.StartOffsetPercent(System.Double)">
            <summary>
            Offset in percent of a video. The start of the video to be kept after trimming.
            </summary>
            <param name="value">Double representing a percent value.</param>
            <returns>The transformation with start offset percent defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.StartOffsetAuto">
            <summary>
            Automatically selects a suitable frame from the first few seconds of the video (only relevant for
            generating image thumbnails).
            </summary>
            <returns>The transformation with auto start offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.EndOffset(System.String)">
             <summary>
             Offset in seconds or percent of a video, used to specify the end of the video to be kept after trimming or
             when an overlay ends displaying.
            
             Normally used together with the start_offset and duration parameters.
             </summary>
             <param name="value">String representing an end_offset value.</param>
             <returns>The transformation with end offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.EndOffset(System.Single)">
             <summary>
             Offset in seconds or percent of a video, used to specify the end of the video to be kept after trimming or
             when an overlay ends displaying.
            
             Normally used together with the start_offset and duration parameters.
             </summary>
             <param name="value">Float representing an end_offset value.</param>
             <returns>The transformation with end offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.EndOffset(System.Double)">
             <summary>
             Offset in seconds or percent of a video, used to specify the end of the video to be kept after trimming or
             when an overlay ends displaying.
            
             Normally used together with the start_offset and duration parameters.
             </summary>
             <param name="value">Double representing an end_offset value.</param>
             <returns>The transformation with end offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.EndOffsetPercent(System.Single)">
             <summary>
             Offset in percent of a video, used to specify the end of the video to be kept after trimming or
             when an overlay ends displaying.
            
             Normally used together with the start_offset and duration parameters.
             </summary>
             <param name="value">Float representing an end_offset value.</param>
             <returns>The transformation with end offset percent defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.EndOffsetPercent(System.Double)">
             <summary>
             Offset in percent of a video, used to specify the end of the video to be kept after trimming or
             when an overlay ends displaying.
            
             Normally used together with the start_offset and duration parameters.
             </summary>
             <param name="value">Double representing an end_offset value.</param>
             <returns>The transformation with end offset percent defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Offset(System.String)">
             <summary>
             Set a shortcut to set video cutting using a combination of start_offset and end_offset values.
            
             Offset in seconds or percent of a video.
             </summary>
             <param name="value">String representing an offset value.</param>
             <returns>The transformation with offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Offset(System.String[])">
             <summary>
             Set a shortcut to set video cutting using a combination of start_offset and end_offset values.
            
             Offset in seconds or percent of a video.
             </summary>
             <param name="value">Range of strings representing an offset value.</param>
             <returns>The transformation with offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Offset(System.Single[])">
             <summary>
             Set a shortcut to set video cutting using a combination of start_offset and end_offset values.
            
             Offset in seconds or percent of a video.
             </summary>
             <param name="value">Range of floats representing an offset value.</param>
             <returns>The transformation with offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Offset(System.Double[])">
             <summary>
             Set a shortcut to set video cutting using a combination of start_offset and end_offset values.
            
             Offset in seconds or percent of a video.
             </summary>
             <param name="value">Range of doubles representing an offset value.</param>
             <returns>The transformation with offset defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Duration(System.String)">
             <summary>
             Set the duration the video/overlay displays.
            
             Offset in seconds or percent of a video, normally used together with the start_offset and end_offset
             parameters.
             </summary>
             <param name="value">String representing a duration value.</param>
             <returns>The transformation with duration defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Duration(System.Single)">
             <summary>
             Set the duration the video/overlay displays.
            
             Offset in seconds or percent of a video, normally used together with the start_offset and end_offset
             parameters.
             </summary>
             <param name="value">Float representing a duration value.</param>
             <returns>The transformation with duration defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Duration(System.Double)">
             <summary>
             Set the duration the video/overlay displays.
            
             Offset in seconds or percent of a video, normally used together with the start_offset and end_offset
             parameters.
             </summary>
             <param name="value">Double representing a duration value.</param>
             <returns>The transformation with duration defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.DurationPercent(System.Single)">
             <summary>
             Set the duration the video/overlay displays.
            
             Offset in percent of a video, normally used together with the start_offset and end_offset
             parameters.
             </summary>
             <param name="value">Float representing a duration value.</param>
             <returns>The transformation with duration percent defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.DurationPercent(System.Double)">
             <summary>
             Set the duration the video/overlay displays.
            
             Offset in percent of a video, normally used together with the start_offset and end_offset
             parameters.
             </summary>
             <param name="value">Double representing a duration value.</param>
             <returns>The transformation with duration percent defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.KeyframeInterval(System.Int32)">
            <summary>
            Explicitly sets the keyframe interval (in seconds) of the delivered video.
            </summary>
            <param name="value">Int representing the time between keyframes.</param>
            <returns>The transformation with keyframe interval defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.KeyframeInterval(System.Single)">
            <summary>
            Explicitly sets the keyframe interval (in seconds) of the delivered video.
            </summary>
            <param name="value">Float representing the time between keyframes.</param>
            <returns>The transformation with keyframe interval defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.KeyframeInterval(System.String)">
            <summary>
            Explicitly sets the keyframe interval (in seconds) of the delivered video.
            </summary>
            <param name="value">String representing the time between keyframes.</param>
            <returns>The transformation with keyframe interval defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.StreamingProfile(System.String)">
            <summary>
            Set the name of the streaming profile to apply to an HLS or MPEG-DASH adaptive bitrate streaming video.
            </summary>
            <param name="value">The name of streaming profile.</param>
            <returns>The transformation with streaming profile applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.VideoSamplingSeconds(System.Object)">
            <summary>
            Relevant when converting videos to animated GIF or WebP format. If not specified, the resulting GIF or WebP
            samples the whole video (up to 400 frames, at up to 10 frames per second).
            </summary>
            <param name="value">The number of seconds between each frame to sample from the original video.</param>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.StartOffsetPercent(System.Object)">
            <summary>
            Offset in percent of a video. The start of the video to be kept after trimming.
            </summary>
            <param name="value">Object representing a percent value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.EndOffsetPercent(System.Object)">
             <summary>
             Offset in percent of a video, used to specify the end of the video to be kept after trimming or
             when an overlay ends displaying.
            
             Normally used together with the start_offset and duration parameters.
             </summary>
             <param name="value">Object representing an end_offset value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.Offset(System.Object[])">
             <summary>
             Set a shortcut to set video cutting using a combination of start_offset and end_offset values.
            
             Offset in seconds or percent of a video.
             </summary>
             <param name="value">Range of objects representing an offset value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Transformation.DurationPercent(System.Object)">
             <summary>
             Set the duration the video/overlay displays.
            
             Offset in percent of a video, normally used together with the start_offset and end_offset
             parameters.
             </summary>
             <param name="value">Object representing a duration value.</param>
        </member>
        <member name="T:CloudinaryDotNet.Layer">
            <summary>
            Common not abstract class for Layers.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.Radius">
            <summary>
            Round the specified corners of an image by specifying 1-4 pixel values.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Radius.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Radius"/> class.
            Defines radius value for corners rounding (in pixels).
            Or specify 'max' to make the image a perfect circle or oval (ellipse).
            </summary>
            <param name="value">Can be string, number, float or collection with 1..4 values.</param>
            <exception cref="T:System.ArgumentNullException">The value cannot be null.</exception>/>
        </member>
        <member name="M:CloudinaryDotNet.Radius.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Radius"/> class.
            Defines radius value for corners rounding (in pixels).
            Or specify 'max' to make the image a perfect circle or oval (ellipse).
            </summary>
            <param name="value">
            Symmetrical. All four corners are rounded equally according to the specified value.
            </param>
            <exception cref="T:System.ArgumentNullException">The value cannot be null.</exception>/>
        </member>
        <member name="M:CloudinaryDotNet.Radius.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Radius"/> class.
            Defines radius value for corners rounding (in pixels).
            </summary>
            <param name="value">
            Symmetrical. All four corners are rounded equally according to the specified value.
            </param>
            <exception cref="T:System.ArgumentNullException">The value cannot be null.</exception>/>
        </member>
        <member name="M:CloudinaryDotNet.Radius.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Radius"/> class.
            Defines radius value for corners rounding (in pixels).
            </summary>
            <param name="value">
            Symmetrical. All four corners are rounded equally according to the specified value.
            </param>
            <exception cref="T:System.ArgumentNullException">The value cannot be null.</exception>/>
        </member>
        <member name="M:CloudinaryDotNet.Radius.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Radius"/> class.
            Defines radius value for corners rounding (in pixels).
            </summary>
            <param name="topLeftAndBottomRight">Top-left and bottom-right corners.</param>
            <param name="topRightAndBottomLeft">Top-right and bottom-left corners.</param>
            <exception cref="T:System.ArgumentNullException">Both arguments cannot be null.</exception>/>
        </member>
        <member name="M:CloudinaryDotNet.Radius.#ctor(System.Object,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Radius"/> class.
            Defines radius value for corners rounding (in pixels).
            </summary>
            <param name="topLeft">Top-left corner.</param>
            <param name="topRightAndBottomLeft">Top-right and bottom-left corners.</param>
            <param name="bottomRight">Bottom-right corner.</param>
            <exception cref="T:System.ArgumentNullException">None of the arguments can be null.</exception>/>
        </member>
        <member name="M:CloudinaryDotNet.Radius.#ctor(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Radius"/> class.
            Defines radius value for corners rounding (in pixels).
            The rounding for each corner is specified separately, in clockwise order, starting with the top-left.
            </summary>
            <param name="topLeft">Top-left corner.</param>
            <param name="topRight">Top-right corner.</param>
            <param name="bottomRight">Bottom-right corner.</param>
            <param name="bottomLeft">Bottom-left corner.</param>
            <exception cref="T:System.ArgumentNullException">None of the arguments can be null.</exception>/>
        </member>
        <member name="M:CloudinaryDotNet.Radius.Clone">
            <summary>
            Creates a new Radius object that is a copy of the current instance.
            </summary>
            <returns>A new Radius object that is a copy of this instance.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Radius.CloudinaryDotNet#Core#ICloneable#Clone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns> A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Radius.ToString">
            <inheritdoc />
        </member>
        <member name="M:CloudinaryDotNet.Radius.Normalize(System.Object)">
            <summary>
            Parse provided radius value and make it normalized.
            </summary>
            <param name="value">Can be string, number, float or collection with 1..4 values.</param>
            <exception cref="T:System.ArgumentException">The value cannot be null.</exception>/>
        </member>
        <member name="T:CloudinaryDotNet.ResponsiveBreakpoint">
            <summary>
            Allows to generate images for your responsive website in various width dimensions,
            and to define the minimum file size step (performance budget).
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.ResponsiveBreakpoint"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.IsCreateDerived">
            <summary>
            Get value of the create_derived flag.
            </summary>
            <returns>True if derived images are to be created; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.CreateDerived(System.Boolean)">
            <summary>
            Set create_derived flag.
            If true, create and keep the derived images of the selected breakpoints during the API call.
            If false, images generated during the analysis process are thrown away.
            </summary>
            <param name="createDerived">Flag that determines whether derived images are created.</param>
            <returns>The responsive breakpoint with flag set.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.Transformation(CloudinaryDotNet.Transformation)">
            <summary>
            The base transformation to first apply to the image before finding the best breakpoints.
            </summary>
            <param name="transformation">Transformation to base on.</param>
            <returns>The responsive breakpoint with the transformation applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.MaxWidth">
            <summary>
            Get maximal width in pixels.
            </summary>
            <returns>Integer value that represents maximum width.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.MaxWidth(System.Int32)">
            <summary>
            The maximum width needed for this image. If specifying a width bigger than the original image, the width
            of the original image is used instead. Default: 1000.
            </summary>
            <param name="maxWidth">Maximum width in pixels.</param>
            <returns>The responsive breakpoint with maximum width defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.MinWidth">
            <summary>
            Get minimum width in pixels.
            </summary>
            <returns>Integer value that represents minimum width.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.MinWidth(System.Int32)">
            <summary>
            Set the minimum width needed for this image. Default: 50.
            </summary>
            <param name="minWidth">Minimum width in pixels.</param>
            <returns>The responsive breakpoint with minimum width defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.BytesStep">
            <summary>
            Get minimum number of bytes between two consecutive breakpoints (images).
            </summary>
            <returns>Integer value that represents bytes step.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.BytesStep(System.Int32)">
            <summary>
            Set the minimum number of bytes between two consecutive breakpoints (images). Default: 20000.
            </summary>
            <param name="bytesStep">File size step in bytes.</param>
            <returns>Breakpoint with bytes step defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.MaxImages">
            <summary>
            Get maximum number of breakpoints(images) to find.
            </summary>
            <returns>Integer value that represents maximum number of images.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.MaxImages(System.Int32)">
            <summary>
            Set the maximum number of breakpoints to find, between 3 and 200. This means that there might be size
            differences bigger than the given bytes_step value between consecutive images. Default: 20.
            </summary>
            <param name="maxImages">Maximum number of breakpoints to find.</param>
            <returns>Breakpoint with maximum number of images defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.Format">
            <summary>
            Get the file extension of the derived resources to the format indicated.
            </summary>
            <returns>A string that represents file extension.</returns>
        </member>
        <member name="M:CloudinaryDotNet.ResponsiveBreakpoint.Format(System.String)">
            <summary>
            Sets the file extension of the derived resources to the format indicated.
            </summary>
            <param name="format">File extension of the derived resources.</param>
            <returns>Breakpoint with file extension defined.</returns>
        </member>
        <member name="T:CloudinaryDotNet.SubtitlesLayer">
            <summary>
            Represents property of the overlay parameter ( l_subtitles: in URLs),
            followed by the SRT file name (including the .srt extension).
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.SubtitlesLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.SubtitlesLayer"/> class.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.FontAntialiasing">
            <summary>
            Type of font antialiasing.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FontAntialiasing.None">
            <summary>
            Use a bi-level alpha mask.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FontAntialiasing.Gray">
            <summary>
            Perform single-color antialiasing. For example, using shades of gray for black text on a white background.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FontAntialiasing.Subpixel">
            <summary>
            Perform antialiasing by taking advantage of the order of subpixel elements on devices such as LCD panels.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FontAntialiasing.Fast">
            <summary>
            Some antialiasing is performed, but speed is prioritized over quality.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FontAntialiasing.Good">
            <summary>
            Antialiasing that balances quality and performance.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FontAntialiasing.Best">
            <summary>
            Renders at the highest quality, sacrificing speed if necessary.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.FontHinting">
            <summary>
            Type of font hinting.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FontHinting.None">
            <summary>
            Do not hint outlines.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FontHinting.Slight">
            <summary>
            Hint outlines slightly to improve contrast while retaining good fidelity to the original shapes.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FontHinting.Medium">
            <summary>
            Hint outlines with medium strength, providing a compromise between fidelity to the original shapes and
            contrast.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.FontHinting.Full">
            <summary>
            Hint outlines to the maximize contrast.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.TextLayer">
            <summary>
            Represents property of the overlay parameter (l_text: in URLs) for placing text as an overlay.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_text">
            <summary>
            The text to generate an image for.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_fontFamily">
            <summary>
            Required name of the font family. e.g. "arial".
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_fontSize">
            <summary>
            Font size in pixels. Default: 12.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_fontWeight">
            <summary>
            Whether to use a "normal" or a "bold" font. Default: "normal".
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_fontStyle">
            <summary>
            Whether to use a "normal" or an "italic" font style. Default: "normal".
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_fontAntialiasing">
            <summary>
            Type of font antialiasing to use.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_fontHinting">
            <summary>
            Type of font hinting to use.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_textDecoration">
            <summary>
            Text decoration: underline or strikethrough. Default: "none".
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_textAlign">
            <summary>
            Text alignment: left, center, right, end, start or justify. Default: "left".
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_stroke">
            <summary>
            Font Stroke(border) for the text. Possible values: "none" or "stroke". Default: "none".
            Set the color and weight of the stroke with the border parameter.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_letterSpacing">
            <summary>
            Spacing between the letters in pixels. Can be a positive or negative, integer or decimal value.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.TextLayer.m_lineSpacing">
            <summary>
            Spacing between the lines in pixels (only relevant for multi-line text).
            Can be a positive or negative, integer or decimal value.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.TextLayer"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.TextLayer"/> class with text.
            </summary>
            <param name="text">The text to generate an image for.</param>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.ResourceType(System.String)">
            <summary>
            Overridden method. Restricted to use for text layers.
            </summary>
            <param name="resourceType">Type of the resource.</param>
            <returns>The layer with parameter applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.Type(System.String)">
            <summary>
            Overridden method. Restricted to use for text layers.
            </summary>
            <param name="type">Type of the asset.</param>
            <returns>The layer with parameter applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.Format(System.String)">
            <summary>
            Overridden method. Restricted to use for text layers.
            </summary>
            <param name="format">Asset format.</param>
            <returns>The layer with parameter applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.Text(System.String)">
            <summary>
            Set the text to generate an image for.
            </summary>
            <param name="text">Text to generate an image for.</param>
            <returns>The layer with text applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.FontAntialiasing(CloudinaryDotNet.FontAntialiasing)">
            <summary>
            Type of font antialiasing to use.
            </summary>
            <param name="value">One of the values of <see cref="M:CloudinaryDotNet.TextLayer.FontAntialiasing(CloudinaryDotNet.FontAntialiasing)"/> enum.</param>
            <returns>The layer with font antialiasing applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.FontHinting(CloudinaryDotNet.FontHinting)">
            <summary>
            Type of font hinting to use.
            </summary>
            <param name="value">One of the values of <see cref="M:CloudinaryDotNet.TextLayer.FontHinting(CloudinaryDotNet.FontHinting)"/> enum.</param>
            <returns>The layer with font hinting applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.FontFamily(System.String)">
            <summary>
            Required name of the font family. e.g. "arial".
            </summary>
            <param name="fontFamily">A string representing the font family.</param>
            <returns>The layer with font family defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.FontSize(System.Int32)">
            <summary>
            Font size in pixels. Default: 12.
            </summary>
            <param name="fontSize">Font size in pixels.</param>
            <returns>The layer with font size defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.FontWeight(System.String)">
            <summary>
            Whether to use a "normal" or a "bold" font. Default: "normal".
            </summary>
            <param name="fontWeight">A string representing the font weight.</param>
            <returns>The layer with font weight defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.FontStyle(System.String)">
            <summary>
            Whether to use a "normal" or an "italic" font style. Default: "normal".
            </summary>
            <param name="fontStyle">A string representing the font style.</param>
            <returns>The layer with font style defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.TextDecoration(System.String)">
            <summary>
            Text decoration: underline or strikethrough. Default: "none".
            </summary>
            <param name="textDecoration">A string representing the text decoration.</param>
            <returns>The layer with text decoration applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.TextAlign(System.String)">
            <summary>
            Text alignment: left, center, right, end, start or justify. Default: "left".
            </summary>
            <param name="textAlign">A string representing the text alignment.</param>
            <returns>The layer with text align applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.Stroke(System.String)">
            <summary>
            Font Stroke(border) for the text. Possible values: "none" or "stroke". Default: "none".
            Set the color and weight of the stroke with the border parameter.
            </summary>
            <param name="stroke">A string representing the font stroke.</param>
            <returns>The layer with font stroke defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.LetterSpacing(System.String)">
            <summary>
            Spacing between the letters in pixels. Can be a positive or negative, integer or decimal value.
            </summary>
            <param name="letterSpacing">A string representing spacing between letters.</param>
            <returns>The layer with letter spacing defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.LineSpacing(System.String)">
            <summary>
            Spacing between the lines in pixels (only relevant for multi-line text).
            Can be a positive or negative, integer or decimal value.
            </summary>
            <param name="lineSpacing">A string representing spacing between lines.</param>
            <returns>The layer with line spacing defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.AdditionalParams">
            <summary>
            Get an additional parameters for the text layer.
            </summary>
            <returns>A string that represents additional parameters.</returns>
        </member>
        <member name="M:CloudinaryDotNet.TextLayer.OverlayTextEncode(System.String)">
            <summary>
            Prepare text for Overlay.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.VideoCodec">
            <summary>
            Video codecs.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.VideoCodec.Auto">
            <summary>
            Auto normalize and optimize the video for web viewing.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.VideoCodec.Vp8">
            <summary>
            Video codec 'vp8'.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.VideoCodec.Vp9">
            <summary>
            Video codec 'vp9'.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.VideoCodec.Prores">
            <summary>
            Video codec 'prores'.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.VideoCodec.H264">
            <summary>
            Video codec 'h264'.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.VideoCodec.H265">
            <summary>
            Video codec 'h265'.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.VideoCodec.Theora">
            <summary>
            Video codec 'theora'.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.VideoLayer">
            <summary>
            Represents the video parameter (l_video: in URLs) to specify the name of another
            uploaded video to be added as an overlay.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.VideoLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.VideoLayer"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.VideoLayer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.VideoLayer"/> class with public ID.
            </summary>
            <param name="publicId">Public ID of a previously uploaded PNG image.</param>
        </member>
        <member name="M:CloudinaryDotNet.VideoLayer.ResourceType(System.String)">
            <summary>
            ResourceType for video layers. Not allowed to modify.
            </summary>
            <param name="resourceType">Type of the resource.</param>
            <returns>The layer with parameter applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.VideoLayer.Type(System.String)">
            <summary>
            Type for video layer. Not allowed to modify.
            </summary>
            <param name="type">Type of the asset.</param>
            <returns>The layer with parameter applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.VideoLayer.Format(System.String)">
            <summary>
            Format for video layer. Not allowed to modify.
            </summary>
            <param name="format">Format of the asset.</param>
            <returns>The layer with parameter applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.VideoLayer.AdditionalParams">
            <summary>
            Get an additional parameters for the text layer.
            </summary>
            <returns>A string that represents additional parameters.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Url">
            <summary>
            The building blocks for generating an https delivery URL for assets.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.DefaultVideoSources">
            <summary>
            Recommended sources for video tag.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.CL_BLANK">
            <summary>
            Blank placeholder image that is displayed until the image is loaded.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.DEFAULT_VIDEO_SOURCE_TYPES">
            <summary>
            Default video source types.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.VIDEO_EXTENSION_RE">
            <summary>
            Regular expression to match video source types extensions.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_signProvider">
            <summary>
            Digital signature provider.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_AuthToken">
            <summary>
            Authentication token for the token-based authentication.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_cloudName">
            <summary>
            The cloud name from your account details.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_cloudinaryAddr">
            <summary>
            The cloud URL address to access the resources.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_apiVersion">
            <summary>
            Version of the cloudinary API.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_shorten">
            <summary>
            Whether to use shortened URL when possible.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_secure">
            <summary>
            Force BuildImageTag to always use HTTPS URLs.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_usePrivateCdn">
            <summary>
            Set this parameter to true if you are an Advanced plan user with a private CDN distribution.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_signed">
            <summary>
            Set this parameter to true to include the signed part to the Url.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_longUrlSignature">
            <summary>
            Set this parameter to true to generate a SHA-256 signature and to use its first 32 characters as the signed part of the Url.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_useRootPath">
            <summary>
            With Root Path URL feature set to true, the resource type and type parameters are set to the default values
            'image' and 'upload' respectively, which means that any URL without the resource type and type parameters
            will automatically default to using those values.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_suffix">
            <summary>
            A descriptive suffix to add to the Public ID in the delivery Url.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_privateCdn">
            <summary>
            Private CDN prefix to be added to the URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_version">
            <summary>
            Version for your delivery URL to bypass the cached version on the CDN and force delivery of the latest
            resource.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_forceVersion">
            <summary>
            Indicates whether to add '/v1/' to the URL when a 'version' value was not defined.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_cName">
            <summary>
            Custom domain for your URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_source">
            <summary>
            Source part of the URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_fallbackContent">
            <summary>
            An HTML string to display in the case that the browser does not support any of the video formats included.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_useSubDomain">
            <summary>
            Whether to use sub domain.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_sourceTransforms">
            <summary>
            Set transformation to override the default transformation instructions for each specific video format.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_customParts">
            <summary>
            Custom parts of the Url.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_videoSources">
            <summary>
            Sources for video tag.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_posterTransformation">
            <summary>
            The transformations to apply to the default image (you can include the public_id of an uploaded image to
            use instead of the default image).
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_posterSource">
            <summary>
            The source of the image to be shown while the video is downloading or until the user hits the play button.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_posterUrl">
            <summary>
            A URI to an image to be shown while the video is downloading or until the user hits the play button.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_sourceTypes">
            <summary>
            An ordered array of the video source types to include in the HTML5 tag, where the type is mapped to the
            mime type. Default: ['webm', 'mp4', 'ogv'].
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_action">
            <summary>
            The action to be added to the URL.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_resourceType">
            <summary>
            Type of the resource.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Url.m_transformation">
            <summary>
            The transformation to be added to the URL.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Url.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Url"/> class with cloud name.
            </summary>
            <param name="cloudName">The name of your cloud.</param>
        </member>
        <member name="M:CloudinaryDotNet.Url.#ctor(System.String,CloudinaryDotNet.ISignProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.Url"/> class with cloud name and sign provider.
            </summary>
            <param name="cloudName">The name of your cloud.</param>
            <param name="signProvider">Provider for signing parameters.</param>
        </member>
        <member name="P:CloudinaryDotNet.Url.FormatValue">
            <summary>
            Gets or sets file format of the requested resource.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.Url.Transformation">
            <summary>
            Gets the transformation to be added to the URL.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.Url.Shorten(System.Boolean)">
            <summary>
            Set whether to use shortened URL when possible.
            </summary>
            <param name="shorten">True - to use shorten URL.</param>
            <returns>The delivery URL with flag to shorten URL applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.CloudinaryAddr(System.String)">
            <summary>
            Set the cloudinary URL to access the resources.
            </summary>
            <param name="cloudinaryAddr">Cloud URL.</param>
            <returns>The delivery URL with Cloudinary address defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.CloudName(System.String)">
            <summary>
            Set cloud name from your account details.
            </summary>
            <param name="cloudName">Cloud name.</param>
            <returns>The delivery URL with cloud name defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Add(System.String)">
            <summary>
            Add custom part to the URL.
            </summary>
            <param name="part">Custom URL part.</param>
            <returns>The delivery URL with custom URL part added.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.VideoSources(CloudinaryDotNet.VideoSource[])">
            <summary>
            Add sources for video tag.
            </summary>
            <param name="videoSources">Array of video sources.</param>
            <returns>The delivery URL with video sources defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Action(System.String)">
            <summary>
            Add action to the URL.
            </summary>
            <param name="action">The action.</param>
            <returns>The delivery URL with action applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.ApiVersion(System.String)">
            <summary>
            Set the version of the cloudinary API.
            </summary>
            <param name="apiVersion">API version.</param>
            <returns>The delivery URL with API version defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Version(System.String)">
            <summary>
            Set version for your delivery URL to bypass the cached version on the CDN and force delivery of the latest
            resource.
            </summary>
            <param name="version">The version for your delivery URL.</param>
            <returns>The delivery URL with its version defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.ForceVersion(System.Boolean)">
            <summary>
            Indicates whether to add '/v1/' to the URL when the public ID includes folders and a 'version' value was
            not defined.
            When no version is explicitly specified and the public id contains folders, a default v1 version
            is added to the url. Set this boolean as false to prevent that behaviour.
            </summary>
            <param name="forceVersion">A boolean parameter indicating whether or not to add the version.</param>
            <returns>Url.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.AuthToken(CloudinaryDotNet.AuthToken)">
            <summary>
            Set authentication token for the token-based authentication.
            </summary>
            <param name="authToken">The authentication token.</param>
            <returns>The delivery URL with authentication token applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Source(System.String)">
            <summary>
            A Cloudinary public ID or file name or a reference to a resource.
            </summary>
            <param name="source">Public ID, file name or resource reference.</param>
            <returns>The delivery URL with resource reference defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.SourceTypes(System.String[])">
            <summary>
            An ordered array of the video source types to include in the HTML5 tag, where the type is mapped to the
            mime type. Default: ['webm', 'mp4', 'ogv'].
            </summary>
            <param name="sourceTypes">An ordered array of the video source types.</param>
            <returns>The delivery URL with video source types defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Signed(System.Boolean)">
            <summary>
            When true - add signature part to the Url.
            </summary>
            <param name="signed">Whether to add signature to the Url.</param>
            <returns>The delivery URL with signature flag applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.LongUrlSignature(System.Boolean)">
            <summary>
            When true - the Url signature will be generated by a SHA-256 algorithm
            and its first 32 characters used.
            </summary>
            <param name="isLong">Whether to generate 32 characters length signature.</param>
            <returns>The delivery URL with the flag applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.ResourceType(System.String)">
            <summary>
            Type of the resource.
            </summary>
            <param name="resourceType">The resource type.</param>
            <returns>The delivery URL with resource type defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Format(System.String)">
            <summary>
            Format of the resource file.
            </summary>
            <param name="format">File format.</param>
            <returns>The delivery URL with file format defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.SecureDistribution(System.String)">
            <summary>
            Set private CDN prefix for the Url.
            </summary>
            <param name="privateCdn">The prefix of private CDN.</param>
            <returns>The delivery URL with private CDN prefix applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.CName(System.String)">
            <summary>
            Set custom domain for the Url.
            </summary>
            <param name="cName">Custom domain name.</param>
            <returns>The delivery URL with CName applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Transform(CloudinaryDotNet.Transformation)">
            <summary>
            Set transformation for the Url.
            </summary>
            <param name="transformation">The transformation to be addded to the Url.</param>
            <returns>The delivery URL with transformation applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Secure(System.Boolean)">
            <summary>
            Force Url builder to use HTTPS URLs. Default: true.
            </summary>
            <param name="secure">Whether to use HTTPS Url.</param>
            <returns>The delivery URL with secure flag applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.PrivateCdn(System.Boolean)">
            <summary>
            Set wether to use a private CDN distribution.
            </summary>
            <param name="usePrivateCdn">Wether to use a private CDN distribution.</param>
            <returns>The delivery URL with private CDN flag applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.CSubDomain(System.Boolean)">
            <summary>
            Set whether to use sub domain.
            </summary>
            <param name="useSubDomain">Use sub domain.</param>
            <returns>The delivery URL with sub domain usage flag applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.UseRootPath(System.Boolean)">
            <summary>
            Use the resource type and type parameters are set to the default values 'image' and 'upload' respectively,
            which means that any URL without the resource type and type parameters.
            </summary>
            <param name="useRootPath">Whether to use root path.</param>
            <returns>The delivery URL with root path usage flag applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.FallbackContent(System.String)">
            <summary>
            Set HTML string to display in the case that the browser does not support any of the video formats included.
            </summary>
            <param name="fallbackContent">Fallback content string.</param>
            <returns>The delivery URL with fallback content defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Suffix(System.String)">
            <summary>
            Set descriptive suffix to add to the Public ID in the delivery Url.
            </summary>
            <param name="suffix">The suffix.</param>
            <returns>The delivery URL with suffix defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.SourceTransformationFor(System.String,CloudinaryDotNet.Transformation)">
            <summary>
            Set transformation for the specific video format.
            </summary>
            <param name="source">Video source format.</param>
            <param name="transform">Transformation to override the default transformation instructions.</param>
            <returns>The delivery URL with transformation applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.PosterTransform(CloudinaryDotNet.Transformation)">
            <summary>
            Set the transformations to apply to the default image (you can include the public_id of an uploaded image to
            use instead of the default image).
            </summary>
            <param name="transformation">Transformation for the poster.</param>
            <returns>The delivery URL with poster transformation applied.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.PosterSource(System.String)">
            <summary>
            Set the source of the image to be shown while the video is downloading or until the user hits the play button.
            </summary>
            <param name="source">The source of the poster image.</param>
            <returns>The delivery URL with poster image source defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.PosterUrl(CloudinaryDotNet.Url)">
            <summary>
            Set an Url to an image to be shown while the video is downloading or until the user hits the play button.
            </summary>
            <param name="url">Url to an image.</param>
            <returns>The delivery URL with poster image URL defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Poster(System.Object)">
            <summary>
            Set a poster to be shown while the video is downloading or until the user hits the play button.
            </summary>
            <param name="poster">
            Poster object. E.g. source string, transformation, Url or null to delete poster options.
            </param>
            <returns>The delivery URL with poster defined.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.BuildSpriteCss(System.String)">
            <summary>
            Build an Url to sprite css file.
            </summary>
            <param name="source">A Cloudinary public ID or file name or a reference to a resource.</param>
            <returns>A string that represents sprite css file URL.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.BuildImageTag(System.String,System.String[])">
            <summary>
            Build an HTML image tag for embedding in a web view.
            </summary>
            <param name="source">A Cloudinary public ID or file name or a reference to a resource.</param>
            <param name="keyValuePairs">Array of strings in form of "key=value".</param>
            <returns>A string that represents HTML image tag.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.BuildImageTag(System.String,CloudinaryDotNet.StringDictionary)">
            <summary>
            Build an HTML image tag for embedding in a web view.
            </summary>
            <param name="source">A Cloudinary public ID or file name or a reference to a resource.</param>
            <param name="dict">Additional parameters.</param>
            <returns>A string that represents HTML image tag.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.BuildVideoTag(System.String,System.String[])">
            <summary>
            Builds a video tag for embedding in a web view.
            </summary>
            <param name="source">A Cloudinary public ID or file name or a reference to a resource.</param>
            <param name="keyValuePairs">Array of strings in form of "key=value".</param>
            <returns>A string that represents video tag.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.BuildVideoTag(System.String,CloudinaryDotNet.StringDictionary)">
            <summary>
            Builds a video tag for embedding in a web view.
            </summary>
            <param name="source">A Cloudinary public ID or file name or a reference to a resource.</param>
            <param name="dict">Additional parameters.</param>
            <returns>A string that represents video tag.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.BuildUrl">
            <summary>
            Generate a transformation URL directly, without the containing image tag.
            </summary>
            <returns>The Url without image tag.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.BuildUrl(System.String)">
            <summary>
            Generate a transformation URL directly, without the containing image tag.
            </summary>
            <param name="source">The source part of the Url.</param>
            <returns>The Url without image tag.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.Clone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.CloudinaryDotNet#Core#ICloneable#Clone">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.VideoMimeType(System.String,System.String[])">
            <summary>
            Helper method for BuildVideoTag, generates video mime type from sourceType and codecs.
            </summary>
            <param name="sourceType">The type of the source.</param>
            <param name="codecs">Codecs.</param>
            <returns>Resulting mime type.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Url.MergeUrlTransformation(CloudinaryDotNet.Url,CloudinaryDotNet.Transformation)">
            <summary>
            Helper method to merge transformation for the URL.
            </summary>
            <param name="url">The URL with transformation to be merged.</param>
            <param name="transformationSrc">Transformation to merge.</param>
        </member>
        <member name="M:CloudinaryDotNet.Url.GetVideoSourceTags(System.String)">
             <summary>
             Helper method for BuildVideoTag, returns source tags from provided options.
            
             Source types and video sources are mutually exclusive, only one of them can be used.
             If both are not provided, default source types are used.
             </summary>
            
             <param name="source">The public ID of the video.</param>
            
             <returns>Resulting source tags (may be empty).</returns>
        </member>
        <member name="T:CloudinaryDotNet.UrlBuilder">
            <summary>
            Provides a custom constructor for uniform resource identifiers (URIs) and modifies URIs
            for the <see cref="T:CloudinaryDotNet.Url"/> class.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.UrlBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.UrlBuilder"/> class.
            Default parameterless constructor.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.UrlBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.UrlBuilder"/> class with the specified URI.
            </summary>
            <param name="uri">A URI string.</param>
        </member>
        <member name="M:CloudinaryDotNet.UrlBuilder.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.UrlBuilder"/> class
            with the specified URI and dictionary with cloudinary parameters.
            </summary>
            <param name="uri">A URI string.</param>
            <param name="params">Cloudinary parameters.</param>
        </member>
        <member name="M:CloudinaryDotNet.UrlBuilder.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.UrlBuilder"/> class with the specified <see cref="T:System.Uri"/> instance.
            </summary>
            <param name="uri">An instance of the <see cref="T:System.Uri"/> class.</param>
        </member>
        <member name="M:CloudinaryDotNet.UrlBuilder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.UrlBuilder"/> class with the specified scheme and host.
            </summary>
            <param name="schemeName">An Internet access protocol.</param>
            <param name="hostName">A DNS-style domain name or IP address.</param>
        </member>
        <member name="M:CloudinaryDotNet.UrlBuilder.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.UrlBuilder"/> class with the specified scheme, host, and port.
            </summary>
            <param name="scheme">An Internet access protocol.</param>
            <param name="host">A DNS-style domain name or IP address.</param>
            <param name="portNumber">An IP port number for the service.</param>
        </member>
        <member name="M:CloudinaryDotNet.UrlBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.UrlBuilder"/> class  with the specified scheme, host, port number, and path.
            </summary>
            <param name="scheme">An Internet access protocol.</param>
            <param name="host">A DNS-style domain name or IP address.</param>
            <param name="port">An IP port number for the service.</param>
            <param name="pathValue">The path to the Internet resource.</param>
        </member>
        <member name="M:CloudinaryDotNet.UrlBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudinaryDotNet.UrlBuilder"/> class
            with the specified scheme, host, port number, path and query string or fragment identifier.
            </summary>
            <param name="scheme">An Internet access protocol.</param>
            <param name="host">A DNS-style domain name or IP address.</param>
            <param name="port">An IP port number for the service.</param>
            <param name="path">The path to the Internet resource.</param>
            <param name="extraValue">A query string or fragment identifier.</param>
        </member>
        <member name="P:CloudinaryDotNet.UrlBuilder.QueryString">
            <summary>
            Gets the query information included in the Url.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.UrlBuilder.PageName">
            <summary>
            Gets or sets a path to the resource referenced by the Url.
            </summary>
        </member>
        <member name="M:CloudinaryDotNet.UrlBuilder.SetParameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Set parameters for the Url to be added as query string.
            </summary>
            <param name="params">Cloudinary parameters.</param>
        </member>
        <member name="M:CloudinaryDotNet.UrlBuilder.ToString">
            <summary>
            Returns a string that represents the current Url.
            </summary>
            <returns>A string that represents the URL.</returns>
        </member>
        <member name="T:CloudinaryDotNet.Utils">
            <summary>
            Implement generic utility functions.
            </summary>
        </member>
        <member name="F:CloudinaryDotNet.Utils.Epoch">
            <summary>Represents the Unix time starting point.</summary>
        </member>
        <member name="M:CloudinaryDotNet.Utils.FromUnixTimeSeconds(System.Int64)">
            <summary>
            Converts Unix epoch time in seconds to DateTime.
            </summary>
            <param name="unixTime">The epoch time to be converted.</param>
            <returns>Datetime.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.ToUnixTimeSeconds(System.DateTime)">
            <summary>
            Converts DateTime to Unix epoch time in seconds.
            </summary>
            <param name="date">The date to be converted.</param>
            <returns>Epoch time in seconds.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.UnixTimeNowSeconds">
            <summary>
            Unix epoch time now in seconds.
            </summary>
            <returns>total seconds since epoch.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.SafeJoin(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Concatenates items using provided separator, escaping separator character in each item.
            </summary>
            <param name="separator">The string to use as a separator.</param>
            <param name="items">IEnumerable to join.</param>
            <returns>The safely joined string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.IsRemoteFile(System.String)">
            <summary>
            Based on file path, determines if the file is hosted remotely.
            </summary>
            <param name="filePath"> Path to the file.</param>
            <returns>True if the file is remote; otherwise, false.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.Encode(System.String)">
            <summary>
            Encodes the supplied URL string as a new string.
            </summary>
            <param name="value">String to encode.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.EncodeUrlSafe(System.String)">
            <summary>
            Encode string to URL-safe Base64 string.
            </summary>
            <param name="s"> String to encode.</param>
            <returns>An URL-safe Base64-encoded string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.EncodeUrlSafe(System.Byte[])">
            <summary>
            Encode bytes to URL-safe Base64 string.
            </summary>
            <param name="bytes"> Byte array to encode.</param>
            <returns>An URL-safe Base64-encoded string.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.ComputeHash(System.String)">
            <summary>
            Computes the hash value for the specified string, using SHA-1 algorithm.
            </summary>
            <param name="s"> The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.ComputeSha256Hash(System.String)">
            <summary>
            Computes the hash value for the specified string, using SHA-256 algorithm.
            </summary>
            <param name="s"> The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.ComputeHexHash(System.String)">
            <summary>
            Compute hash and convert the result to HEX string.
            </summary>
            <param name="s"> String to calculate a hash for.</param>
            <returns>A HEX string that represents the result of hashing.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.PrepareJsonHeaders">
            <summary>
            Prepare HTTP headers that denote that request content is encoded in JSON format.
            </summary>
            <returns>Map of HTTP headers.</returns>
        </member>
        <member name="M:CloudinaryDotNet.Utils.ShouldBeSpecified(System.Linq.Expressions.Expression{System.Func{System.Object}})">
            <summary>
            Validate that an object's property is specified.
            </summary>
            <param name="propertyExpr">Function that gets object's property value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Utils.ShouldBeSpecified``1(System.Linq.Expressions.Expression{System.Func{System.Nullable{``0}}})">
            <summary>
            Validate that an object's property is specified.
            </summary>
            <param name="propertyExpr">Function that gets object's property value.</param>
            <typeparam name="T">Value type.</typeparam>
        </member>
        <member name="M:CloudinaryDotNet.Utils.ShouldNotBeSpecified(System.Linq.Expressions.Expression{System.Func{System.Object}})">
            <summary>
            Validate that an object's property is not specified.
            </summary>
            <param name="propertyExpr">Expression that gets object's property value.</param>
        </member>
        <member name="M:CloudinaryDotNet.Utils.ShouldNotBeEmpty(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Validate that an object's property is not empty string.
            </summary>
            <param name="propertyExpr">Expression that gets object's property value.</param>
            <param name="message">General part of the validation exception message.</param>
        </member>
        <member name="M:CloudinaryDotNet.Utils.ShouldNotBeEmpty``1(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.List{``0}}})">
            <summary>
            Validate that an object's property is not empty collection.
            </summary>
            <param name="propertyExpr">Expression that gets object's property value.</param>
            <typeparam name="TP">Collection item type.</typeparam>
        </member>
        <member name="T:CloudinaryDotNet.CloudinaryVersion">
            <summary>
            Contains information about release version.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.CloudinaryVersion.Full">
            <summary>
            Gets full version number of Cloudinary .NET SDK.
            </summary>
        </member>
        <member name="T:CloudinaryDotNet.VideoSource">
            <summary>
            Source for video tag.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.VideoSource.Type">
            <summary>
            Gets or sets one of the HTML5 video tag MIME types: video/mp4, video/webm, video/ogg.
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.VideoSource.Codecs">
            <summary>
            Gets or sets a single value, or a comma-separated list of values identifying the codec(s) that should be used to
            generate the video. The codec definition can include additional properties,separated with a dot.
            For example, codecs="avc1.42E01E,mp4a.40.2".
            </summary>
        </member>
        <member name="P:CloudinaryDotNet.VideoSource.Transformation">
            <summary>
            Gets or sets transformation, applied to the <see cref="P:CloudinaryDotNet.VideoSource.Type"/> in video tag.
            </summary>
        </member>
    </members>
</doc>
